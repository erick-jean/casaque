
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model caracteristicas
 * 
 */
export type caracteristicas = $Result.DefaultSelection<Prisma.$caracteristicasPayload>
/**
 * Model corretores
 * 
 */
export type corretores = $Result.DefaultSelection<Prisma.$corretoresPayload>
/**
 * Model estados
 * 
 */
export type estados = $Result.DefaultSelection<Prisma.$estadosPayload>
/**
 * Model favoritos
 * 
 */
export type favoritos = $Result.DefaultSelection<Prisma.$favoritosPayload>
/**
 * Model imobiliarias
 * 
 */
export type imobiliarias = $Result.DefaultSelection<Prisma.$imobiliariasPayload>
/**
 * Model imoveis
 * 
 */
export type imoveis = $Result.DefaultSelection<Prisma.$imoveisPayload>
/**
 * Model imovel_caracteristicas
 * 
 */
export type imovel_caracteristicas = $Result.DefaultSelection<Prisma.$imovel_caracteristicasPayload>
/**
 * Model regioes
 * 
 */
export type regioes = $Result.DefaultSelection<Prisma.$regioesPayload>
/**
 * Model subtipos_imovel
 * 
 */
export type subtipos_imovel = $Result.DefaultSelection<Prisma.$subtipos_imovelPayload>
/**
 * Model tipos_imovel
 * 
 */
export type tipos_imovel = $Result.DefaultSelection<Prisma.$tipos_imovelPayload>
/**
 * Model usuarios
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Caracteristicas
 * const caracteristicas = await prisma.caracteristicas.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Caracteristicas
   * const caracteristicas = await prisma.caracteristicas.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.caracteristicas`: Exposes CRUD operations for the **caracteristicas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Caracteristicas
    * const caracteristicas = await prisma.caracteristicas.findMany()
    * ```
    */
  get caracteristicas(): Prisma.caracteristicasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.corretores`: Exposes CRUD operations for the **corretores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Corretores
    * const corretores = await prisma.corretores.findMany()
    * ```
    */
  get corretores(): Prisma.corretoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estados`: Exposes CRUD operations for the **estados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estados
    * const estados = await prisma.estados.findMany()
    * ```
    */
  get estados(): Prisma.estadosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoritos`: Exposes CRUD operations for the **favoritos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favoritos.findMany()
    * ```
    */
  get favoritos(): Prisma.favoritosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imobiliarias`: Exposes CRUD operations for the **imobiliarias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imobiliarias
    * const imobiliarias = await prisma.imobiliarias.findMany()
    * ```
    */
  get imobiliarias(): Prisma.imobiliariasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imoveis`: Exposes CRUD operations for the **imoveis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imoveis
    * const imoveis = await prisma.imoveis.findMany()
    * ```
    */
  get imoveis(): Prisma.imoveisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imovel_caracteristicas`: Exposes CRUD operations for the **imovel_caracteristicas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imovel_caracteristicas
    * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findMany()
    * ```
    */
  get imovel_caracteristicas(): Prisma.imovel_caracteristicasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.regioes`: Exposes CRUD operations for the **regioes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Regioes
    * const regioes = await prisma.regioes.findMany()
    * ```
    */
  get regioes(): Prisma.regioesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subtipos_imovel`: Exposes CRUD operations for the **subtipos_imovel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subtipos_imovels
    * const subtipos_imovels = await prisma.subtipos_imovel.findMany()
    * ```
    */
  get subtipos_imovel(): Prisma.subtipos_imovelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipos_imovel`: Exposes CRUD operations for the **tipos_imovel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipos_imovels
    * const tipos_imovels = await prisma.tipos_imovel.findMany()
    * ```
    */
  get tipos_imovel(): Prisma.tipos_imovelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    caracteristicas: 'caracteristicas',
    corretores: 'corretores',
    estados: 'estados',
    favoritos: 'favoritos',
    imobiliarias: 'imobiliarias',
    imoveis: 'imoveis',
    imovel_caracteristicas: 'imovel_caracteristicas',
    regioes: 'regioes',
    subtipos_imovel: 'subtipos_imovel',
    tipos_imovel: 'tipos_imovel',
    usuarios: 'usuarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "caracteristicas" | "corretores" | "estados" | "favoritos" | "imobiliarias" | "imoveis" | "imovel_caracteristicas" | "regioes" | "subtipos_imovel" | "tipos_imovel" | "usuarios"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      caracteristicas: {
        payload: Prisma.$caracteristicasPayload<ExtArgs>
        fields: Prisma.caracteristicasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.caracteristicasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.caracteristicasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          findFirst: {
            args: Prisma.caracteristicasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.caracteristicasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          findMany: {
            args: Prisma.caracteristicasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>[]
          }
          create: {
            args: Prisma.caracteristicasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          createMany: {
            args: Prisma.caracteristicasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.caracteristicasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>[]
          }
          delete: {
            args: Prisma.caracteristicasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          update: {
            args: Prisma.caracteristicasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          deleteMany: {
            args: Prisma.caracteristicasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.caracteristicasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.caracteristicasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>[]
          }
          upsert: {
            args: Prisma.caracteristicasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$caracteristicasPayload>
          }
          aggregate: {
            args: Prisma.CaracteristicasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCaracteristicas>
          }
          groupBy: {
            args: Prisma.caracteristicasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CaracteristicasGroupByOutputType>[]
          }
          count: {
            args: Prisma.caracteristicasCountArgs<ExtArgs>
            result: $Utils.Optional<CaracteristicasCountAggregateOutputType> | number
          }
        }
      }
      corretores: {
        payload: Prisma.$corretoresPayload<ExtArgs>
        fields: Prisma.corretoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.corretoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.corretoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          findFirst: {
            args: Prisma.corretoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.corretoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          findMany: {
            args: Prisma.corretoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>[]
          }
          create: {
            args: Prisma.corretoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          createMany: {
            args: Prisma.corretoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.corretoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>[]
          }
          delete: {
            args: Prisma.corretoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          update: {
            args: Prisma.corretoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          deleteMany: {
            args: Prisma.corretoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.corretoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.corretoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>[]
          }
          upsert: {
            args: Prisma.corretoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$corretoresPayload>
          }
          aggregate: {
            args: Prisma.CorretoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCorretores>
          }
          groupBy: {
            args: Prisma.corretoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<CorretoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.corretoresCountArgs<ExtArgs>
            result: $Utils.Optional<CorretoresCountAggregateOutputType> | number
          }
        }
      }
      estados: {
        payload: Prisma.$estadosPayload<ExtArgs>
        fields: Prisma.estadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          findFirst: {
            args: Prisma.estadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          findMany: {
            args: Prisma.estadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>[]
          }
          create: {
            args: Prisma.estadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          createMany: {
            args: Prisma.estadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estadosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>[]
          }
          delete: {
            args: Prisma.estadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          update: {
            args: Prisma.estadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          deleteMany: {
            args: Prisma.estadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estadosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>[]
          }
          upsert: {
            args: Prisma.estadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadosPayload>
          }
          aggregate: {
            args: Prisma.EstadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstados>
          }
          groupBy: {
            args: Prisma.estadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.estadosCountArgs<ExtArgs>
            result: $Utils.Optional<EstadosCountAggregateOutputType> | number
          }
        }
      }
      favoritos: {
        payload: Prisma.$favoritosPayload<ExtArgs>
        fields: Prisma.favoritosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.favoritosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.favoritosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          findFirst: {
            args: Prisma.favoritosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.favoritosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          findMany: {
            args: Prisma.favoritosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>[]
          }
          create: {
            args: Prisma.favoritosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          createMany: {
            args: Prisma.favoritosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.favoritosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>[]
          }
          delete: {
            args: Prisma.favoritosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          update: {
            args: Prisma.favoritosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          deleteMany: {
            args: Prisma.favoritosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.favoritosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.favoritosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>[]
          }
          upsert: {
            args: Prisma.favoritosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritosPayload>
          }
          aggregate: {
            args: Prisma.FavoritosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoritos>
          }
          groupBy: {
            args: Prisma.favoritosGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritosGroupByOutputType>[]
          }
          count: {
            args: Prisma.favoritosCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritosCountAggregateOutputType> | number
          }
        }
      }
      imobiliarias: {
        payload: Prisma.$imobiliariasPayload<ExtArgs>
        fields: Prisma.imobiliariasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imobiliariasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imobiliariasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          findFirst: {
            args: Prisma.imobiliariasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imobiliariasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          findMany: {
            args: Prisma.imobiliariasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>[]
          }
          create: {
            args: Prisma.imobiliariasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          createMany: {
            args: Prisma.imobiliariasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.imobiliariasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>[]
          }
          delete: {
            args: Prisma.imobiliariasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          update: {
            args: Prisma.imobiliariasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          deleteMany: {
            args: Prisma.imobiliariasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imobiliariasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.imobiliariasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>[]
          }
          upsert: {
            args: Prisma.imobiliariasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imobiliariasPayload>
          }
          aggregate: {
            args: Prisma.ImobiliariasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImobiliarias>
          }
          groupBy: {
            args: Prisma.imobiliariasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImobiliariasGroupByOutputType>[]
          }
          count: {
            args: Prisma.imobiliariasCountArgs<ExtArgs>
            result: $Utils.Optional<ImobiliariasCountAggregateOutputType> | number
          }
        }
      }
      imoveis: {
        payload: Prisma.$imoveisPayload<ExtArgs>
        fields: Prisma.imoveisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imoveisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imoveisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          findFirst: {
            args: Prisma.imoveisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imoveisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          findMany: {
            args: Prisma.imoveisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>[]
          }
          create: {
            args: Prisma.imoveisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          createMany: {
            args: Prisma.imoveisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.imoveisCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>[]
          }
          delete: {
            args: Prisma.imoveisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          update: {
            args: Prisma.imoveisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          deleteMany: {
            args: Prisma.imoveisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imoveisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.imoveisUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>[]
          }
          upsert: {
            args: Prisma.imoveisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imoveisPayload>
          }
          aggregate: {
            args: Prisma.ImoveisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImoveis>
          }
          groupBy: {
            args: Prisma.imoveisGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImoveisGroupByOutputType>[]
          }
          count: {
            args: Prisma.imoveisCountArgs<ExtArgs>
            result: $Utils.Optional<ImoveisCountAggregateOutputType> | number
          }
        }
      }
      imovel_caracteristicas: {
        payload: Prisma.$imovel_caracteristicasPayload<ExtArgs>
        fields: Prisma.imovel_caracteristicasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imovel_caracteristicasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imovel_caracteristicasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          findFirst: {
            args: Prisma.imovel_caracteristicasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imovel_caracteristicasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          findMany: {
            args: Prisma.imovel_caracteristicasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>[]
          }
          create: {
            args: Prisma.imovel_caracteristicasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          createMany: {
            args: Prisma.imovel_caracteristicasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.imovel_caracteristicasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>[]
          }
          delete: {
            args: Prisma.imovel_caracteristicasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          update: {
            args: Prisma.imovel_caracteristicasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          deleteMany: {
            args: Prisma.imovel_caracteristicasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imovel_caracteristicasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.imovel_caracteristicasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>[]
          }
          upsert: {
            args: Prisma.imovel_caracteristicasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imovel_caracteristicasPayload>
          }
          aggregate: {
            args: Prisma.Imovel_caracteristicasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImovel_caracteristicas>
          }
          groupBy: {
            args: Prisma.imovel_caracteristicasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Imovel_caracteristicasGroupByOutputType>[]
          }
          count: {
            args: Prisma.imovel_caracteristicasCountArgs<ExtArgs>
            result: $Utils.Optional<Imovel_caracteristicasCountAggregateOutputType> | number
          }
        }
      }
      regioes: {
        payload: Prisma.$regioesPayload<ExtArgs>
        fields: Prisma.regioesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.regioesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.regioesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          findFirst: {
            args: Prisma.regioesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.regioesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          findMany: {
            args: Prisma.regioesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>[]
          }
          create: {
            args: Prisma.regioesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          createMany: {
            args: Prisma.regioesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.regioesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>[]
          }
          delete: {
            args: Prisma.regioesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          update: {
            args: Prisma.regioesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          deleteMany: {
            args: Prisma.regioesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.regioesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.regioesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>[]
          }
          upsert: {
            args: Prisma.regioesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$regioesPayload>
          }
          aggregate: {
            args: Prisma.RegioesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegioes>
          }
          groupBy: {
            args: Prisma.regioesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegioesGroupByOutputType>[]
          }
          count: {
            args: Prisma.regioesCountArgs<ExtArgs>
            result: $Utils.Optional<RegioesCountAggregateOutputType> | number
          }
        }
      }
      subtipos_imovel: {
        payload: Prisma.$subtipos_imovelPayload<ExtArgs>
        fields: Prisma.subtipos_imovelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subtipos_imovelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subtipos_imovelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          findFirst: {
            args: Prisma.subtipos_imovelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subtipos_imovelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          findMany: {
            args: Prisma.subtipos_imovelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>[]
          }
          create: {
            args: Prisma.subtipos_imovelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          createMany: {
            args: Prisma.subtipos_imovelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subtipos_imovelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>[]
          }
          delete: {
            args: Prisma.subtipos_imovelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          update: {
            args: Prisma.subtipos_imovelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          deleteMany: {
            args: Prisma.subtipos_imovelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subtipos_imovelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subtipos_imovelUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>[]
          }
          upsert: {
            args: Prisma.subtipos_imovelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subtipos_imovelPayload>
          }
          aggregate: {
            args: Prisma.Subtipos_imovelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubtipos_imovel>
          }
          groupBy: {
            args: Prisma.subtipos_imovelGroupByArgs<ExtArgs>
            result: $Utils.Optional<Subtipos_imovelGroupByOutputType>[]
          }
          count: {
            args: Prisma.subtipos_imovelCountArgs<ExtArgs>
            result: $Utils.Optional<Subtipos_imovelCountAggregateOutputType> | number
          }
        }
      }
      tipos_imovel: {
        payload: Prisma.$tipos_imovelPayload<ExtArgs>
        fields: Prisma.tipos_imovelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipos_imovelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipos_imovelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          findFirst: {
            args: Prisma.tipos_imovelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipos_imovelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          findMany: {
            args: Prisma.tipos_imovelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>[]
          }
          create: {
            args: Prisma.tipos_imovelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          createMany: {
            args: Prisma.tipos_imovelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipos_imovelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>[]
          }
          delete: {
            args: Prisma.tipos_imovelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          update: {
            args: Prisma.tipos_imovelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          deleteMany: {
            args: Prisma.tipos_imovelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipos_imovelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipos_imovelUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>[]
          }
          upsert: {
            args: Prisma.tipos_imovelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipos_imovelPayload>
          }
          aggregate: {
            args: Prisma.Tipos_imovelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipos_imovel>
          }
          groupBy: {
            args: Prisma.tipos_imovelGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipos_imovelGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipos_imovelCountArgs<ExtArgs>
            result: $Utils.Optional<Tipos_imovelCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuariosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    caracteristicas?: caracteristicasOmit
    corretores?: corretoresOmit
    estados?: estadosOmit
    favoritos?: favoritosOmit
    imobiliarias?: imobiliariasOmit
    imoveis?: imoveisOmit
    imovel_caracteristicas?: imovel_caracteristicasOmit
    regioes?: regioesOmit
    subtipos_imovel?: subtipos_imovelOmit
    tipos_imovel?: tipos_imovelOmit
    usuarios?: usuariosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CaracteristicasCountOutputType
   */

  export type CaracteristicasCountOutputType = {
    imovel_caracteristicas: number
  }

  export type CaracteristicasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imovel_caracteristicas?: boolean | CaracteristicasCountOutputTypeCountImovel_caracteristicasArgs
  }

  // Custom InputTypes
  /**
   * CaracteristicasCountOutputType without action
   */
  export type CaracteristicasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicasCountOutputType
     */
    select?: CaracteristicasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CaracteristicasCountOutputType without action
   */
  export type CaracteristicasCountOutputTypeCountImovel_caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imovel_caracteristicasWhereInput
  }


  /**
   * Count Type CorretoresCountOutputType
   */

  export type CorretoresCountOutputType = {
    imoveis: number
  }

  export type CorretoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | CorretoresCountOutputTypeCountImoveisArgs
  }

  // Custom InputTypes
  /**
   * CorretoresCountOutputType without action
   */
  export type CorretoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CorretoresCountOutputType
     */
    select?: CorretoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CorretoresCountOutputType without action
   */
  export type CorretoresCountOutputTypeCountImoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imoveisWhereInput
  }


  /**
   * Count Type ImobiliariasCountOutputType
   */

  export type ImobiliariasCountOutputType = {
    corretores: number
  }

  export type ImobiliariasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    corretores?: boolean | ImobiliariasCountOutputTypeCountCorretoresArgs
  }

  // Custom InputTypes
  /**
   * ImobiliariasCountOutputType without action
   */
  export type ImobiliariasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImobiliariasCountOutputType
     */
    select?: ImobiliariasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImobiliariasCountOutputType without action
   */
  export type ImobiliariasCountOutputTypeCountCorretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: corretoresWhereInput
  }


  /**
   * Count Type ImoveisCountOutputType
   */

  export type ImoveisCountOutputType = {
    favoritos: number
    imovel_caracteristicas: number
  }

  export type ImoveisCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | ImoveisCountOutputTypeCountFavoritosArgs
    imovel_caracteristicas?: boolean | ImoveisCountOutputTypeCountImovel_caracteristicasArgs
  }

  // Custom InputTypes
  /**
   * ImoveisCountOutputType without action
   */
  export type ImoveisCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImoveisCountOutputType
     */
    select?: ImoveisCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImoveisCountOutputType without action
   */
  export type ImoveisCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
  }

  /**
   * ImoveisCountOutputType without action
   */
  export type ImoveisCountOutputTypeCountImovel_caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imovel_caracteristicasWhereInput
  }


  /**
   * Count Type RegioesCountOutputType
   */

  export type RegioesCountOutputType = {
    estados: number
  }

  export type RegioesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estados?: boolean | RegioesCountOutputTypeCountEstadosArgs
  }

  // Custom InputTypes
  /**
   * RegioesCountOutputType without action
   */
  export type RegioesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegioesCountOutputType
     */
    select?: RegioesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegioesCountOutputType without action
   */
  export type RegioesCountOutputTypeCountEstadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estadosWhereInput
  }


  /**
   * Count Type Subtipos_imovelCountOutputType
   */

  export type Subtipos_imovelCountOutputType = {
    imoveis: number
  }

  export type Subtipos_imovelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | Subtipos_imovelCountOutputTypeCountImoveisArgs
  }

  // Custom InputTypes
  /**
   * Subtipos_imovelCountOutputType without action
   */
  export type Subtipos_imovelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subtipos_imovelCountOutputType
     */
    select?: Subtipos_imovelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Subtipos_imovelCountOutputType without action
   */
  export type Subtipos_imovelCountOutputTypeCountImoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imoveisWhereInput
  }


  /**
   * Count Type Tipos_imovelCountOutputType
   */

  export type Tipos_imovelCountOutputType = {
    imoveis: number
    subtipos_imovel: number
  }

  export type Tipos_imovelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | Tipos_imovelCountOutputTypeCountImoveisArgs
    subtipos_imovel?: boolean | Tipos_imovelCountOutputTypeCountSubtipos_imovelArgs
  }

  // Custom InputTypes
  /**
   * Tipos_imovelCountOutputType without action
   */
  export type Tipos_imovelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipos_imovelCountOutputType
     */
    select?: Tipos_imovelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipos_imovelCountOutputType without action
   */
  export type Tipos_imovelCountOutputTypeCountImoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imoveisWhereInput
  }

  /**
   * Tipos_imovelCountOutputType without action
   */
  export type Tipos_imovelCountOutputTypeCountSubtipos_imovelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subtipos_imovelWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    favoritos: number
    imoveis: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | UsuariosCountOutputTypeCountFavoritosArgs
    imoveis?: boolean | UsuariosCountOutputTypeCountImoveisArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountImoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imoveisWhereInput
  }


  /**
   * Models
   */

  /**
   * Model caracteristicas
   */

  export type AggregateCaracteristicas = {
    _count: CaracteristicasCountAggregateOutputType | null
    _avg: CaracteristicasAvgAggregateOutputType | null
    _sum: CaracteristicasSumAggregateOutputType | null
    _min: CaracteristicasMinAggregateOutputType | null
    _max: CaracteristicasMaxAggregateOutputType | null
  }

  export type CaracteristicasAvgAggregateOutputType = {
    id: number | null
  }

  export type CaracteristicasSumAggregateOutputType = {
    id: number | null
  }

  export type CaracteristicasMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type CaracteristicasMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type CaracteristicasCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type CaracteristicasAvgAggregateInputType = {
    id?: true
  }

  export type CaracteristicasSumAggregateInputType = {
    id?: true
  }

  export type CaracteristicasMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type CaracteristicasMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type CaracteristicasCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type CaracteristicasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caracteristicas to aggregate.
     */
    where?: caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicasOrderByWithRelationInput | caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned caracteristicas
    **/
    _count?: true | CaracteristicasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CaracteristicasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CaracteristicasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CaracteristicasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CaracteristicasMaxAggregateInputType
  }

  export type GetCaracteristicasAggregateType<T extends CaracteristicasAggregateArgs> = {
        [P in keyof T & keyof AggregateCaracteristicas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCaracteristicas[P]>
      : GetScalarType<T[P], AggregateCaracteristicas[P]>
  }




  export type caracteristicasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: caracteristicasWhereInput
    orderBy?: caracteristicasOrderByWithAggregationInput | caracteristicasOrderByWithAggregationInput[]
    by: CaracteristicasScalarFieldEnum[] | CaracteristicasScalarFieldEnum
    having?: caracteristicasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CaracteristicasCountAggregateInputType | true
    _avg?: CaracteristicasAvgAggregateInputType
    _sum?: CaracteristicasSumAggregateInputType
    _min?: CaracteristicasMinAggregateInputType
    _max?: CaracteristicasMaxAggregateInputType
  }

  export type CaracteristicasGroupByOutputType = {
    id: number
    nome: string
    _count: CaracteristicasCountAggregateOutputType | null
    _avg: CaracteristicasAvgAggregateOutputType | null
    _sum: CaracteristicasSumAggregateOutputType | null
    _min: CaracteristicasMinAggregateOutputType | null
    _max: CaracteristicasMaxAggregateOutputType | null
  }

  type GetCaracteristicasGroupByPayload<T extends caracteristicasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CaracteristicasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CaracteristicasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CaracteristicasGroupByOutputType[P]>
            : GetScalarType<T[P], CaracteristicasGroupByOutputType[P]>
        }
      >
    >


  export type caracteristicasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    imovel_caracteristicas?: boolean | caracteristicas$imovel_caracteristicasArgs<ExtArgs>
    _count?: boolean | CaracteristicasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["caracteristicas"]>

  export type caracteristicasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["caracteristicas"]>

  export type caracteristicasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["caracteristicas"]>

  export type caracteristicasSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type caracteristicasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome", ExtArgs["result"]["caracteristicas"]>
  export type caracteristicasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imovel_caracteristicas?: boolean | caracteristicas$imovel_caracteristicasArgs<ExtArgs>
    _count?: boolean | CaracteristicasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type caracteristicasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type caracteristicasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $caracteristicasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "caracteristicas"
    objects: {
      imovel_caracteristicas: Prisma.$imovel_caracteristicasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["caracteristicas"]>
    composites: {}
  }

  type caracteristicasGetPayload<S extends boolean | null | undefined | caracteristicasDefaultArgs> = $Result.GetResult<Prisma.$caracteristicasPayload, S>

  type caracteristicasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<caracteristicasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CaracteristicasCountAggregateInputType | true
    }

  export interface caracteristicasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['caracteristicas'], meta: { name: 'caracteristicas' } }
    /**
     * Find zero or one Caracteristicas that matches the filter.
     * @param {caracteristicasFindUniqueArgs} args - Arguments to find a Caracteristicas
     * @example
     * // Get one Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends caracteristicasFindUniqueArgs>(args: SelectSubset<T, caracteristicasFindUniqueArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Caracteristicas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {caracteristicasFindUniqueOrThrowArgs} args - Arguments to find a Caracteristicas
     * @example
     * // Get one Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends caracteristicasFindUniqueOrThrowArgs>(args: SelectSubset<T, caracteristicasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Caracteristicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasFindFirstArgs} args - Arguments to find a Caracteristicas
     * @example
     * // Get one Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends caracteristicasFindFirstArgs>(args?: SelectSubset<T, caracteristicasFindFirstArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Caracteristicas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasFindFirstOrThrowArgs} args - Arguments to find a Caracteristicas
     * @example
     * // Get one Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends caracteristicasFindFirstOrThrowArgs>(args?: SelectSubset<T, caracteristicasFindFirstOrThrowArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Caracteristicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findMany()
     * 
     * // Get first 10 Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const caracteristicasWithIdOnly = await prisma.caracteristicas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends caracteristicasFindManyArgs>(args?: SelectSubset<T, caracteristicasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Caracteristicas.
     * @param {caracteristicasCreateArgs} args - Arguments to create a Caracteristicas.
     * @example
     * // Create one Caracteristicas
     * const Caracteristicas = await prisma.caracteristicas.create({
     *   data: {
     *     // ... data to create a Caracteristicas
     *   }
     * })
     * 
     */
    create<T extends caracteristicasCreateArgs>(args: SelectSubset<T, caracteristicasCreateArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Caracteristicas.
     * @param {caracteristicasCreateManyArgs} args - Arguments to create many Caracteristicas.
     * @example
     * // Create many Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends caracteristicasCreateManyArgs>(args?: SelectSubset<T, caracteristicasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Caracteristicas and returns the data saved in the database.
     * @param {caracteristicasCreateManyAndReturnArgs} args - Arguments to create many Caracteristicas.
     * @example
     * // Create many Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Caracteristicas and only return the `id`
     * const caracteristicasWithIdOnly = await prisma.caracteristicas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends caracteristicasCreateManyAndReturnArgs>(args?: SelectSubset<T, caracteristicasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Caracteristicas.
     * @param {caracteristicasDeleteArgs} args - Arguments to delete one Caracteristicas.
     * @example
     * // Delete one Caracteristicas
     * const Caracteristicas = await prisma.caracteristicas.delete({
     *   where: {
     *     // ... filter to delete one Caracteristicas
     *   }
     * })
     * 
     */
    delete<T extends caracteristicasDeleteArgs>(args: SelectSubset<T, caracteristicasDeleteArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Caracteristicas.
     * @param {caracteristicasUpdateArgs} args - Arguments to update one Caracteristicas.
     * @example
     * // Update one Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends caracteristicasUpdateArgs>(args: SelectSubset<T, caracteristicasUpdateArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Caracteristicas.
     * @param {caracteristicasDeleteManyArgs} args - Arguments to filter Caracteristicas to delete.
     * @example
     * // Delete a few Caracteristicas
     * const { count } = await prisma.caracteristicas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends caracteristicasDeleteManyArgs>(args?: SelectSubset<T, caracteristicasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends caracteristicasUpdateManyArgs>(args: SelectSubset<T, caracteristicasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caracteristicas and returns the data updated in the database.
     * @param {caracteristicasUpdateManyAndReturnArgs} args - Arguments to update many Caracteristicas.
     * @example
     * // Update many Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Caracteristicas and only return the `id`
     * const caracteristicasWithIdOnly = await prisma.caracteristicas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends caracteristicasUpdateManyAndReturnArgs>(args: SelectSubset<T, caracteristicasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Caracteristicas.
     * @param {caracteristicasUpsertArgs} args - Arguments to update or create a Caracteristicas.
     * @example
     * // Update or create a Caracteristicas
     * const caracteristicas = await prisma.caracteristicas.upsert({
     *   create: {
     *     // ... data to create a Caracteristicas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Caracteristicas we want to update
     *   }
     * })
     */
    upsert<T extends caracteristicasUpsertArgs>(args: SelectSubset<T, caracteristicasUpsertArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasCountArgs} args - Arguments to filter Caracteristicas to count.
     * @example
     * // Count the number of Caracteristicas
     * const count = await prisma.caracteristicas.count({
     *   where: {
     *     // ... the filter for the Caracteristicas we want to count
     *   }
     * })
    **/
    count<T extends caracteristicasCountArgs>(
      args?: Subset<T, caracteristicasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CaracteristicasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CaracteristicasAggregateArgs>(args: Subset<T, CaracteristicasAggregateArgs>): Prisma.PrismaPromise<GetCaracteristicasAggregateType<T>>

    /**
     * Group by Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends caracteristicasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: caracteristicasGroupByArgs['orderBy'] }
        : { orderBy?: caracteristicasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, caracteristicasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCaracteristicasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the caracteristicas model
   */
  readonly fields: caracteristicasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for caracteristicas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__caracteristicasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imovel_caracteristicas<T extends caracteristicas$imovel_caracteristicasArgs<ExtArgs> = {}>(args?: Subset<T, caracteristicas$imovel_caracteristicasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the caracteristicas model
   */
  interface caracteristicasFieldRefs {
    readonly id: FieldRef<"caracteristicas", 'Int'>
    readonly nome: FieldRef<"caracteristicas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * caracteristicas findUnique
   */
  export type caracteristicasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where: caracteristicasWhereUniqueInput
  }

  /**
   * caracteristicas findUniqueOrThrow
   */
  export type caracteristicasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where: caracteristicasWhereUniqueInput
  }

  /**
   * caracteristicas findFirst
   */
  export type caracteristicasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where?: caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicasOrderByWithRelationInput | caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caracteristicas.
     */
    cursor?: caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caracteristicas.
     */
    distinct?: CaracteristicasScalarFieldEnum | CaracteristicasScalarFieldEnum[]
  }

  /**
   * caracteristicas findFirstOrThrow
   */
  export type caracteristicasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where?: caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicasOrderByWithRelationInput | caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caracteristicas.
     */
    cursor?: caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caracteristicas.
     */
    distinct?: CaracteristicasScalarFieldEnum | CaracteristicasScalarFieldEnum[]
  }

  /**
   * caracteristicas findMany
   */
  export type caracteristicasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where?: caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicasOrderByWithRelationInput | caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing caracteristicas.
     */
    cursor?: caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    distinct?: CaracteristicasScalarFieldEnum | CaracteristicasScalarFieldEnum[]
  }

  /**
   * caracteristicas create
   */
  export type caracteristicasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * The data needed to create a caracteristicas.
     */
    data: XOR<caracteristicasCreateInput, caracteristicasUncheckedCreateInput>
  }

  /**
   * caracteristicas createMany
   */
  export type caracteristicasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many caracteristicas.
     */
    data: caracteristicasCreateManyInput | caracteristicasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * caracteristicas createManyAndReturn
   */
  export type caracteristicasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * The data used to create many caracteristicas.
     */
    data: caracteristicasCreateManyInput | caracteristicasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * caracteristicas update
   */
  export type caracteristicasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * The data needed to update a caracteristicas.
     */
    data: XOR<caracteristicasUpdateInput, caracteristicasUncheckedUpdateInput>
    /**
     * Choose, which caracteristicas to update.
     */
    where: caracteristicasWhereUniqueInput
  }

  /**
   * caracteristicas updateMany
   */
  export type caracteristicasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update caracteristicas.
     */
    data: XOR<caracteristicasUpdateManyMutationInput, caracteristicasUncheckedUpdateManyInput>
    /**
     * Filter which caracteristicas to update
     */
    where?: caracteristicasWhereInput
    /**
     * Limit how many caracteristicas to update.
     */
    limit?: number
  }

  /**
   * caracteristicas updateManyAndReturn
   */
  export type caracteristicasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * The data used to update caracteristicas.
     */
    data: XOR<caracteristicasUpdateManyMutationInput, caracteristicasUncheckedUpdateManyInput>
    /**
     * Filter which caracteristicas to update
     */
    where?: caracteristicasWhereInput
    /**
     * Limit how many caracteristicas to update.
     */
    limit?: number
  }

  /**
   * caracteristicas upsert
   */
  export type caracteristicasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * The filter to search for the caracteristicas to update in case it exists.
     */
    where: caracteristicasWhereUniqueInput
    /**
     * In case the caracteristicas found by the `where` argument doesn't exist, create a new caracteristicas with this data.
     */
    create: XOR<caracteristicasCreateInput, caracteristicasUncheckedCreateInput>
    /**
     * In case the caracteristicas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<caracteristicasUpdateInput, caracteristicasUncheckedUpdateInput>
  }

  /**
   * caracteristicas delete
   */
  export type caracteristicasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
    /**
     * Filter which caracteristicas to delete.
     */
    where: caracteristicasWhereUniqueInput
  }

  /**
   * caracteristicas deleteMany
   */
  export type caracteristicasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caracteristicas to delete
     */
    where?: caracteristicasWhereInput
    /**
     * Limit how many caracteristicas to delete.
     */
    limit?: number
  }

  /**
   * caracteristicas.imovel_caracteristicas
   */
  export type caracteristicas$imovel_caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    where?: imovel_caracteristicasWhereInput
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    cursor?: imovel_caracteristicasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Imovel_caracteristicasScalarFieldEnum | Imovel_caracteristicasScalarFieldEnum[]
  }

  /**
   * caracteristicas without action
   */
  export type caracteristicasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristicas
     */
    select?: caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the caracteristicas
     */
    omit?: caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: caracteristicasInclude<ExtArgs> | null
  }


  /**
   * Model corretores
   */

  export type AggregateCorretores = {
    _count: CorretoresCountAggregateOutputType | null
    _avg: CorretoresAvgAggregateOutputType | null
    _sum: CorretoresSumAggregateOutputType | null
    _min: CorretoresMinAggregateOutputType | null
    _max: CorretoresMaxAggregateOutputType | null
  }

  export type CorretoresAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    id_imobiliaria: number | null
  }

  export type CorretoresSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    id_imobiliaria: number | null
  }

  export type CorretoresMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    creci: string | null
    creci_uf: string | null
    data_registro: Date | null
    bio: string | null
    ativo: boolean | null
    id_imobiliaria: number | null
  }

  export type CorretoresMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    creci: string | null
    creci_uf: string | null
    data_registro: Date | null
    bio: string | null
    ativo: boolean | null
    id_imobiliaria: number | null
  }

  export type CorretoresCountAggregateOutputType = {
    id: number
    usuario_id: number
    creci: number
    creci_uf: number
    data_registro: number
    bio: number
    ativo: number
    id_imobiliaria: number
    _all: number
  }


  export type CorretoresAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    id_imobiliaria?: true
  }

  export type CorretoresSumAggregateInputType = {
    id?: true
    usuario_id?: true
    id_imobiliaria?: true
  }

  export type CorretoresMinAggregateInputType = {
    id?: true
    usuario_id?: true
    creci?: true
    creci_uf?: true
    data_registro?: true
    bio?: true
    ativo?: true
    id_imobiliaria?: true
  }

  export type CorretoresMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    creci?: true
    creci_uf?: true
    data_registro?: true
    bio?: true
    ativo?: true
    id_imobiliaria?: true
  }

  export type CorretoresCountAggregateInputType = {
    id?: true
    usuario_id?: true
    creci?: true
    creci_uf?: true
    data_registro?: true
    bio?: true
    ativo?: true
    id_imobiliaria?: true
    _all?: true
  }

  export type CorretoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which corretores to aggregate.
     */
    where?: corretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of corretores to fetch.
     */
    orderBy?: corretoresOrderByWithRelationInput | corretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: corretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` corretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` corretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned corretores
    **/
    _count?: true | CorretoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CorretoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CorretoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CorretoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CorretoresMaxAggregateInputType
  }

  export type GetCorretoresAggregateType<T extends CorretoresAggregateArgs> = {
        [P in keyof T & keyof AggregateCorretores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCorretores[P]>
      : GetScalarType<T[P], AggregateCorretores[P]>
  }




  export type corretoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: corretoresWhereInput
    orderBy?: corretoresOrderByWithAggregationInput | corretoresOrderByWithAggregationInput[]
    by: CorretoresScalarFieldEnum[] | CorretoresScalarFieldEnum
    having?: corretoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CorretoresCountAggregateInputType | true
    _avg?: CorretoresAvgAggregateInputType
    _sum?: CorretoresSumAggregateInputType
    _min?: CorretoresMinAggregateInputType
    _max?: CorretoresMaxAggregateInputType
  }

  export type CorretoresGroupByOutputType = {
    id: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date
    bio: string | null
    ativo: boolean | null
    id_imobiliaria: number | null
    _count: CorretoresCountAggregateOutputType | null
    _avg: CorretoresAvgAggregateOutputType | null
    _sum: CorretoresSumAggregateOutputType | null
    _min: CorretoresMinAggregateOutputType | null
    _max: CorretoresMaxAggregateOutputType | null
  }

  type GetCorretoresGroupByPayload<T extends corretoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CorretoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CorretoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CorretoresGroupByOutputType[P]>
            : GetScalarType<T[P], CorretoresGroupByOutputType[P]>
        }
      >
    >


  export type corretoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    creci?: boolean
    creci_uf?: boolean
    data_registro?: boolean
    bio?: boolean
    ativo?: boolean
    id_imobiliaria?: boolean
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    imoveis?: boolean | corretores$imoveisArgs<ExtArgs>
    _count?: boolean | CorretoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["corretores"]>

  export type corretoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    creci?: boolean
    creci_uf?: boolean
    data_registro?: boolean
    bio?: boolean
    ativo?: boolean
    id_imobiliaria?: boolean
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["corretores"]>

  export type corretoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    creci?: boolean
    creci_uf?: boolean
    data_registro?: boolean
    bio?: boolean
    ativo?: boolean
    id_imobiliaria?: boolean
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["corretores"]>

  export type corretoresSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    creci?: boolean
    creci_uf?: boolean
    data_registro?: boolean
    bio?: boolean
    ativo?: boolean
    id_imobiliaria?: boolean
  }

  export type corretoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "creci" | "creci_uf" | "data_registro" | "bio" | "ativo" | "id_imobiliaria", ExtArgs["result"]["corretores"]>
  export type corretoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    imoveis?: boolean | corretores$imoveisArgs<ExtArgs>
    _count?: boolean | CorretoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type corretoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type corretoresIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imobiliarias?: boolean | corretores$imobiliariasArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $corretoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "corretores"
    objects: {
      imobiliarias: Prisma.$imobiliariasPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      imoveis: Prisma.$imoveisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number
      creci: string
      creci_uf: string
      data_registro: Date
      bio: string | null
      ativo: boolean | null
      id_imobiliaria: number | null
    }, ExtArgs["result"]["corretores"]>
    composites: {}
  }

  type corretoresGetPayload<S extends boolean | null | undefined | corretoresDefaultArgs> = $Result.GetResult<Prisma.$corretoresPayload, S>

  type corretoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<corretoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CorretoresCountAggregateInputType | true
    }

  export interface corretoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['corretores'], meta: { name: 'corretores' } }
    /**
     * Find zero or one Corretores that matches the filter.
     * @param {corretoresFindUniqueArgs} args - Arguments to find a Corretores
     * @example
     * // Get one Corretores
     * const corretores = await prisma.corretores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends corretoresFindUniqueArgs>(args: SelectSubset<T, corretoresFindUniqueArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Corretores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {corretoresFindUniqueOrThrowArgs} args - Arguments to find a Corretores
     * @example
     * // Get one Corretores
     * const corretores = await prisma.corretores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends corretoresFindUniqueOrThrowArgs>(args: SelectSubset<T, corretoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Corretores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresFindFirstArgs} args - Arguments to find a Corretores
     * @example
     * // Get one Corretores
     * const corretores = await prisma.corretores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends corretoresFindFirstArgs>(args?: SelectSubset<T, corretoresFindFirstArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Corretores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresFindFirstOrThrowArgs} args - Arguments to find a Corretores
     * @example
     * // Get one Corretores
     * const corretores = await prisma.corretores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends corretoresFindFirstOrThrowArgs>(args?: SelectSubset<T, corretoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Corretores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Corretores
     * const corretores = await prisma.corretores.findMany()
     * 
     * // Get first 10 Corretores
     * const corretores = await prisma.corretores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const corretoresWithIdOnly = await prisma.corretores.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends corretoresFindManyArgs>(args?: SelectSubset<T, corretoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Corretores.
     * @param {corretoresCreateArgs} args - Arguments to create a Corretores.
     * @example
     * // Create one Corretores
     * const Corretores = await prisma.corretores.create({
     *   data: {
     *     // ... data to create a Corretores
     *   }
     * })
     * 
     */
    create<T extends corretoresCreateArgs>(args: SelectSubset<T, corretoresCreateArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Corretores.
     * @param {corretoresCreateManyArgs} args - Arguments to create many Corretores.
     * @example
     * // Create many Corretores
     * const corretores = await prisma.corretores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends corretoresCreateManyArgs>(args?: SelectSubset<T, corretoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Corretores and returns the data saved in the database.
     * @param {corretoresCreateManyAndReturnArgs} args - Arguments to create many Corretores.
     * @example
     * // Create many Corretores
     * const corretores = await prisma.corretores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Corretores and only return the `id`
     * const corretoresWithIdOnly = await prisma.corretores.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends corretoresCreateManyAndReturnArgs>(args?: SelectSubset<T, corretoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Corretores.
     * @param {corretoresDeleteArgs} args - Arguments to delete one Corretores.
     * @example
     * // Delete one Corretores
     * const Corretores = await prisma.corretores.delete({
     *   where: {
     *     // ... filter to delete one Corretores
     *   }
     * })
     * 
     */
    delete<T extends corretoresDeleteArgs>(args: SelectSubset<T, corretoresDeleteArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Corretores.
     * @param {corretoresUpdateArgs} args - Arguments to update one Corretores.
     * @example
     * // Update one Corretores
     * const corretores = await prisma.corretores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends corretoresUpdateArgs>(args: SelectSubset<T, corretoresUpdateArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Corretores.
     * @param {corretoresDeleteManyArgs} args - Arguments to filter Corretores to delete.
     * @example
     * // Delete a few Corretores
     * const { count } = await prisma.corretores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends corretoresDeleteManyArgs>(args?: SelectSubset<T, corretoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Corretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Corretores
     * const corretores = await prisma.corretores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends corretoresUpdateManyArgs>(args: SelectSubset<T, corretoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Corretores and returns the data updated in the database.
     * @param {corretoresUpdateManyAndReturnArgs} args - Arguments to update many Corretores.
     * @example
     * // Update many Corretores
     * const corretores = await prisma.corretores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Corretores and only return the `id`
     * const corretoresWithIdOnly = await prisma.corretores.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends corretoresUpdateManyAndReturnArgs>(args: SelectSubset<T, corretoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Corretores.
     * @param {corretoresUpsertArgs} args - Arguments to update or create a Corretores.
     * @example
     * // Update or create a Corretores
     * const corretores = await prisma.corretores.upsert({
     *   create: {
     *     // ... data to create a Corretores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Corretores we want to update
     *   }
     * })
     */
    upsert<T extends corretoresUpsertArgs>(args: SelectSubset<T, corretoresUpsertArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Corretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresCountArgs} args - Arguments to filter Corretores to count.
     * @example
     * // Count the number of Corretores
     * const count = await prisma.corretores.count({
     *   where: {
     *     // ... the filter for the Corretores we want to count
     *   }
     * })
    **/
    count<T extends corretoresCountArgs>(
      args?: Subset<T, corretoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CorretoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Corretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorretoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CorretoresAggregateArgs>(args: Subset<T, CorretoresAggregateArgs>): Prisma.PrismaPromise<GetCorretoresAggregateType<T>>

    /**
     * Group by Corretores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {corretoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends corretoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: corretoresGroupByArgs['orderBy'] }
        : { orderBy?: corretoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, corretoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCorretoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the corretores model
   */
  readonly fields: corretoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for corretores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__corretoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imobiliarias<T extends corretores$imobiliariasArgs<ExtArgs> = {}>(args?: Subset<T, corretores$imobiliariasArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    imoveis<T extends corretores$imoveisArgs<ExtArgs> = {}>(args?: Subset<T, corretores$imoveisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the corretores model
   */
  interface corretoresFieldRefs {
    readonly id: FieldRef<"corretores", 'Int'>
    readonly usuario_id: FieldRef<"corretores", 'Int'>
    readonly creci: FieldRef<"corretores", 'String'>
    readonly creci_uf: FieldRef<"corretores", 'String'>
    readonly data_registro: FieldRef<"corretores", 'DateTime'>
    readonly bio: FieldRef<"corretores", 'String'>
    readonly ativo: FieldRef<"corretores", 'Boolean'>
    readonly id_imobiliaria: FieldRef<"corretores", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * corretores findUnique
   */
  export type corretoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter, which corretores to fetch.
     */
    where: corretoresWhereUniqueInput
  }

  /**
   * corretores findUniqueOrThrow
   */
  export type corretoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter, which corretores to fetch.
     */
    where: corretoresWhereUniqueInput
  }

  /**
   * corretores findFirst
   */
  export type corretoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter, which corretores to fetch.
     */
    where?: corretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of corretores to fetch.
     */
    orderBy?: corretoresOrderByWithRelationInput | corretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for corretores.
     */
    cursor?: corretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` corretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` corretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of corretores.
     */
    distinct?: CorretoresScalarFieldEnum | CorretoresScalarFieldEnum[]
  }

  /**
   * corretores findFirstOrThrow
   */
  export type corretoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter, which corretores to fetch.
     */
    where?: corretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of corretores to fetch.
     */
    orderBy?: corretoresOrderByWithRelationInput | corretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for corretores.
     */
    cursor?: corretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` corretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` corretores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of corretores.
     */
    distinct?: CorretoresScalarFieldEnum | CorretoresScalarFieldEnum[]
  }

  /**
   * corretores findMany
   */
  export type corretoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter, which corretores to fetch.
     */
    where?: corretoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of corretores to fetch.
     */
    orderBy?: corretoresOrderByWithRelationInput | corretoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing corretores.
     */
    cursor?: corretoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` corretores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` corretores.
     */
    skip?: number
    distinct?: CorretoresScalarFieldEnum | CorretoresScalarFieldEnum[]
  }

  /**
   * corretores create
   */
  export type corretoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * The data needed to create a corretores.
     */
    data: XOR<corretoresCreateInput, corretoresUncheckedCreateInput>
  }

  /**
   * corretores createMany
   */
  export type corretoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many corretores.
     */
    data: corretoresCreateManyInput | corretoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * corretores createManyAndReturn
   */
  export type corretoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * The data used to create many corretores.
     */
    data: corretoresCreateManyInput | corretoresCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * corretores update
   */
  export type corretoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * The data needed to update a corretores.
     */
    data: XOR<corretoresUpdateInput, corretoresUncheckedUpdateInput>
    /**
     * Choose, which corretores to update.
     */
    where: corretoresWhereUniqueInput
  }

  /**
   * corretores updateMany
   */
  export type corretoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update corretores.
     */
    data: XOR<corretoresUpdateManyMutationInput, corretoresUncheckedUpdateManyInput>
    /**
     * Filter which corretores to update
     */
    where?: corretoresWhereInput
    /**
     * Limit how many corretores to update.
     */
    limit?: number
  }

  /**
   * corretores updateManyAndReturn
   */
  export type corretoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * The data used to update corretores.
     */
    data: XOR<corretoresUpdateManyMutationInput, corretoresUncheckedUpdateManyInput>
    /**
     * Filter which corretores to update
     */
    where?: corretoresWhereInput
    /**
     * Limit how many corretores to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * corretores upsert
   */
  export type corretoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * The filter to search for the corretores to update in case it exists.
     */
    where: corretoresWhereUniqueInput
    /**
     * In case the corretores found by the `where` argument doesn't exist, create a new corretores with this data.
     */
    create: XOR<corretoresCreateInput, corretoresUncheckedCreateInput>
    /**
     * In case the corretores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<corretoresUpdateInput, corretoresUncheckedUpdateInput>
  }

  /**
   * corretores delete
   */
  export type corretoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    /**
     * Filter which corretores to delete.
     */
    where: corretoresWhereUniqueInput
  }

  /**
   * corretores deleteMany
   */
  export type corretoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which corretores to delete
     */
    where?: corretoresWhereInput
    /**
     * Limit how many corretores to delete.
     */
    limit?: number
  }

  /**
   * corretores.imobiliarias
   */
  export type corretores$imobiliariasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    where?: imobiliariasWhereInput
  }

  /**
   * corretores.imoveis
   */
  export type corretores$imoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    where?: imoveisWhereInput
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    cursor?: imoveisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * corretores without action
   */
  export type corretoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
  }


  /**
   * Model estados
   */

  export type AggregateEstados = {
    _count: EstadosCountAggregateOutputType | null
    _avg: EstadosAvgAggregateOutputType | null
    _sum: EstadosSumAggregateOutputType | null
    _min: EstadosMinAggregateOutputType | null
    _max: EstadosMaxAggregateOutputType | null
  }

  export type EstadosAvgAggregateOutputType = {
    id: number | null
    regiao_id: number | null
  }

  export type EstadosSumAggregateOutputType = {
    id: number | null
    regiao_id: number | null
  }

  export type EstadosMinAggregateOutputType = {
    id: number | null
    sigla: string | null
    nome: string | null
    regiao_id: number | null
  }

  export type EstadosMaxAggregateOutputType = {
    id: number | null
    sigla: string | null
    nome: string | null
    regiao_id: number | null
  }

  export type EstadosCountAggregateOutputType = {
    id: number
    sigla: number
    nome: number
    regiao_id: number
    _all: number
  }


  export type EstadosAvgAggregateInputType = {
    id?: true
    regiao_id?: true
  }

  export type EstadosSumAggregateInputType = {
    id?: true
    regiao_id?: true
  }

  export type EstadosMinAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
    regiao_id?: true
  }

  export type EstadosMaxAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
    regiao_id?: true
  }

  export type EstadosCountAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
    regiao_id?: true
    _all?: true
  }

  export type EstadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estados to aggregate.
     */
    where?: estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estados to fetch.
     */
    orderBy?: estadosOrderByWithRelationInput | estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estados
    **/
    _count?: true | EstadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadosMaxAggregateInputType
  }

  export type GetEstadosAggregateType<T extends EstadosAggregateArgs> = {
        [P in keyof T & keyof AggregateEstados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstados[P]>
      : GetScalarType<T[P], AggregateEstados[P]>
  }




  export type estadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estadosWhereInput
    orderBy?: estadosOrderByWithAggregationInput | estadosOrderByWithAggregationInput[]
    by: EstadosScalarFieldEnum[] | EstadosScalarFieldEnum
    having?: estadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadosCountAggregateInputType | true
    _avg?: EstadosAvgAggregateInputType
    _sum?: EstadosSumAggregateInputType
    _min?: EstadosMinAggregateInputType
    _max?: EstadosMaxAggregateInputType
  }

  export type EstadosGroupByOutputType = {
    id: number
    sigla: string
    nome: string
    regiao_id: number
    _count: EstadosCountAggregateOutputType | null
    _avg: EstadosAvgAggregateOutputType | null
    _sum: EstadosSumAggregateOutputType | null
    _min: EstadosMinAggregateOutputType | null
    _max: EstadosMaxAggregateOutputType | null
  }

  type GetEstadosGroupByPayload<T extends estadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadosGroupByOutputType[P]>
            : GetScalarType<T[P], EstadosGroupByOutputType[P]>
        }
      >
    >


  export type estadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
    regiao_id?: boolean
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estados"]>

  export type estadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
    regiao_id?: boolean
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estados"]>

  export type estadosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
    regiao_id?: boolean
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estados"]>

  export type estadosSelectScalar = {
    id?: boolean
    sigla?: boolean
    nome?: boolean
    regiao_id?: boolean
  }

  export type estadosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sigla" | "nome" | "regiao_id", ExtArgs["result"]["estados"]>
  export type estadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }
  export type estadosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }
  export type estadosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    regioes?: boolean | regioesDefaultArgs<ExtArgs>
  }

  export type $estadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estados"
    objects: {
      regioes: Prisma.$regioesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sigla: string
      nome: string
      regiao_id: number
    }, ExtArgs["result"]["estados"]>
    composites: {}
  }

  type estadosGetPayload<S extends boolean | null | undefined | estadosDefaultArgs> = $Result.GetResult<Prisma.$estadosPayload, S>

  type estadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estadosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadosCountAggregateInputType | true
    }

  export interface estadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estados'], meta: { name: 'estados' } }
    /**
     * Find zero or one Estados that matches the filter.
     * @param {estadosFindUniqueArgs} args - Arguments to find a Estados
     * @example
     * // Get one Estados
     * const estados = await prisma.estados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estadosFindUniqueArgs>(args: SelectSubset<T, estadosFindUniqueArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estados that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estadosFindUniqueOrThrowArgs} args - Arguments to find a Estados
     * @example
     * // Get one Estados
     * const estados = await prisma.estados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estadosFindUniqueOrThrowArgs>(args: SelectSubset<T, estadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosFindFirstArgs} args - Arguments to find a Estados
     * @example
     * // Get one Estados
     * const estados = await prisma.estados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estadosFindFirstArgs>(args?: SelectSubset<T, estadosFindFirstArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosFindFirstOrThrowArgs} args - Arguments to find a Estados
     * @example
     * // Get one Estados
     * const estados = await prisma.estados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estadosFindFirstOrThrowArgs>(args?: SelectSubset<T, estadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estados
     * const estados = await prisma.estados.findMany()
     * 
     * // Get first 10 Estados
     * const estados = await prisma.estados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadosWithIdOnly = await prisma.estados.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estadosFindManyArgs>(args?: SelectSubset<T, estadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estados.
     * @param {estadosCreateArgs} args - Arguments to create a Estados.
     * @example
     * // Create one Estados
     * const Estados = await prisma.estados.create({
     *   data: {
     *     // ... data to create a Estados
     *   }
     * })
     * 
     */
    create<T extends estadosCreateArgs>(args: SelectSubset<T, estadosCreateArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estados.
     * @param {estadosCreateManyArgs} args - Arguments to create many Estados.
     * @example
     * // Create many Estados
     * const estados = await prisma.estados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estadosCreateManyArgs>(args?: SelectSubset<T, estadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estados and returns the data saved in the database.
     * @param {estadosCreateManyAndReturnArgs} args - Arguments to create many Estados.
     * @example
     * // Create many Estados
     * const estados = await prisma.estados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estados and only return the `id`
     * const estadosWithIdOnly = await prisma.estados.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estadosCreateManyAndReturnArgs>(args?: SelectSubset<T, estadosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estados.
     * @param {estadosDeleteArgs} args - Arguments to delete one Estados.
     * @example
     * // Delete one Estados
     * const Estados = await prisma.estados.delete({
     *   where: {
     *     // ... filter to delete one Estados
     *   }
     * })
     * 
     */
    delete<T extends estadosDeleteArgs>(args: SelectSubset<T, estadosDeleteArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estados.
     * @param {estadosUpdateArgs} args - Arguments to update one Estados.
     * @example
     * // Update one Estados
     * const estados = await prisma.estados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estadosUpdateArgs>(args: SelectSubset<T, estadosUpdateArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estados.
     * @param {estadosDeleteManyArgs} args - Arguments to filter Estados to delete.
     * @example
     * // Delete a few Estados
     * const { count } = await prisma.estados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estadosDeleteManyArgs>(args?: SelectSubset<T, estadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estados
     * const estados = await prisma.estados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estadosUpdateManyArgs>(args: SelectSubset<T, estadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estados and returns the data updated in the database.
     * @param {estadosUpdateManyAndReturnArgs} args - Arguments to update many Estados.
     * @example
     * // Update many Estados
     * const estados = await prisma.estados.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estados and only return the `id`
     * const estadosWithIdOnly = await prisma.estados.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estadosUpdateManyAndReturnArgs>(args: SelectSubset<T, estadosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estados.
     * @param {estadosUpsertArgs} args - Arguments to update or create a Estados.
     * @example
     * // Update or create a Estados
     * const estados = await prisma.estados.upsert({
     *   create: {
     *     // ... data to create a Estados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estados we want to update
     *   }
     * })
     */
    upsert<T extends estadosUpsertArgs>(args: SelectSubset<T, estadosUpsertArgs<ExtArgs>>): Prisma__estadosClient<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosCountArgs} args - Arguments to filter Estados to count.
     * @example
     * // Count the number of Estados
     * const count = await prisma.estados.count({
     *   where: {
     *     // ... the filter for the Estados we want to count
     *   }
     * })
    **/
    count<T extends estadosCountArgs>(
      args?: Subset<T, estadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadosAggregateArgs>(args: Subset<T, EstadosAggregateArgs>): Prisma.PrismaPromise<GetEstadosAggregateType<T>>

    /**
     * Group by Estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estadosGroupByArgs['orderBy'] }
        : { orderBy?: estadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estados model
   */
  readonly fields: estadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    regioes<T extends regioesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, regioesDefaultArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estados model
   */
  interface estadosFieldRefs {
    readonly id: FieldRef<"estados", 'Int'>
    readonly sigla: FieldRef<"estados", 'String'>
    readonly nome: FieldRef<"estados", 'String'>
    readonly regiao_id: FieldRef<"estados", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * estados findUnique
   */
  export type estadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter, which estados to fetch.
     */
    where: estadosWhereUniqueInput
  }

  /**
   * estados findUniqueOrThrow
   */
  export type estadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter, which estados to fetch.
     */
    where: estadosWhereUniqueInput
  }

  /**
   * estados findFirst
   */
  export type estadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter, which estados to fetch.
     */
    where?: estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estados to fetch.
     */
    orderBy?: estadosOrderByWithRelationInput | estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estados.
     */
    cursor?: estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estados.
     */
    distinct?: EstadosScalarFieldEnum | EstadosScalarFieldEnum[]
  }

  /**
   * estados findFirstOrThrow
   */
  export type estadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter, which estados to fetch.
     */
    where?: estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estados to fetch.
     */
    orderBy?: estadosOrderByWithRelationInput | estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estados.
     */
    cursor?: estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estados.
     */
    distinct?: EstadosScalarFieldEnum | EstadosScalarFieldEnum[]
  }

  /**
   * estados findMany
   */
  export type estadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter, which estados to fetch.
     */
    where?: estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estados to fetch.
     */
    orderBy?: estadosOrderByWithRelationInput | estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estados.
     */
    cursor?: estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estados.
     */
    skip?: number
    distinct?: EstadosScalarFieldEnum | EstadosScalarFieldEnum[]
  }

  /**
   * estados create
   */
  export type estadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * The data needed to create a estados.
     */
    data: XOR<estadosCreateInput, estadosUncheckedCreateInput>
  }

  /**
   * estados createMany
   */
  export type estadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estados.
     */
    data: estadosCreateManyInput | estadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estados createManyAndReturn
   */
  export type estadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * The data used to create many estados.
     */
    data: estadosCreateManyInput | estadosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * estados update
   */
  export type estadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * The data needed to update a estados.
     */
    data: XOR<estadosUpdateInput, estadosUncheckedUpdateInput>
    /**
     * Choose, which estados to update.
     */
    where: estadosWhereUniqueInput
  }

  /**
   * estados updateMany
   */
  export type estadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estados.
     */
    data: XOR<estadosUpdateManyMutationInput, estadosUncheckedUpdateManyInput>
    /**
     * Filter which estados to update
     */
    where?: estadosWhereInput
    /**
     * Limit how many estados to update.
     */
    limit?: number
  }

  /**
   * estados updateManyAndReturn
   */
  export type estadosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * The data used to update estados.
     */
    data: XOR<estadosUpdateManyMutationInput, estadosUncheckedUpdateManyInput>
    /**
     * Filter which estados to update
     */
    where?: estadosWhereInput
    /**
     * Limit how many estados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * estados upsert
   */
  export type estadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * The filter to search for the estados to update in case it exists.
     */
    where: estadosWhereUniqueInput
    /**
     * In case the estados found by the `where` argument doesn't exist, create a new estados with this data.
     */
    create: XOR<estadosCreateInput, estadosUncheckedCreateInput>
    /**
     * In case the estados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estadosUpdateInput, estadosUncheckedUpdateInput>
  }

  /**
   * estados delete
   */
  export type estadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    /**
     * Filter which estados to delete.
     */
    where: estadosWhereUniqueInput
  }

  /**
   * estados deleteMany
   */
  export type estadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estados to delete
     */
    where?: estadosWhereInput
    /**
     * Limit how many estados to delete.
     */
    limit?: number
  }

  /**
   * estados without action
   */
  export type estadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
  }


  /**
   * Model favoritos
   */

  export type AggregateFavoritos = {
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  export type FavoritosAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    imovel_id: number | null
  }

  export type FavoritosSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    imovel_id: number | null
  }

  export type FavoritosMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    imovel_id: number | null
    data_cadastro: Date | null
  }

  export type FavoritosMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    imovel_id: number | null
    data_cadastro: Date | null
  }

  export type FavoritosCountAggregateOutputType = {
    id: number
    usuario_id: number
    imovel_id: number
    data_cadastro: number
    _all: number
  }


  export type FavoritosAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    imovel_id?: true
  }

  export type FavoritosSumAggregateInputType = {
    id?: true
    usuario_id?: true
    imovel_id?: true
  }

  export type FavoritosMinAggregateInputType = {
    id?: true
    usuario_id?: true
    imovel_id?: true
    data_cadastro?: true
  }

  export type FavoritosMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    imovel_id?: true
    data_cadastro?: true
  }

  export type FavoritosCountAggregateInputType = {
    id?: true
    usuario_id?: true
    imovel_id?: true
    data_cadastro?: true
    _all?: true
  }

  export type FavoritosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favoritos to aggregate.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned favoritos
    **/
    _count?: true | FavoritosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoritosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoritosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritosMaxAggregateInputType
  }

  export type GetFavoritosAggregateType<T extends FavoritosAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoritos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoritos[P]>
      : GetScalarType<T[P], AggregateFavoritos[P]>
  }




  export type favoritosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithAggregationInput | favoritosOrderByWithAggregationInput[]
    by: FavoritosScalarFieldEnum[] | FavoritosScalarFieldEnum
    having?: favoritosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritosCountAggregateInputType | true
    _avg?: FavoritosAvgAggregateInputType
    _sum?: FavoritosSumAggregateInputType
    _min?: FavoritosMinAggregateInputType
    _max?: FavoritosMaxAggregateInputType
  }

  export type FavoritosGroupByOutputType = {
    id: number
    usuario_id: number
    imovel_id: number
    data_cadastro: Date | null
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  type GetFavoritosGroupByPayload<T extends favoritosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
        }
      >
    >


  export type favoritosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    imovel_id?: boolean
    data_cadastro?: boolean
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type favoritosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    imovel_id?: boolean
    data_cadastro?: boolean
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type favoritosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    imovel_id?: boolean
    data_cadastro?: boolean
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type favoritosSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    imovel_id?: boolean
    data_cadastro?: boolean
  }

  export type favoritosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "imovel_id" | "data_cadastro", ExtArgs["result"]["favoritos"]>
  export type favoritosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type favoritosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type favoritosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $favoritosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "favoritos"
    objects: {
      imoveis: Prisma.$imoveisPayload<ExtArgs>
      usuarios: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number
      imovel_id: number
      data_cadastro: Date | null
    }, ExtArgs["result"]["favoritos"]>
    composites: {}
  }

  type favoritosGetPayload<S extends boolean | null | undefined | favoritosDefaultArgs> = $Result.GetResult<Prisma.$favoritosPayload, S>

  type favoritosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<favoritosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoritosCountAggregateInputType | true
    }

  export interface favoritosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['favoritos'], meta: { name: 'favoritos' } }
    /**
     * Find zero or one Favoritos that matches the filter.
     * @param {favoritosFindUniqueArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends favoritosFindUniqueArgs>(args: SelectSubset<T, favoritosFindUniqueArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favoritos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {favoritosFindUniqueOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends favoritosFindUniqueOrThrowArgs>(args: SelectSubset<T, favoritosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindFirstArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends favoritosFindFirstArgs>(args?: SelectSubset<T, favoritosFindFirstArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favoritos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindFirstOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends favoritosFindFirstOrThrowArgs>(args?: SelectSubset<T, favoritosFindFirstOrThrowArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favoritos.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favoritos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends favoritosFindManyArgs>(args?: SelectSubset<T, favoritosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favoritos.
     * @param {favoritosCreateArgs} args - Arguments to create a Favoritos.
     * @example
     * // Create one Favoritos
     * const Favoritos = await prisma.favoritos.create({
     *   data: {
     *     // ... data to create a Favoritos
     *   }
     * })
     * 
     */
    create<T extends favoritosCreateArgs>(args: SelectSubset<T, favoritosCreateArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favoritos.
     * @param {favoritosCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends favoritosCreateManyArgs>(args?: SelectSubset<T, favoritosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {favoritosCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends favoritosCreateManyAndReturnArgs>(args?: SelectSubset<T, favoritosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favoritos.
     * @param {favoritosDeleteArgs} args - Arguments to delete one Favoritos.
     * @example
     * // Delete one Favoritos
     * const Favoritos = await prisma.favoritos.delete({
     *   where: {
     *     // ... filter to delete one Favoritos
     *   }
     * })
     * 
     */
    delete<T extends favoritosDeleteArgs>(args: SelectSubset<T, favoritosDeleteArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favoritos.
     * @param {favoritosUpdateArgs} args - Arguments to update one Favoritos.
     * @example
     * // Update one Favoritos
     * const favoritos = await prisma.favoritos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends favoritosUpdateArgs>(args: SelectSubset<T, favoritosUpdateArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favoritos.
     * @param {favoritosDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favoritos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends favoritosDeleteManyArgs>(args?: SelectSubset<T, favoritosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends favoritosUpdateManyArgs>(args: SelectSubset<T, favoritosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos and returns the data updated in the database.
     * @param {favoritosUpdateManyAndReturnArgs} args - Arguments to update many Favoritos.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends favoritosUpdateManyAndReturnArgs>(args: SelectSubset<T, favoritosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favoritos.
     * @param {favoritosUpsertArgs} args - Arguments to update or create a Favoritos.
     * @example
     * // Update or create a Favoritos
     * const favoritos = await prisma.favoritos.upsert({
     *   create: {
     *     // ... data to create a Favoritos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favoritos we want to update
     *   }
     * })
     */
    upsert<T extends favoritosUpsertArgs>(args: SelectSubset<T, favoritosUpsertArgs<ExtArgs>>): Prisma__favoritosClient<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favoritos.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends favoritosCountArgs>(
      args?: Subset<T, favoritosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritosAggregateArgs>(args: Subset<T, FavoritosAggregateArgs>): Prisma.PrismaPromise<GetFavoritosAggregateType<T>>

    /**
     * Group by Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends favoritosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: favoritosGroupByArgs['orderBy'] }
        : { orderBy?: favoritosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, favoritosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the favoritos model
   */
  readonly fields: favoritosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for favoritos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__favoritosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imoveis<T extends imoveisDefaultArgs<ExtArgs> = {}>(args?: Subset<T, imoveisDefaultArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the favoritos model
   */
  interface favoritosFieldRefs {
    readonly id: FieldRef<"favoritos", 'Int'>
    readonly usuario_id: FieldRef<"favoritos", 'Int'>
    readonly imovel_id: FieldRef<"favoritos", 'Int'>
    readonly data_cadastro: FieldRef<"favoritos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * favoritos findUnique
   */
  export type favoritosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos findUniqueOrThrow
   */
  export type favoritosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos findFirst
   */
  export type favoritosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos findFirstOrThrow
   */
  export type favoritosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos findMany
   */
  export type favoritosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter, which favoritos to fetch.
     */
    where?: favoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favoritos to fetch.
     */
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing favoritos.
     */
    cursor?: favoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favoritos.
     */
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * favoritos create
   */
  export type favoritosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The data needed to create a favoritos.
     */
    data: XOR<favoritosCreateInput, favoritosUncheckedCreateInput>
  }

  /**
   * favoritos createMany
   */
  export type favoritosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many favoritos.
     */
    data: favoritosCreateManyInput | favoritosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * favoritos createManyAndReturn
   */
  export type favoritosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * The data used to create many favoritos.
     */
    data: favoritosCreateManyInput | favoritosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * favoritos update
   */
  export type favoritosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The data needed to update a favoritos.
     */
    data: XOR<favoritosUpdateInput, favoritosUncheckedUpdateInput>
    /**
     * Choose, which favoritos to update.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos updateMany
   */
  export type favoritosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update favoritos.
     */
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyInput>
    /**
     * Filter which favoritos to update
     */
    where?: favoritosWhereInput
    /**
     * Limit how many favoritos to update.
     */
    limit?: number
  }

  /**
   * favoritos updateManyAndReturn
   */
  export type favoritosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * The data used to update favoritos.
     */
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyInput>
    /**
     * Filter which favoritos to update
     */
    where?: favoritosWhereInput
    /**
     * Limit how many favoritos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * favoritos upsert
   */
  export type favoritosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * The filter to search for the favoritos to update in case it exists.
     */
    where: favoritosWhereUniqueInput
    /**
     * In case the favoritos found by the `where` argument doesn't exist, create a new favoritos with this data.
     */
    create: XOR<favoritosCreateInput, favoritosUncheckedCreateInput>
    /**
     * In case the favoritos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<favoritosUpdateInput, favoritosUncheckedUpdateInput>
  }

  /**
   * favoritos delete
   */
  export type favoritosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    /**
     * Filter which favoritos to delete.
     */
    where: favoritosWhereUniqueInput
  }

  /**
   * favoritos deleteMany
   */
  export type favoritosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favoritos to delete
     */
    where?: favoritosWhereInput
    /**
     * Limit how many favoritos to delete.
     */
    limit?: number
  }

  /**
   * favoritos without action
   */
  export type favoritosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
  }


  /**
   * Model imobiliarias
   */

  export type AggregateImobiliarias = {
    _count: ImobiliariasCountAggregateOutputType | null
    _avg: ImobiliariasAvgAggregateOutputType | null
    _sum: ImobiliariasSumAggregateOutputType | null
    _min: ImobiliariasMinAggregateOutputType | null
    _max: ImobiliariasMaxAggregateOutputType | null
  }

  export type ImobiliariasAvgAggregateOutputType = {
    id: number | null
  }

  export type ImobiliariasSumAggregateOutputType = {
    id: number | null
  }

  export type ImobiliariasMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    endereco: string | null
    data_cadastro: Date | null
  }

  export type ImobiliariasMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    endereco: string | null
    data_cadastro: Date | null
  }

  export type ImobiliariasCountAggregateOutputType = {
    id: number
    nome: number
    cnpj: number
    telefone: number
    email: number
    endereco: number
    data_cadastro: number
    _all: number
  }


  export type ImobiliariasAvgAggregateInputType = {
    id?: true
  }

  export type ImobiliariasSumAggregateInputType = {
    id?: true
  }

  export type ImobiliariasMinAggregateInputType = {
    id?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
    data_cadastro?: true
  }

  export type ImobiliariasMaxAggregateInputType = {
    id?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
    data_cadastro?: true
  }

  export type ImobiliariasCountAggregateInputType = {
    id?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
    data_cadastro?: true
    _all?: true
  }

  export type ImobiliariasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imobiliarias to aggregate.
     */
    where?: imobiliariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imobiliarias to fetch.
     */
    orderBy?: imobiliariasOrderByWithRelationInput | imobiliariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imobiliariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imobiliarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imobiliarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imobiliarias
    **/
    _count?: true | ImobiliariasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImobiliariasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImobiliariasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImobiliariasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImobiliariasMaxAggregateInputType
  }

  export type GetImobiliariasAggregateType<T extends ImobiliariasAggregateArgs> = {
        [P in keyof T & keyof AggregateImobiliarias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImobiliarias[P]>
      : GetScalarType<T[P], AggregateImobiliarias[P]>
  }




  export type imobiliariasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imobiliariasWhereInput
    orderBy?: imobiliariasOrderByWithAggregationInput | imobiliariasOrderByWithAggregationInput[]
    by: ImobiliariasScalarFieldEnum[] | ImobiliariasScalarFieldEnum
    having?: imobiliariasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImobiliariasCountAggregateInputType | true
    _avg?: ImobiliariasAvgAggregateInputType
    _sum?: ImobiliariasSumAggregateInputType
    _min?: ImobiliariasMinAggregateInputType
    _max?: ImobiliariasMaxAggregateInputType
  }

  export type ImobiliariasGroupByOutputType = {
    id: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro: Date | null
    _count: ImobiliariasCountAggregateOutputType | null
    _avg: ImobiliariasAvgAggregateOutputType | null
    _sum: ImobiliariasSumAggregateOutputType | null
    _min: ImobiliariasMinAggregateOutputType | null
    _max: ImobiliariasMaxAggregateOutputType | null
  }

  type GetImobiliariasGroupByPayload<T extends imobiliariasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImobiliariasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImobiliariasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImobiliariasGroupByOutputType[P]>
            : GetScalarType<T[P], ImobiliariasGroupByOutputType[P]>
        }
      >
    >


  export type imobiliariasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
    data_cadastro?: boolean
    corretores?: boolean | imobiliarias$corretoresArgs<ExtArgs>
    _count?: boolean | ImobiliariasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imobiliarias"]>

  export type imobiliariasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
    data_cadastro?: boolean
  }, ExtArgs["result"]["imobiliarias"]>

  export type imobiliariasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
    data_cadastro?: boolean
  }, ExtArgs["result"]["imobiliarias"]>

  export type imobiliariasSelectScalar = {
    id?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
    data_cadastro?: boolean
  }

  export type imobiliariasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "cnpj" | "telefone" | "email" | "endereco" | "data_cadastro", ExtArgs["result"]["imobiliarias"]>
  export type imobiliariasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    corretores?: boolean | imobiliarias$corretoresArgs<ExtArgs>
    _count?: boolean | ImobiliariasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type imobiliariasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type imobiliariasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $imobiliariasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imobiliarias"
    objects: {
      corretores: Prisma.$corretoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cnpj: string
      telefone: string
      email: string
      endereco: string
      data_cadastro: Date | null
    }, ExtArgs["result"]["imobiliarias"]>
    composites: {}
  }

  type imobiliariasGetPayload<S extends boolean | null | undefined | imobiliariasDefaultArgs> = $Result.GetResult<Prisma.$imobiliariasPayload, S>

  type imobiliariasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<imobiliariasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImobiliariasCountAggregateInputType | true
    }

  export interface imobiliariasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imobiliarias'], meta: { name: 'imobiliarias' } }
    /**
     * Find zero or one Imobiliarias that matches the filter.
     * @param {imobiliariasFindUniqueArgs} args - Arguments to find a Imobiliarias
     * @example
     * // Get one Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imobiliariasFindUniqueArgs>(args: SelectSubset<T, imobiliariasFindUniqueArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Imobiliarias that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {imobiliariasFindUniqueOrThrowArgs} args - Arguments to find a Imobiliarias
     * @example
     * // Get one Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imobiliariasFindUniqueOrThrowArgs>(args: SelectSubset<T, imobiliariasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imobiliarias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasFindFirstArgs} args - Arguments to find a Imobiliarias
     * @example
     * // Get one Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imobiliariasFindFirstArgs>(args?: SelectSubset<T, imobiliariasFindFirstArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imobiliarias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasFindFirstOrThrowArgs} args - Arguments to find a Imobiliarias
     * @example
     * // Get one Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imobiliariasFindFirstOrThrowArgs>(args?: SelectSubset<T, imobiliariasFindFirstOrThrowArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Imobiliarias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findMany()
     * 
     * // Get first 10 Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imobiliariasWithIdOnly = await prisma.imobiliarias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends imobiliariasFindManyArgs>(args?: SelectSubset<T, imobiliariasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Imobiliarias.
     * @param {imobiliariasCreateArgs} args - Arguments to create a Imobiliarias.
     * @example
     * // Create one Imobiliarias
     * const Imobiliarias = await prisma.imobiliarias.create({
     *   data: {
     *     // ... data to create a Imobiliarias
     *   }
     * })
     * 
     */
    create<T extends imobiliariasCreateArgs>(args: SelectSubset<T, imobiliariasCreateArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Imobiliarias.
     * @param {imobiliariasCreateManyArgs} args - Arguments to create many Imobiliarias.
     * @example
     * // Create many Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imobiliariasCreateManyArgs>(args?: SelectSubset<T, imobiliariasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imobiliarias and returns the data saved in the database.
     * @param {imobiliariasCreateManyAndReturnArgs} args - Arguments to create many Imobiliarias.
     * @example
     * // Create many Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imobiliarias and only return the `id`
     * const imobiliariasWithIdOnly = await prisma.imobiliarias.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends imobiliariasCreateManyAndReturnArgs>(args?: SelectSubset<T, imobiliariasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Imobiliarias.
     * @param {imobiliariasDeleteArgs} args - Arguments to delete one Imobiliarias.
     * @example
     * // Delete one Imobiliarias
     * const Imobiliarias = await prisma.imobiliarias.delete({
     *   where: {
     *     // ... filter to delete one Imobiliarias
     *   }
     * })
     * 
     */
    delete<T extends imobiliariasDeleteArgs>(args: SelectSubset<T, imobiliariasDeleteArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Imobiliarias.
     * @param {imobiliariasUpdateArgs} args - Arguments to update one Imobiliarias.
     * @example
     * // Update one Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imobiliariasUpdateArgs>(args: SelectSubset<T, imobiliariasUpdateArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Imobiliarias.
     * @param {imobiliariasDeleteManyArgs} args - Arguments to filter Imobiliarias to delete.
     * @example
     * // Delete a few Imobiliarias
     * const { count } = await prisma.imobiliarias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imobiliariasDeleteManyArgs>(args?: SelectSubset<T, imobiliariasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imobiliarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imobiliariasUpdateManyArgs>(args: SelectSubset<T, imobiliariasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imobiliarias and returns the data updated in the database.
     * @param {imobiliariasUpdateManyAndReturnArgs} args - Arguments to update many Imobiliarias.
     * @example
     * // Update many Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Imobiliarias and only return the `id`
     * const imobiliariasWithIdOnly = await prisma.imobiliarias.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends imobiliariasUpdateManyAndReturnArgs>(args: SelectSubset<T, imobiliariasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Imobiliarias.
     * @param {imobiliariasUpsertArgs} args - Arguments to update or create a Imobiliarias.
     * @example
     * // Update or create a Imobiliarias
     * const imobiliarias = await prisma.imobiliarias.upsert({
     *   create: {
     *     // ... data to create a Imobiliarias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imobiliarias we want to update
     *   }
     * })
     */
    upsert<T extends imobiliariasUpsertArgs>(args: SelectSubset<T, imobiliariasUpsertArgs<ExtArgs>>): Prisma__imobiliariasClient<$Result.GetResult<Prisma.$imobiliariasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Imobiliarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasCountArgs} args - Arguments to filter Imobiliarias to count.
     * @example
     * // Count the number of Imobiliarias
     * const count = await prisma.imobiliarias.count({
     *   where: {
     *     // ... the filter for the Imobiliarias we want to count
     *   }
     * })
    **/
    count<T extends imobiliariasCountArgs>(
      args?: Subset<T, imobiliariasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImobiliariasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imobiliarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImobiliariasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImobiliariasAggregateArgs>(args: Subset<T, ImobiliariasAggregateArgs>): Prisma.PrismaPromise<GetImobiliariasAggregateType<T>>

    /**
     * Group by Imobiliarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imobiliariasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imobiliariasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imobiliariasGroupByArgs['orderBy'] }
        : { orderBy?: imobiliariasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imobiliariasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImobiliariasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imobiliarias model
   */
  readonly fields: imobiliariasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imobiliarias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imobiliariasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    corretores<T extends imobiliarias$corretoresArgs<ExtArgs> = {}>(args?: Subset<T, imobiliarias$corretoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the imobiliarias model
   */
  interface imobiliariasFieldRefs {
    readonly id: FieldRef<"imobiliarias", 'Int'>
    readonly nome: FieldRef<"imobiliarias", 'String'>
    readonly cnpj: FieldRef<"imobiliarias", 'String'>
    readonly telefone: FieldRef<"imobiliarias", 'String'>
    readonly email: FieldRef<"imobiliarias", 'String'>
    readonly endereco: FieldRef<"imobiliarias", 'String'>
    readonly data_cadastro: FieldRef<"imobiliarias", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * imobiliarias findUnique
   */
  export type imobiliariasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter, which imobiliarias to fetch.
     */
    where: imobiliariasWhereUniqueInput
  }

  /**
   * imobiliarias findUniqueOrThrow
   */
  export type imobiliariasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter, which imobiliarias to fetch.
     */
    where: imobiliariasWhereUniqueInput
  }

  /**
   * imobiliarias findFirst
   */
  export type imobiliariasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter, which imobiliarias to fetch.
     */
    where?: imobiliariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imobiliarias to fetch.
     */
    orderBy?: imobiliariasOrderByWithRelationInput | imobiliariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imobiliarias.
     */
    cursor?: imobiliariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imobiliarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imobiliarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imobiliarias.
     */
    distinct?: ImobiliariasScalarFieldEnum | ImobiliariasScalarFieldEnum[]
  }

  /**
   * imobiliarias findFirstOrThrow
   */
  export type imobiliariasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter, which imobiliarias to fetch.
     */
    where?: imobiliariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imobiliarias to fetch.
     */
    orderBy?: imobiliariasOrderByWithRelationInput | imobiliariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imobiliarias.
     */
    cursor?: imobiliariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imobiliarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imobiliarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imobiliarias.
     */
    distinct?: ImobiliariasScalarFieldEnum | ImobiliariasScalarFieldEnum[]
  }

  /**
   * imobiliarias findMany
   */
  export type imobiliariasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter, which imobiliarias to fetch.
     */
    where?: imobiliariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imobiliarias to fetch.
     */
    orderBy?: imobiliariasOrderByWithRelationInput | imobiliariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imobiliarias.
     */
    cursor?: imobiliariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imobiliarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imobiliarias.
     */
    skip?: number
    distinct?: ImobiliariasScalarFieldEnum | ImobiliariasScalarFieldEnum[]
  }

  /**
   * imobiliarias create
   */
  export type imobiliariasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * The data needed to create a imobiliarias.
     */
    data: XOR<imobiliariasCreateInput, imobiliariasUncheckedCreateInput>
  }

  /**
   * imobiliarias createMany
   */
  export type imobiliariasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imobiliarias.
     */
    data: imobiliariasCreateManyInput | imobiliariasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imobiliarias createManyAndReturn
   */
  export type imobiliariasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * The data used to create many imobiliarias.
     */
    data: imobiliariasCreateManyInput | imobiliariasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imobiliarias update
   */
  export type imobiliariasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * The data needed to update a imobiliarias.
     */
    data: XOR<imobiliariasUpdateInput, imobiliariasUncheckedUpdateInput>
    /**
     * Choose, which imobiliarias to update.
     */
    where: imobiliariasWhereUniqueInput
  }

  /**
   * imobiliarias updateMany
   */
  export type imobiliariasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imobiliarias.
     */
    data: XOR<imobiliariasUpdateManyMutationInput, imobiliariasUncheckedUpdateManyInput>
    /**
     * Filter which imobiliarias to update
     */
    where?: imobiliariasWhereInput
    /**
     * Limit how many imobiliarias to update.
     */
    limit?: number
  }

  /**
   * imobiliarias updateManyAndReturn
   */
  export type imobiliariasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * The data used to update imobiliarias.
     */
    data: XOR<imobiliariasUpdateManyMutationInput, imobiliariasUncheckedUpdateManyInput>
    /**
     * Filter which imobiliarias to update
     */
    where?: imobiliariasWhereInput
    /**
     * Limit how many imobiliarias to update.
     */
    limit?: number
  }

  /**
   * imobiliarias upsert
   */
  export type imobiliariasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * The filter to search for the imobiliarias to update in case it exists.
     */
    where: imobiliariasWhereUniqueInput
    /**
     * In case the imobiliarias found by the `where` argument doesn't exist, create a new imobiliarias with this data.
     */
    create: XOR<imobiliariasCreateInput, imobiliariasUncheckedCreateInput>
    /**
     * In case the imobiliarias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imobiliariasUpdateInput, imobiliariasUncheckedUpdateInput>
  }

  /**
   * imobiliarias delete
   */
  export type imobiliariasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
    /**
     * Filter which imobiliarias to delete.
     */
    where: imobiliariasWhereUniqueInput
  }

  /**
   * imobiliarias deleteMany
   */
  export type imobiliariasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imobiliarias to delete
     */
    where?: imobiliariasWhereInput
    /**
     * Limit how many imobiliarias to delete.
     */
    limit?: number
  }

  /**
   * imobiliarias.corretores
   */
  export type imobiliarias$corretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    where?: corretoresWhereInput
    orderBy?: corretoresOrderByWithRelationInput | corretoresOrderByWithRelationInput[]
    cursor?: corretoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorretoresScalarFieldEnum | CorretoresScalarFieldEnum[]
  }

  /**
   * imobiliarias without action
   */
  export type imobiliariasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imobiliarias
     */
    select?: imobiliariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imobiliarias
     */
    omit?: imobiliariasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imobiliariasInclude<ExtArgs> | null
  }


  /**
   * Model imoveis
   */

  export type AggregateImoveis = {
    _count: ImoveisCountAggregateOutputType | null
    _avg: ImoveisAvgAggregateOutputType | null
    _sum: ImoveisSumAggregateOutputType | null
    _min: ImoveisMinAggregateOutputType | null
    _max: ImoveisMaxAggregateOutputType | null
  }

  export type ImoveisAvgAggregateOutputType = {
    id: number | null
    subtipo_id: number | null
    tipoimovel_id: number | null
    preco: Decimal | null
    area: number | null
    quartos: number | null
    banheiros: number | null
    vagas_garagem: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    id_proprietario: number | null
    id_corretor: number | null
    area_util_hectares: Decimal | null
    area_total_hectares: Decimal | null
    salas: number | null
    andar: number | null
    area_privativa: Decimal | null
    area_comum: Decimal | null
    suites: number | null
    views: number | null
    estado_id: number | null
    valor_iptu: Decimal | null
    valor_condominio: Decimal | null
  }

  export type ImoveisSumAggregateOutputType = {
    id: number | null
    subtipo_id: number | null
    tipoimovel_id: number | null
    preco: Decimal | null
    area: number | null
    quartos: number | null
    banheiros: number | null
    vagas_garagem: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    id_proprietario: number | null
    id_corretor: number | null
    area_util_hectares: Decimal | null
    area_total_hectares: Decimal | null
    salas: number | null
    andar: number | null
    area_privativa: Decimal | null
    area_comum: Decimal | null
    suites: number | null
    views: number | null
    estado_id: number | null
    valor_iptu: Decimal | null
    valor_condominio: Decimal | null
  }

  export type ImoveisMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    subtipo_id: number | null
    tipoimovel_id: number | null
    preco: Decimal | null
    area: number | null
    quartos: number | null
    banheiros: number | null
    vagas_garagem: number | null
    endereco: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    cep: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    data_cadastro: Date | null
    data_atualizacao: Date | null
    disponivel: boolean | null
    destaque: boolean | null
    id_proprietario: number | null
    id_corretor: number | null
    area_util_hectares: Decimal | null
    area_total_hectares: Decimal | null
    salas: number | null
    andar: number | null
    area_privativa: Decimal | null
    area_comum: Decimal | null
    suites: number | null
    mobiliado: boolean | null
    aceita_animais: boolean | null
    views: number | null
    estado_id: number | null
    valor_iptu: Decimal | null
    valor_condominio: Decimal | null
  }

  export type ImoveisMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    subtipo_id: number | null
    tipoimovel_id: number | null
    preco: Decimal | null
    area: number | null
    quartos: number | null
    banheiros: number | null
    vagas_garagem: number | null
    endereco: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    cep: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    data_cadastro: Date | null
    data_atualizacao: Date | null
    disponivel: boolean | null
    destaque: boolean | null
    id_proprietario: number | null
    id_corretor: number | null
    area_util_hectares: Decimal | null
    area_total_hectares: Decimal | null
    salas: number | null
    andar: number | null
    area_privativa: Decimal | null
    area_comum: Decimal | null
    suites: number | null
    mobiliado: boolean | null
    aceita_animais: boolean | null
    views: number | null
    estado_id: number | null
    valor_iptu: Decimal | null
    valor_condominio: Decimal | null
  }

  export type ImoveisCountAggregateOutputType = {
    id: number
    titulo: number
    descricao: number
    subtipo_id: number
    tipoimovel_id: number
    preco: number
    area: number
    quartos: number
    banheiros: number
    vagas_garagem: number
    endereco: number
    numero: number
    complemento: number
    bairro: number
    cidade: number
    estado: number
    cep: number
    latitude: number
    longitude: number
    data_cadastro: number
    data_atualizacao: number
    disponivel: number
    destaque: number
    imagens: number
    id_proprietario: number
    id_corretor: number
    area_util_hectares: number
    area_total_hectares: number
    salas: number
    andar: number
    area_privativa: number
    area_comum: number
    suites: number
    mobiliado: number
    aceita_animais: number
    views: number
    estado_id: number
    valor_iptu: number
    valor_condominio: number
    _all: number
  }


  export type ImoveisAvgAggregateInputType = {
    id?: true
    subtipo_id?: true
    tipoimovel_id?: true
    preco?: true
    area?: true
    quartos?: true
    banheiros?: true
    vagas_garagem?: true
    latitude?: true
    longitude?: true
    id_proprietario?: true
    id_corretor?: true
    area_util_hectares?: true
    area_total_hectares?: true
    salas?: true
    andar?: true
    area_privativa?: true
    area_comum?: true
    suites?: true
    views?: true
    estado_id?: true
    valor_iptu?: true
    valor_condominio?: true
  }

  export type ImoveisSumAggregateInputType = {
    id?: true
    subtipo_id?: true
    tipoimovel_id?: true
    preco?: true
    area?: true
    quartos?: true
    banheiros?: true
    vagas_garagem?: true
    latitude?: true
    longitude?: true
    id_proprietario?: true
    id_corretor?: true
    area_util_hectares?: true
    area_total_hectares?: true
    salas?: true
    andar?: true
    area_privativa?: true
    area_comum?: true
    suites?: true
    views?: true
    estado_id?: true
    valor_iptu?: true
    valor_condominio?: true
  }

  export type ImoveisMinAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    subtipo_id?: true
    tipoimovel_id?: true
    preco?: true
    area?: true
    quartos?: true
    banheiros?: true
    vagas_garagem?: true
    endereco?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
    latitude?: true
    longitude?: true
    data_cadastro?: true
    data_atualizacao?: true
    disponivel?: true
    destaque?: true
    id_proprietario?: true
    id_corretor?: true
    area_util_hectares?: true
    area_total_hectares?: true
    salas?: true
    andar?: true
    area_privativa?: true
    area_comum?: true
    suites?: true
    mobiliado?: true
    aceita_animais?: true
    views?: true
    estado_id?: true
    valor_iptu?: true
    valor_condominio?: true
  }

  export type ImoveisMaxAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    subtipo_id?: true
    tipoimovel_id?: true
    preco?: true
    area?: true
    quartos?: true
    banheiros?: true
    vagas_garagem?: true
    endereco?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
    latitude?: true
    longitude?: true
    data_cadastro?: true
    data_atualizacao?: true
    disponivel?: true
    destaque?: true
    id_proprietario?: true
    id_corretor?: true
    area_util_hectares?: true
    area_total_hectares?: true
    salas?: true
    andar?: true
    area_privativa?: true
    area_comum?: true
    suites?: true
    mobiliado?: true
    aceita_animais?: true
    views?: true
    estado_id?: true
    valor_iptu?: true
    valor_condominio?: true
  }

  export type ImoveisCountAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    subtipo_id?: true
    tipoimovel_id?: true
    preco?: true
    area?: true
    quartos?: true
    banheiros?: true
    vagas_garagem?: true
    endereco?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
    latitude?: true
    longitude?: true
    data_cadastro?: true
    data_atualizacao?: true
    disponivel?: true
    destaque?: true
    imagens?: true
    id_proprietario?: true
    id_corretor?: true
    area_util_hectares?: true
    area_total_hectares?: true
    salas?: true
    andar?: true
    area_privativa?: true
    area_comum?: true
    suites?: true
    mobiliado?: true
    aceita_animais?: true
    views?: true
    estado_id?: true
    valor_iptu?: true
    valor_condominio?: true
    _all?: true
  }

  export type ImoveisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imoveis to aggregate.
     */
    where?: imoveisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imoveis to fetch.
     */
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imoveisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imoveis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imoveis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imoveis
    **/
    _count?: true | ImoveisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImoveisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImoveisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImoveisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImoveisMaxAggregateInputType
  }

  export type GetImoveisAggregateType<T extends ImoveisAggregateArgs> = {
        [P in keyof T & keyof AggregateImoveis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImoveis[P]>
      : GetScalarType<T[P], AggregateImoveis[P]>
  }




  export type imoveisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imoveisWhereInput
    orderBy?: imoveisOrderByWithAggregationInput | imoveisOrderByWithAggregationInput[]
    by: ImoveisScalarFieldEnum[] | ImoveisScalarFieldEnum
    having?: imoveisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImoveisCountAggregateInputType | true
    _avg?: ImoveisAvgAggregateInputType
    _sum?: ImoveisSumAggregateInputType
    _min?: ImoveisMinAggregateInputType
    _max?: ImoveisMaxAggregateInputType
  }

  export type ImoveisGroupByOutputType = {
    id: number
    titulo: string
    descricao: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal
    area: number | null
    quartos: number | null
    banheiros: number | null
    vagas_garagem: number | null
    endereco: string
    numero: string | null
    complemento: string | null
    bairro: string
    cidade: string
    estado: string
    cep: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    data_cadastro: Date | null
    data_atualizacao: Date | null
    disponivel: boolean | null
    destaque: boolean | null
    imagens: string[]
    id_proprietario: number | null
    id_corretor: number | null
    area_util_hectares: Decimal | null
    area_total_hectares: Decimal | null
    salas: number | null
    andar: number | null
    area_privativa: Decimal | null
    area_comum: Decimal | null
    suites: number | null
    mobiliado: boolean | null
    aceita_animais: boolean | null
    views: number | null
    estado_id: number | null
    valor_iptu: Decimal | null
    valor_condominio: Decimal | null
    _count: ImoveisCountAggregateOutputType | null
    _avg: ImoveisAvgAggregateOutputType | null
    _sum: ImoveisSumAggregateOutputType | null
    _min: ImoveisMinAggregateOutputType | null
    _max: ImoveisMaxAggregateOutputType | null
  }

  type GetImoveisGroupByPayload<T extends imoveisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImoveisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImoveisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImoveisGroupByOutputType[P]>
            : GetScalarType<T[P], ImoveisGroupByOutputType[P]>
        }
      >
    >


  export type imoveisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    subtipo_id?: boolean
    tipoimovel_id?: boolean
    preco?: boolean
    area?: boolean
    quartos?: boolean
    banheiros?: boolean
    vagas_garagem?: boolean
    endereco?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    data_cadastro?: boolean
    data_atualizacao?: boolean
    disponivel?: boolean
    destaque?: boolean
    imagens?: boolean
    id_proprietario?: boolean
    id_corretor?: boolean
    area_util_hectares?: boolean
    area_total_hectares?: boolean
    salas?: boolean
    andar?: boolean
    area_privativa?: boolean
    area_comum?: boolean
    suites?: boolean
    mobiliado?: boolean
    aceita_animais?: boolean
    views?: boolean
    estado_id?: boolean
    valor_iptu?: boolean
    valor_condominio?: boolean
    favoritos?: boolean | imoveis$favoritosArgs<ExtArgs>
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
    imovel_caracteristicas?: boolean | imoveis$imovel_caracteristicasArgs<ExtArgs>
    _count?: boolean | ImoveisCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imoveis"]>

  export type imoveisSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    subtipo_id?: boolean
    tipoimovel_id?: boolean
    preco?: boolean
    area?: boolean
    quartos?: boolean
    banheiros?: boolean
    vagas_garagem?: boolean
    endereco?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    data_cadastro?: boolean
    data_atualizacao?: boolean
    disponivel?: boolean
    destaque?: boolean
    imagens?: boolean
    id_proprietario?: boolean
    id_corretor?: boolean
    area_util_hectares?: boolean
    area_total_hectares?: boolean
    salas?: boolean
    andar?: boolean
    area_privativa?: boolean
    area_comum?: boolean
    suites?: boolean
    mobiliado?: boolean
    aceita_animais?: boolean
    views?: boolean
    estado_id?: boolean
    valor_iptu?: boolean
    valor_condominio?: boolean
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imoveis"]>

  export type imoveisSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    subtipo_id?: boolean
    tipoimovel_id?: boolean
    preco?: boolean
    area?: boolean
    quartos?: boolean
    banheiros?: boolean
    vagas_garagem?: boolean
    endereco?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    data_cadastro?: boolean
    data_atualizacao?: boolean
    disponivel?: boolean
    destaque?: boolean
    imagens?: boolean
    id_proprietario?: boolean
    id_corretor?: boolean
    area_util_hectares?: boolean
    area_total_hectares?: boolean
    salas?: boolean
    andar?: boolean
    area_privativa?: boolean
    area_comum?: boolean
    suites?: boolean
    mobiliado?: boolean
    aceita_animais?: boolean
    views?: boolean
    estado_id?: boolean
    valor_iptu?: boolean
    valor_condominio?: boolean
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imoveis"]>

  export type imoveisSelectScalar = {
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    subtipo_id?: boolean
    tipoimovel_id?: boolean
    preco?: boolean
    area?: boolean
    quartos?: boolean
    banheiros?: boolean
    vagas_garagem?: boolean
    endereco?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    data_cadastro?: boolean
    data_atualizacao?: boolean
    disponivel?: boolean
    destaque?: boolean
    imagens?: boolean
    id_proprietario?: boolean
    id_corretor?: boolean
    area_util_hectares?: boolean
    area_total_hectares?: boolean
    salas?: boolean
    andar?: boolean
    area_privativa?: boolean
    area_comum?: boolean
    suites?: boolean
    mobiliado?: boolean
    aceita_animais?: boolean
    views?: boolean
    estado_id?: boolean
    valor_iptu?: boolean
    valor_condominio?: boolean
  }

  export type imoveisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descricao" | "subtipo_id" | "tipoimovel_id" | "preco" | "area" | "quartos" | "banheiros" | "vagas_garagem" | "endereco" | "numero" | "complemento" | "bairro" | "cidade" | "estado" | "cep" | "latitude" | "longitude" | "data_cadastro" | "data_atualizacao" | "disponivel" | "destaque" | "imagens" | "id_proprietario" | "id_corretor" | "area_util_hectares" | "area_total_hectares" | "salas" | "andar" | "area_privativa" | "area_comum" | "suites" | "mobiliado" | "aceita_animais" | "views" | "estado_id" | "valor_iptu" | "valor_condominio", ExtArgs["result"]["imoveis"]>
  export type imoveisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | imoveis$favoritosArgs<ExtArgs>
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
    imovel_caracteristicas?: boolean | imoveis$imovel_caracteristicasArgs<ExtArgs>
    _count?: boolean | ImoveisCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type imoveisIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }
  export type imoveisIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    corretores?: boolean | imoveis$corretoresArgs<ExtArgs>
    usuarios?: boolean | imoveis$usuariosArgs<ExtArgs>
    subtipos_imovel?: boolean | subtipos_imovelDefaultArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }

  export type $imoveisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imoveis"
    objects: {
      favoritos: Prisma.$favoritosPayload<ExtArgs>[]
      corretores: Prisma.$corretoresPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
      subtipos_imovel: Prisma.$subtipos_imovelPayload<ExtArgs>
      tipos_imovel: Prisma.$tipos_imovelPayload<ExtArgs>
      imovel_caracteristicas: Prisma.$imovel_caracteristicasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      descricao: string | null
      subtipo_id: number
      tipoimovel_id: number
      preco: Prisma.Decimal
      area: number | null
      quartos: number | null
      banheiros: number | null
      vagas_garagem: number | null
      endereco: string
      numero: string | null
      complemento: string | null
      bairro: string
      cidade: string
      estado: string
      cep: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      data_cadastro: Date | null
      data_atualizacao: Date | null
      disponivel: boolean | null
      destaque: boolean | null
      imagens: string[]
      id_proprietario: number | null
      id_corretor: number | null
      area_util_hectares: Prisma.Decimal | null
      area_total_hectares: Prisma.Decimal | null
      salas: number | null
      andar: number | null
      area_privativa: Prisma.Decimal | null
      area_comum: Prisma.Decimal | null
      suites: number | null
      mobiliado: boolean | null
      aceita_animais: boolean | null
      views: number | null
      estado_id: number | null
      valor_iptu: Prisma.Decimal | null
      valor_condominio: Prisma.Decimal | null
    }, ExtArgs["result"]["imoveis"]>
    composites: {}
  }

  type imoveisGetPayload<S extends boolean | null | undefined | imoveisDefaultArgs> = $Result.GetResult<Prisma.$imoveisPayload, S>

  type imoveisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<imoveisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImoveisCountAggregateInputType | true
    }

  export interface imoveisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imoveis'], meta: { name: 'imoveis' } }
    /**
     * Find zero or one Imoveis that matches the filter.
     * @param {imoveisFindUniqueArgs} args - Arguments to find a Imoveis
     * @example
     * // Get one Imoveis
     * const imoveis = await prisma.imoveis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imoveisFindUniqueArgs>(args: SelectSubset<T, imoveisFindUniqueArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Imoveis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {imoveisFindUniqueOrThrowArgs} args - Arguments to find a Imoveis
     * @example
     * // Get one Imoveis
     * const imoveis = await prisma.imoveis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imoveisFindUniqueOrThrowArgs>(args: SelectSubset<T, imoveisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imoveis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisFindFirstArgs} args - Arguments to find a Imoveis
     * @example
     * // Get one Imoveis
     * const imoveis = await prisma.imoveis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imoveisFindFirstArgs>(args?: SelectSubset<T, imoveisFindFirstArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imoveis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisFindFirstOrThrowArgs} args - Arguments to find a Imoveis
     * @example
     * // Get one Imoveis
     * const imoveis = await prisma.imoveis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imoveisFindFirstOrThrowArgs>(args?: SelectSubset<T, imoveisFindFirstOrThrowArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Imoveis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imoveis
     * const imoveis = await prisma.imoveis.findMany()
     * 
     * // Get first 10 Imoveis
     * const imoveis = await prisma.imoveis.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imoveisWithIdOnly = await prisma.imoveis.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends imoveisFindManyArgs>(args?: SelectSubset<T, imoveisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Imoveis.
     * @param {imoveisCreateArgs} args - Arguments to create a Imoveis.
     * @example
     * // Create one Imoveis
     * const Imoveis = await prisma.imoveis.create({
     *   data: {
     *     // ... data to create a Imoveis
     *   }
     * })
     * 
     */
    create<T extends imoveisCreateArgs>(args: SelectSubset<T, imoveisCreateArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Imoveis.
     * @param {imoveisCreateManyArgs} args - Arguments to create many Imoveis.
     * @example
     * // Create many Imoveis
     * const imoveis = await prisma.imoveis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imoveisCreateManyArgs>(args?: SelectSubset<T, imoveisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imoveis and returns the data saved in the database.
     * @param {imoveisCreateManyAndReturnArgs} args - Arguments to create many Imoveis.
     * @example
     * // Create many Imoveis
     * const imoveis = await prisma.imoveis.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imoveis and only return the `id`
     * const imoveisWithIdOnly = await prisma.imoveis.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends imoveisCreateManyAndReturnArgs>(args?: SelectSubset<T, imoveisCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Imoveis.
     * @param {imoveisDeleteArgs} args - Arguments to delete one Imoveis.
     * @example
     * // Delete one Imoveis
     * const Imoveis = await prisma.imoveis.delete({
     *   where: {
     *     // ... filter to delete one Imoveis
     *   }
     * })
     * 
     */
    delete<T extends imoveisDeleteArgs>(args: SelectSubset<T, imoveisDeleteArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Imoveis.
     * @param {imoveisUpdateArgs} args - Arguments to update one Imoveis.
     * @example
     * // Update one Imoveis
     * const imoveis = await prisma.imoveis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imoveisUpdateArgs>(args: SelectSubset<T, imoveisUpdateArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Imoveis.
     * @param {imoveisDeleteManyArgs} args - Arguments to filter Imoveis to delete.
     * @example
     * // Delete a few Imoveis
     * const { count } = await prisma.imoveis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imoveisDeleteManyArgs>(args?: SelectSubset<T, imoveisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imoveis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imoveis
     * const imoveis = await prisma.imoveis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imoveisUpdateManyArgs>(args: SelectSubset<T, imoveisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imoveis and returns the data updated in the database.
     * @param {imoveisUpdateManyAndReturnArgs} args - Arguments to update many Imoveis.
     * @example
     * // Update many Imoveis
     * const imoveis = await prisma.imoveis.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Imoveis and only return the `id`
     * const imoveisWithIdOnly = await prisma.imoveis.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends imoveisUpdateManyAndReturnArgs>(args: SelectSubset<T, imoveisUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Imoveis.
     * @param {imoveisUpsertArgs} args - Arguments to update or create a Imoveis.
     * @example
     * // Update or create a Imoveis
     * const imoveis = await prisma.imoveis.upsert({
     *   create: {
     *     // ... data to create a Imoveis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imoveis we want to update
     *   }
     * })
     */
    upsert<T extends imoveisUpsertArgs>(args: SelectSubset<T, imoveisUpsertArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Imoveis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisCountArgs} args - Arguments to filter Imoveis to count.
     * @example
     * // Count the number of Imoveis
     * const count = await prisma.imoveis.count({
     *   where: {
     *     // ... the filter for the Imoveis we want to count
     *   }
     * })
    **/
    count<T extends imoveisCountArgs>(
      args?: Subset<T, imoveisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImoveisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imoveis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImoveisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImoveisAggregateArgs>(args: Subset<T, ImoveisAggregateArgs>): Prisma.PrismaPromise<GetImoveisAggregateType<T>>

    /**
     * Group by Imoveis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imoveisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imoveisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imoveisGroupByArgs['orderBy'] }
        : { orderBy?: imoveisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imoveisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImoveisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imoveis model
   */
  readonly fields: imoveisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imoveis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imoveisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    favoritos<T extends imoveis$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, imoveis$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    corretores<T extends imoveis$corretoresArgs<ExtArgs> = {}>(args?: Subset<T, imoveis$corretoresArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuarios<T extends imoveis$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, imoveis$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    subtipos_imovel<T extends subtipos_imovelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, subtipos_imovelDefaultArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipos_imovel<T extends tipos_imovelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipos_imovelDefaultArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    imovel_caracteristicas<T extends imoveis$imovel_caracteristicasArgs<ExtArgs> = {}>(args?: Subset<T, imoveis$imovel_caracteristicasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the imoveis model
   */
  interface imoveisFieldRefs {
    readonly id: FieldRef<"imoveis", 'Int'>
    readonly titulo: FieldRef<"imoveis", 'String'>
    readonly descricao: FieldRef<"imoveis", 'String'>
    readonly subtipo_id: FieldRef<"imoveis", 'Int'>
    readonly tipoimovel_id: FieldRef<"imoveis", 'Int'>
    readonly preco: FieldRef<"imoveis", 'Decimal'>
    readonly area: FieldRef<"imoveis", 'Int'>
    readonly quartos: FieldRef<"imoveis", 'Int'>
    readonly banheiros: FieldRef<"imoveis", 'Int'>
    readonly vagas_garagem: FieldRef<"imoveis", 'Int'>
    readonly endereco: FieldRef<"imoveis", 'String'>
    readonly numero: FieldRef<"imoveis", 'String'>
    readonly complemento: FieldRef<"imoveis", 'String'>
    readonly bairro: FieldRef<"imoveis", 'String'>
    readonly cidade: FieldRef<"imoveis", 'String'>
    readonly estado: FieldRef<"imoveis", 'String'>
    readonly cep: FieldRef<"imoveis", 'String'>
    readonly latitude: FieldRef<"imoveis", 'Decimal'>
    readonly longitude: FieldRef<"imoveis", 'Decimal'>
    readonly data_cadastro: FieldRef<"imoveis", 'DateTime'>
    readonly data_atualizacao: FieldRef<"imoveis", 'DateTime'>
    readonly disponivel: FieldRef<"imoveis", 'Boolean'>
    readonly destaque: FieldRef<"imoveis", 'Boolean'>
    readonly imagens: FieldRef<"imoveis", 'String[]'>
    readonly id_proprietario: FieldRef<"imoveis", 'Int'>
    readonly id_corretor: FieldRef<"imoveis", 'Int'>
    readonly area_util_hectares: FieldRef<"imoveis", 'Decimal'>
    readonly area_total_hectares: FieldRef<"imoveis", 'Decimal'>
    readonly salas: FieldRef<"imoveis", 'Int'>
    readonly andar: FieldRef<"imoveis", 'Int'>
    readonly area_privativa: FieldRef<"imoveis", 'Decimal'>
    readonly area_comum: FieldRef<"imoveis", 'Decimal'>
    readonly suites: FieldRef<"imoveis", 'Int'>
    readonly mobiliado: FieldRef<"imoveis", 'Boolean'>
    readonly aceita_animais: FieldRef<"imoveis", 'Boolean'>
    readonly views: FieldRef<"imoveis", 'Int'>
    readonly estado_id: FieldRef<"imoveis", 'Int'>
    readonly valor_iptu: FieldRef<"imoveis", 'Decimal'>
    readonly valor_condominio: FieldRef<"imoveis", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * imoveis findUnique
   */
  export type imoveisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter, which imoveis to fetch.
     */
    where: imoveisWhereUniqueInput
  }

  /**
   * imoveis findUniqueOrThrow
   */
  export type imoveisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter, which imoveis to fetch.
     */
    where: imoveisWhereUniqueInput
  }

  /**
   * imoveis findFirst
   */
  export type imoveisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter, which imoveis to fetch.
     */
    where?: imoveisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imoveis to fetch.
     */
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imoveis.
     */
    cursor?: imoveisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imoveis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imoveis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imoveis.
     */
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * imoveis findFirstOrThrow
   */
  export type imoveisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter, which imoveis to fetch.
     */
    where?: imoveisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imoveis to fetch.
     */
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imoveis.
     */
    cursor?: imoveisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imoveis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imoveis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imoveis.
     */
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * imoveis findMany
   */
  export type imoveisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter, which imoveis to fetch.
     */
    where?: imoveisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imoveis to fetch.
     */
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imoveis.
     */
    cursor?: imoveisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imoveis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imoveis.
     */
    skip?: number
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * imoveis create
   */
  export type imoveisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * The data needed to create a imoveis.
     */
    data: XOR<imoveisCreateInput, imoveisUncheckedCreateInput>
  }

  /**
   * imoveis createMany
   */
  export type imoveisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imoveis.
     */
    data: imoveisCreateManyInput | imoveisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imoveis createManyAndReturn
   */
  export type imoveisCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * The data used to create many imoveis.
     */
    data: imoveisCreateManyInput | imoveisCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * imoveis update
   */
  export type imoveisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * The data needed to update a imoveis.
     */
    data: XOR<imoveisUpdateInput, imoveisUncheckedUpdateInput>
    /**
     * Choose, which imoveis to update.
     */
    where: imoveisWhereUniqueInput
  }

  /**
   * imoveis updateMany
   */
  export type imoveisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imoveis.
     */
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyInput>
    /**
     * Filter which imoveis to update
     */
    where?: imoveisWhereInput
    /**
     * Limit how many imoveis to update.
     */
    limit?: number
  }

  /**
   * imoveis updateManyAndReturn
   */
  export type imoveisUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * The data used to update imoveis.
     */
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyInput>
    /**
     * Filter which imoveis to update
     */
    where?: imoveisWhereInput
    /**
     * Limit how many imoveis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * imoveis upsert
   */
  export type imoveisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * The filter to search for the imoveis to update in case it exists.
     */
    where: imoveisWhereUniqueInput
    /**
     * In case the imoveis found by the `where` argument doesn't exist, create a new imoveis with this data.
     */
    create: XOR<imoveisCreateInput, imoveisUncheckedCreateInput>
    /**
     * In case the imoveis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imoveisUpdateInput, imoveisUncheckedUpdateInput>
  }

  /**
   * imoveis delete
   */
  export type imoveisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    /**
     * Filter which imoveis to delete.
     */
    where: imoveisWhereUniqueInput
  }

  /**
   * imoveis deleteMany
   */
  export type imoveisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imoveis to delete
     */
    where?: imoveisWhereInput
    /**
     * Limit how many imoveis to delete.
     */
    limit?: number
  }

  /**
   * imoveis.favoritos
   */
  export type imoveis$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    cursor?: favoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * imoveis.corretores
   */
  export type imoveis$corretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    where?: corretoresWhereInput
  }

  /**
   * imoveis.usuarios
   */
  export type imoveis$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * imoveis.imovel_caracteristicas
   */
  export type imoveis$imovel_caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    where?: imovel_caracteristicasWhereInput
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    cursor?: imovel_caracteristicasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Imovel_caracteristicasScalarFieldEnum | Imovel_caracteristicasScalarFieldEnum[]
  }

  /**
   * imoveis without action
   */
  export type imoveisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
  }


  /**
   * Model imovel_caracteristicas
   */

  export type AggregateImovel_caracteristicas = {
    _count: Imovel_caracteristicasCountAggregateOutputType | null
    _avg: Imovel_caracteristicasAvgAggregateOutputType | null
    _sum: Imovel_caracteristicasSumAggregateOutputType | null
    _min: Imovel_caracteristicasMinAggregateOutputType | null
    _max: Imovel_caracteristicasMaxAggregateOutputType | null
  }

  export type Imovel_caracteristicasAvgAggregateOutputType = {
    id: number | null
    imovel_id: number | null
    caracteristica_id: number | null
  }

  export type Imovel_caracteristicasSumAggregateOutputType = {
    id: number | null
    imovel_id: number | null
    caracteristica_id: number | null
  }

  export type Imovel_caracteristicasMinAggregateOutputType = {
    id: number | null
    imovel_id: number | null
    caracteristica_id: number | null
  }

  export type Imovel_caracteristicasMaxAggregateOutputType = {
    id: number | null
    imovel_id: number | null
    caracteristica_id: number | null
  }

  export type Imovel_caracteristicasCountAggregateOutputType = {
    id: number
    imovel_id: number
    caracteristica_id: number
    _all: number
  }


  export type Imovel_caracteristicasAvgAggregateInputType = {
    id?: true
    imovel_id?: true
    caracteristica_id?: true
  }

  export type Imovel_caracteristicasSumAggregateInputType = {
    id?: true
    imovel_id?: true
    caracteristica_id?: true
  }

  export type Imovel_caracteristicasMinAggregateInputType = {
    id?: true
    imovel_id?: true
    caracteristica_id?: true
  }

  export type Imovel_caracteristicasMaxAggregateInputType = {
    id?: true
    imovel_id?: true
    caracteristica_id?: true
  }

  export type Imovel_caracteristicasCountAggregateInputType = {
    id?: true
    imovel_id?: true
    caracteristica_id?: true
    _all?: true
  }

  export type Imovel_caracteristicasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imovel_caracteristicas to aggregate.
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imovel_caracteristicas to fetch.
     */
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imovel_caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imovel_caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imovel_caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imovel_caracteristicas
    **/
    _count?: true | Imovel_caracteristicasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Imovel_caracteristicasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Imovel_caracteristicasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Imovel_caracteristicasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Imovel_caracteristicasMaxAggregateInputType
  }

  export type GetImovel_caracteristicasAggregateType<T extends Imovel_caracteristicasAggregateArgs> = {
        [P in keyof T & keyof AggregateImovel_caracteristicas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImovel_caracteristicas[P]>
      : GetScalarType<T[P], AggregateImovel_caracteristicas[P]>
  }




  export type imovel_caracteristicasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imovel_caracteristicasWhereInput
    orderBy?: imovel_caracteristicasOrderByWithAggregationInput | imovel_caracteristicasOrderByWithAggregationInput[]
    by: Imovel_caracteristicasScalarFieldEnum[] | Imovel_caracteristicasScalarFieldEnum
    having?: imovel_caracteristicasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Imovel_caracteristicasCountAggregateInputType | true
    _avg?: Imovel_caracteristicasAvgAggregateInputType
    _sum?: Imovel_caracteristicasSumAggregateInputType
    _min?: Imovel_caracteristicasMinAggregateInputType
    _max?: Imovel_caracteristicasMaxAggregateInputType
  }

  export type Imovel_caracteristicasGroupByOutputType = {
    id: number
    imovel_id: number
    caracteristica_id: number
    _count: Imovel_caracteristicasCountAggregateOutputType | null
    _avg: Imovel_caracteristicasAvgAggregateOutputType | null
    _sum: Imovel_caracteristicasSumAggregateOutputType | null
    _min: Imovel_caracteristicasMinAggregateOutputType | null
    _max: Imovel_caracteristicasMaxAggregateOutputType | null
  }

  type GetImovel_caracteristicasGroupByPayload<T extends imovel_caracteristicasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Imovel_caracteristicasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Imovel_caracteristicasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Imovel_caracteristicasGroupByOutputType[P]>
            : GetScalarType<T[P], Imovel_caracteristicasGroupByOutputType[P]>
        }
      >
    >


  export type imovel_caracteristicasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imovel_id?: boolean
    caracteristica_id?: boolean
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imovel_caracteristicas"]>

  export type imovel_caracteristicasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imovel_id?: boolean
    caracteristica_id?: boolean
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imovel_caracteristicas"]>

  export type imovel_caracteristicasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imovel_id?: boolean
    caracteristica_id?: boolean
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imovel_caracteristicas"]>

  export type imovel_caracteristicasSelectScalar = {
    id?: boolean
    imovel_id?: boolean
    caracteristica_id?: boolean
  }

  export type imovel_caracteristicasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "imovel_id" | "caracteristica_id", ExtArgs["result"]["imovel_caracteristicas"]>
  export type imovel_caracteristicasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }
  export type imovel_caracteristicasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }
  export type imovel_caracteristicasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caracteristicas?: boolean | caracteristicasDefaultArgs<ExtArgs>
    imoveis?: boolean | imoveisDefaultArgs<ExtArgs>
  }

  export type $imovel_caracteristicasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imovel_caracteristicas"
    objects: {
      caracteristicas: Prisma.$caracteristicasPayload<ExtArgs>
      imoveis: Prisma.$imoveisPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      imovel_id: number
      caracteristica_id: number
    }, ExtArgs["result"]["imovel_caracteristicas"]>
    composites: {}
  }

  type imovel_caracteristicasGetPayload<S extends boolean | null | undefined | imovel_caracteristicasDefaultArgs> = $Result.GetResult<Prisma.$imovel_caracteristicasPayload, S>

  type imovel_caracteristicasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<imovel_caracteristicasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Imovel_caracteristicasCountAggregateInputType | true
    }

  export interface imovel_caracteristicasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imovel_caracteristicas'], meta: { name: 'imovel_caracteristicas' } }
    /**
     * Find zero or one Imovel_caracteristicas that matches the filter.
     * @param {imovel_caracteristicasFindUniqueArgs} args - Arguments to find a Imovel_caracteristicas
     * @example
     * // Get one Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imovel_caracteristicasFindUniqueArgs>(args: SelectSubset<T, imovel_caracteristicasFindUniqueArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Imovel_caracteristicas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {imovel_caracteristicasFindUniqueOrThrowArgs} args - Arguments to find a Imovel_caracteristicas
     * @example
     * // Get one Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imovel_caracteristicasFindUniqueOrThrowArgs>(args: SelectSubset<T, imovel_caracteristicasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imovel_caracteristicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasFindFirstArgs} args - Arguments to find a Imovel_caracteristicas
     * @example
     * // Get one Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imovel_caracteristicasFindFirstArgs>(args?: SelectSubset<T, imovel_caracteristicasFindFirstArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imovel_caracteristicas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasFindFirstOrThrowArgs} args - Arguments to find a Imovel_caracteristicas
     * @example
     * // Get one Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imovel_caracteristicasFindFirstOrThrowArgs>(args?: SelectSubset<T, imovel_caracteristicasFindFirstOrThrowArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Imovel_caracteristicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findMany()
     * 
     * // Get first 10 Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imovel_caracteristicasWithIdOnly = await prisma.imovel_caracteristicas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends imovel_caracteristicasFindManyArgs>(args?: SelectSubset<T, imovel_caracteristicasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Imovel_caracteristicas.
     * @param {imovel_caracteristicasCreateArgs} args - Arguments to create a Imovel_caracteristicas.
     * @example
     * // Create one Imovel_caracteristicas
     * const Imovel_caracteristicas = await prisma.imovel_caracteristicas.create({
     *   data: {
     *     // ... data to create a Imovel_caracteristicas
     *   }
     * })
     * 
     */
    create<T extends imovel_caracteristicasCreateArgs>(args: SelectSubset<T, imovel_caracteristicasCreateArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Imovel_caracteristicas.
     * @param {imovel_caracteristicasCreateManyArgs} args - Arguments to create many Imovel_caracteristicas.
     * @example
     * // Create many Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imovel_caracteristicasCreateManyArgs>(args?: SelectSubset<T, imovel_caracteristicasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imovel_caracteristicas and returns the data saved in the database.
     * @param {imovel_caracteristicasCreateManyAndReturnArgs} args - Arguments to create many Imovel_caracteristicas.
     * @example
     * // Create many Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imovel_caracteristicas and only return the `id`
     * const imovel_caracteristicasWithIdOnly = await prisma.imovel_caracteristicas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends imovel_caracteristicasCreateManyAndReturnArgs>(args?: SelectSubset<T, imovel_caracteristicasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Imovel_caracteristicas.
     * @param {imovel_caracteristicasDeleteArgs} args - Arguments to delete one Imovel_caracteristicas.
     * @example
     * // Delete one Imovel_caracteristicas
     * const Imovel_caracteristicas = await prisma.imovel_caracteristicas.delete({
     *   where: {
     *     // ... filter to delete one Imovel_caracteristicas
     *   }
     * })
     * 
     */
    delete<T extends imovel_caracteristicasDeleteArgs>(args: SelectSubset<T, imovel_caracteristicasDeleteArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Imovel_caracteristicas.
     * @param {imovel_caracteristicasUpdateArgs} args - Arguments to update one Imovel_caracteristicas.
     * @example
     * // Update one Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imovel_caracteristicasUpdateArgs>(args: SelectSubset<T, imovel_caracteristicasUpdateArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Imovel_caracteristicas.
     * @param {imovel_caracteristicasDeleteManyArgs} args - Arguments to filter Imovel_caracteristicas to delete.
     * @example
     * // Delete a few Imovel_caracteristicas
     * const { count } = await prisma.imovel_caracteristicas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imovel_caracteristicasDeleteManyArgs>(args?: SelectSubset<T, imovel_caracteristicasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imovel_caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imovel_caracteristicasUpdateManyArgs>(args: SelectSubset<T, imovel_caracteristicasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imovel_caracteristicas and returns the data updated in the database.
     * @param {imovel_caracteristicasUpdateManyAndReturnArgs} args - Arguments to update many Imovel_caracteristicas.
     * @example
     * // Update many Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Imovel_caracteristicas and only return the `id`
     * const imovel_caracteristicasWithIdOnly = await prisma.imovel_caracteristicas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends imovel_caracteristicasUpdateManyAndReturnArgs>(args: SelectSubset<T, imovel_caracteristicasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Imovel_caracteristicas.
     * @param {imovel_caracteristicasUpsertArgs} args - Arguments to update or create a Imovel_caracteristicas.
     * @example
     * // Update or create a Imovel_caracteristicas
     * const imovel_caracteristicas = await prisma.imovel_caracteristicas.upsert({
     *   create: {
     *     // ... data to create a Imovel_caracteristicas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imovel_caracteristicas we want to update
     *   }
     * })
     */
    upsert<T extends imovel_caracteristicasUpsertArgs>(args: SelectSubset<T, imovel_caracteristicasUpsertArgs<ExtArgs>>): Prisma__imovel_caracteristicasClient<$Result.GetResult<Prisma.$imovel_caracteristicasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Imovel_caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasCountArgs} args - Arguments to filter Imovel_caracteristicas to count.
     * @example
     * // Count the number of Imovel_caracteristicas
     * const count = await prisma.imovel_caracteristicas.count({
     *   where: {
     *     // ... the filter for the Imovel_caracteristicas we want to count
     *   }
     * })
    **/
    count<T extends imovel_caracteristicasCountArgs>(
      args?: Subset<T, imovel_caracteristicasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Imovel_caracteristicasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imovel_caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Imovel_caracteristicasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Imovel_caracteristicasAggregateArgs>(args: Subset<T, Imovel_caracteristicasAggregateArgs>): Prisma.PrismaPromise<GetImovel_caracteristicasAggregateType<T>>

    /**
     * Group by Imovel_caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imovel_caracteristicasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imovel_caracteristicasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imovel_caracteristicasGroupByArgs['orderBy'] }
        : { orderBy?: imovel_caracteristicasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imovel_caracteristicasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImovel_caracteristicasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imovel_caracteristicas model
   */
  readonly fields: imovel_caracteristicasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imovel_caracteristicas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imovel_caracteristicasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    caracteristicas<T extends caracteristicasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, caracteristicasDefaultArgs<ExtArgs>>): Prisma__caracteristicasClient<$Result.GetResult<Prisma.$caracteristicasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    imoveis<T extends imoveisDefaultArgs<ExtArgs> = {}>(args?: Subset<T, imoveisDefaultArgs<ExtArgs>>): Prisma__imoveisClient<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the imovel_caracteristicas model
   */
  interface imovel_caracteristicasFieldRefs {
    readonly id: FieldRef<"imovel_caracteristicas", 'Int'>
    readonly imovel_id: FieldRef<"imovel_caracteristicas", 'Int'>
    readonly caracteristica_id: FieldRef<"imovel_caracteristicas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * imovel_caracteristicas findUnique
   */
  export type imovel_caracteristicasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which imovel_caracteristicas to fetch.
     */
    where: imovel_caracteristicasWhereUniqueInput
  }

  /**
   * imovel_caracteristicas findUniqueOrThrow
   */
  export type imovel_caracteristicasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which imovel_caracteristicas to fetch.
     */
    where: imovel_caracteristicasWhereUniqueInput
  }

  /**
   * imovel_caracteristicas findFirst
   */
  export type imovel_caracteristicasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which imovel_caracteristicas to fetch.
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imovel_caracteristicas to fetch.
     */
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imovel_caracteristicas.
     */
    cursor?: imovel_caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imovel_caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imovel_caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imovel_caracteristicas.
     */
    distinct?: Imovel_caracteristicasScalarFieldEnum | Imovel_caracteristicasScalarFieldEnum[]
  }

  /**
   * imovel_caracteristicas findFirstOrThrow
   */
  export type imovel_caracteristicasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which imovel_caracteristicas to fetch.
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imovel_caracteristicas to fetch.
     */
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imovel_caracteristicas.
     */
    cursor?: imovel_caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imovel_caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imovel_caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imovel_caracteristicas.
     */
    distinct?: Imovel_caracteristicasScalarFieldEnum | Imovel_caracteristicasScalarFieldEnum[]
  }

  /**
   * imovel_caracteristicas findMany
   */
  export type imovel_caracteristicasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter, which imovel_caracteristicas to fetch.
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imovel_caracteristicas to fetch.
     */
    orderBy?: imovel_caracteristicasOrderByWithRelationInput | imovel_caracteristicasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imovel_caracteristicas.
     */
    cursor?: imovel_caracteristicasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imovel_caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imovel_caracteristicas.
     */
    skip?: number
    distinct?: Imovel_caracteristicasScalarFieldEnum | Imovel_caracteristicasScalarFieldEnum[]
  }

  /**
   * imovel_caracteristicas create
   */
  export type imovel_caracteristicasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * The data needed to create a imovel_caracteristicas.
     */
    data: XOR<imovel_caracteristicasCreateInput, imovel_caracteristicasUncheckedCreateInput>
  }

  /**
   * imovel_caracteristicas createMany
   */
  export type imovel_caracteristicasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imovel_caracteristicas.
     */
    data: imovel_caracteristicasCreateManyInput | imovel_caracteristicasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imovel_caracteristicas createManyAndReturn
   */
  export type imovel_caracteristicasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * The data used to create many imovel_caracteristicas.
     */
    data: imovel_caracteristicasCreateManyInput | imovel_caracteristicasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * imovel_caracteristicas update
   */
  export type imovel_caracteristicasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * The data needed to update a imovel_caracteristicas.
     */
    data: XOR<imovel_caracteristicasUpdateInput, imovel_caracteristicasUncheckedUpdateInput>
    /**
     * Choose, which imovel_caracteristicas to update.
     */
    where: imovel_caracteristicasWhereUniqueInput
  }

  /**
   * imovel_caracteristicas updateMany
   */
  export type imovel_caracteristicasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imovel_caracteristicas.
     */
    data: XOR<imovel_caracteristicasUpdateManyMutationInput, imovel_caracteristicasUncheckedUpdateManyInput>
    /**
     * Filter which imovel_caracteristicas to update
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * Limit how many imovel_caracteristicas to update.
     */
    limit?: number
  }

  /**
   * imovel_caracteristicas updateManyAndReturn
   */
  export type imovel_caracteristicasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * The data used to update imovel_caracteristicas.
     */
    data: XOR<imovel_caracteristicasUpdateManyMutationInput, imovel_caracteristicasUncheckedUpdateManyInput>
    /**
     * Filter which imovel_caracteristicas to update
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * Limit how many imovel_caracteristicas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * imovel_caracteristicas upsert
   */
  export type imovel_caracteristicasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * The filter to search for the imovel_caracteristicas to update in case it exists.
     */
    where: imovel_caracteristicasWhereUniqueInput
    /**
     * In case the imovel_caracteristicas found by the `where` argument doesn't exist, create a new imovel_caracteristicas with this data.
     */
    create: XOR<imovel_caracteristicasCreateInput, imovel_caracteristicasUncheckedCreateInput>
    /**
     * In case the imovel_caracteristicas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imovel_caracteristicasUpdateInput, imovel_caracteristicasUncheckedUpdateInput>
  }

  /**
   * imovel_caracteristicas delete
   */
  export type imovel_caracteristicasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
    /**
     * Filter which imovel_caracteristicas to delete.
     */
    where: imovel_caracteristicasWhereUniqueInput
  }

  /**
   * imovel_caracteristicas deleteMany
   */
  export type imovel_caracteristicasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imovel_caracteristicas to delete
     */
    where?: imovel_caracteristicasWhereInput
    /**
     * Limit how many imovel_caracteristicas to delete.
     */
    limit?: number
  }

  /**
   * imovel_caracteristicas without action
   */
  export type imovel_caracteristicasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imovel_caracteristicas
     */
    select?: imovel_caracteristicasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imovel_caracteristicas
     */
    omit?: imovel_caracteristicasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imovel_caracteristicasInclude<ExtArgs> | null
  }


  /**
   * Model regioes
   */

  export type AggregateRegioes = {
    _count: RegioesCountAggregateOutputType | null
    _avg: RegioesAvgAggregateOutputType | null
    _sum: RegioesSumAggregateOutputType | null
    _min: RegioesMinAggregateOutputType | null
    _max: RegioesMaxAggregateOutputType | null
  }

  export type RegioesAvgAggregateOutputType = {
    id: number | null
  }

  export type RegioesSumAggregateOutputType = {
    id: number | null
  }

  export type RegioesMinAggregateOutputType = {
    id: number | null
    sigla: string | null
    nome: string | null
  }

  export type RegioesMaxAggregateOutputType = {
    id: number | null
    sigla: string | null
    nome: string | null
  }

  export type RegioesCountAggregateOutputType = {
    id: number
    sigla: number
    nome: number
    _all: number
  }


  export type RegioesAvgAggregateInputType = {
    id?: true
  }

  export type RegioesSumAggregateInputType = {
    id?: true
  }

  export type RegioesMinAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
  }

  export type RegioesMaxAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
  }

  export type RegioesCountAggregateInputType = {
    id?: true
    sigla?: true
    nome?: true
    _all?: true
  }

  export type RegioesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which regioes to aggregate.
     */
    where?: regioesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of regioes to fetch.
     */
    orderBy?: regioesOrderByWithRelationInput | regioesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: regioesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` regioes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` regioes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned regioes
    **/
    _count?: true | RegioesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegioesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegioesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegioesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegioesMaxAggregateInputType
  }

  export type GetRegioesAggregateType<T extends RegioesAggregateArgs> = {
        [P in keyof T & keyof AggregateRegioes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegioes[P]>
      : GetScalarType<T[P], AggregateRegioes[P]>
  }




  export type regioesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: regioesWhereInput
    orderBy?: regioesOrderByWithAggregationInput | regioesOrderByWithAggregationInput[]
    by: RegioesScalarFieldEnum[] | RegioesScalarFieldEnum
    having?: regioesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegioesCountAggregateInputType | true
    _avg?: RegioesAvgAggregateInputType
    _sum?: RegioesSumAggregateInputType
    _min?: RegioesMinAggregateInputType
    _max?: RegioesMaxAggregateInputType
  }

  export type RegioesGroupByOutputType = {
    id: number
    sigla: string
    nome: string
    _count: RegioesCountAggregateOutputType | null
    _avg: RegioesAvgAggregateOutputType | null
    _sum: RegioesSumAggregateOutputType | null
    _min: RegioesMinAggregateOutputType | null
    _max: RegioesMaxAggregateOutputType | null
  }

  type GetRegioesGroupByPayload<T extends regioesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegioesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegioesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegioesGroupByOutputType[P]>
            : GetScalarType<T[P], RegioesGroupByOutputType[P]>
        }
      >
    >


  export type regioesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
    estados?: boolean | regioes$estadosArgs<ExtArgs>
    _count?: boolean | RegioesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["regioes"]>

  export type regioesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
  }, ExtArgs["result"]["regioes"]>

  export type regioesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sigla?: boolean
    nome?: boolean
  }, ExtArgs["result"]["regioes"]>

  export type regioesSelectScalar = {
    id?: boolean
    sigla?: boolean
    nome?: boolean
  }

  export type regioesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sigla" | "nome", ExtArgs["result"]["regioes"]>
  export type regioesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estados?: boolean | regioes$estadosArgs<ExtArgs>
    _count?: boolean | RegioesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type regioesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type regioesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $regioesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "regioes"
    objects: {
      estados: Prisma.$estadosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sigla: string
      nome: string
    }, ExtArgs["result"]["regioes"]>
    composites: {}
  }

  type regioesGetPayload<S extends boolean | null | undefined | regioesDefaultArgs> = $Result.GetResult<Prisma.$regioesPayload, S>

  type regioesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<regioesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegioesCountAggregateInputType | true
    }

  export interface regioesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['regioes'], meta: { name: 'regioes' } }
    /**
     * Find zero or one Regioes that matches the filter.
     * @param {regioesFindUniqueArgs} args - Arguments to find a Regioes
     * @example
     * // Get one Regioes
     * const regioes = await prisma.regioes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends regioesFindUniqueArgs>(args: SelectSubset<T, regioesFindUniqueArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Regioes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {regioesFindUniqueOrThrowArgs} args - Arguments to find a Regioes
     * @example
     * // Get one Regioes
     * const regioes = await prisma.regioes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends regioesFindUniqueOrThrowArgs>(args: SelectSubset<T, regioesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Regioes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesFindFirstArgs} args - Arguments to find a Regioes
     * @example
     * // Get one Regioes
     * const regioes = await prisma.regioes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends regioesFindFirstArgs>(args?: SelectSubset<T, regioesFindFirstArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Regioes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesFindFirstOrThrowArgs} args - Arguments to find a Regioes
     * @example
     * // Get one Regioes
     * const regioes = await prisma.regioes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends regioesFindFirstOrThrowArgs>(args?: SelectSubset<T, regioesFindFirstOrThrowArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Regioes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Regioes
     * const regioes = await prisma.regioes.findMany()
     * 
     * // Get first 10 Regioes
     * const regioes = await prisma.regioes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const regioesWithIdOnly = await prisma.regioes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends regioesFindManyArgs>(args?: SelectSubset<T, regioesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Regioes.
     * @param {regioesCreateArgs} args - Arguments to create a Regioes.
     * @example
     * // Create one Regioes
     * const Regioes = await prisma.regioes.create({
     *   data: {
     *     // ... data to create a Regioes
     *   }
     * })
     * 
     */
    create<T extends regioesCreateArgs>(args: SelectSubset<T, regioesCreateArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Regioes.
     * @param {regioesCreateManyArgs} args - Arguments to create many Regioes.
     * @example
     * // Create many Regioes
     * const regioes = await prisma.regioes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends regioesCreateManyArgs>(args?: SelectSubset<T, regioesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Regioes and returns the data saved in the database.
     * @param {regioesCreateManyAndReturnArgs} args - Arguments to create many Regioes.
     * @example
     * // Create many Regioes
     * const regioes = await prisma.regioes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Regioes and only return the `id`
     * const regioesWithIdOnly = await prisma.regioes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends regioesCreateManyAndReturnArgs>(args?: SelectSubset<T, regioesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Regioes.
     * @param {regioesDeleteArgs} args - Arguments to delete one Regioes.
     * @example
     * // Delete one Regioes
     * const Regioes = await prisma.regioes.delete({
     *   where: {
     *     // ... filter to delete one Regioes
     *   }
     * })
     * 
     */
    delete<T extends regioesDeleteArgs>(args: SelectSubset<T, regioesDeleteArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Regioes.
     * @param {regioesUpdateArgs} args - Arguments to update one Regioes.
     * @example
     * // Update one Regioes
     * const regioes = await prisma.regioes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends regioesUpdateArgs>(args: SelectSubset<T, regioesUpdateArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Regioes.
     * @param {regioesDeleteManyArgs} args - Arguments to filter Regioes to delete.
     * @example
     * // Delete a few Regioes
     * const { count } = await prisma.regioes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends regioesDeleteManyArgs>(args?: SelectSubset<T, regioesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regioes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Regioes
     * const regioes = await prisma.regioes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends regioesUpdateManyArgs>(args: SelectSubset<T, regioesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regioes and returns the data updated in the database.
     * @param {regioesUpdateManyAndReturnArgs} args - Arguments to update many Regioes.
     * @example
     * // Update many Regioes
     * const regioes = await prisma.regioes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Regioes and only return the `id`
     * const regioesWithIdOnly = await prisma.regioes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends regioesUpdateManyAndReturnArgs>(args: SelectSubset<T, regioesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Regioes.
     * @param {regioesUpsertArgs} args - Arguments to update or create a Regioes.
     * @example
     * // Update or create a Regioes
     * const regioes = await prisma.regioes.upsert({
     *   create: {
     *     // ... data to create a Regioes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Regioes we want to update
     *   }
     * })
     */
    upsert<T extends regioesUpsertArgs>(args: SelectSubset<T, regioesUpsertArgs<ExtArgs>>): Prisma__regioesClient<$Result.GetResult<Prisma.$regioesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Regioes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesCountArgs} args - Arguments to filter Regioes to count.
     * @example
     * // Count the number of Regioes
     * const count = await prisma.regioes.count({
     *   where: {
     *     // ... the filter for the Regioes we want to count
     *   }
     * })
    **/
    count<T extends regioesCountArgs>(
      args?: Subset<T, regioesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegioesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Regioes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegioesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegioesAggregateArgs>(args: Subset<T, RegioesAggregateArgs>): Prisma.PrismaPromise<GetRegioesAggregateType<T>>

    /**
     * Group by Regioes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {regioesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends regioesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: regioesGroupByArgs['orderBy'] }
        : { orderBy?: regioesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, regioesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegioesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the regioes model
   */
  readonly fields: regioesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for regioes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__regioesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estados<T extends regioes$estadosArgs<ExtArgs> = {}>(args?: Subset<T, regioes$estadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the regioes model
   */
  interface regioesFieldRefs {
    readonly id: FieldRef<"regioes", 'Int'>
    readonly sigla: FieldRef<"regioes", 'String'>
    readonly nome: FieldRef<"regioes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * regioes findUnique
   */
  export type regioesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter, which regioes to fetch.
     */
    where: regioesWhereUniqueInput
  }

  /**
   * regioes findUniqueOrThrow
   */
  export type regioesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter, which regioes to fetch.
     */
    where: regioesWhereUniqueInput
  }

  /**
   * regioes findFirst
   */
  export type regioesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter, which regioes to fetch.
     */
    where?: regioesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of regioes to fetch.
     */
    orderBy?: regioesOrderByWithRelationInput | regioesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for regioes.
     */
    cursor?: regioesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` regioes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` regioes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of regioes.
     */
    distinct?: RegioesScalarFieldEnum | RegioesScalarFieldEnum[]
  }

  /**
   * regioes findFirstOrThrow
   */
  export type regioesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter, which regioes to fetch.
     */
    where?: regioesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of regioes to fetch.
     */
    orderBy?: regioesOrderByWithRelationInput | regioesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for regioes.
     */
    cursor?: regioesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` regioes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` regioes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of regioes.
     */
    distinct?: RegioesScalarFieldEnum | RegioesScalarFieldEnum[]
  }

  /**
   * regioes findMany
   */
  export type regioesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter, which regioes to fetch.
     */
    where?: regioesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of regioes to fetch.
     */
    orderBy?: regioesOrderByWithRelationInput | regioesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing regioes.
     */
    cursor?: regioesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` regioes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` regioes.
     */
    skip?: number
    distinct?: RegioesScalarFieldEnum | RegioesScalarFieldEnum[]
  }

  /**
   * regioes create
   */
  export type regioesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * The data needed to create a regioes.
     */
    data: XOR<regioesCreateInput, regioesUncheckedCreateInput>
  }

  /**
   * regioes createMany
   */
  export type regioesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many regioes.
     */
    data: regioesCreateManyInput | regioesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * regioes createManyAndReturn
   */
  export type regioesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * The data used to create many regioes.
     */
    data: regioesCreateManyInput | regioesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * regioes update
   */
  export type regioesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * The data needed to update a regioes.
     */
    data: XOR<regioesUpdateInput, regioesUncheckedUpdateInput>
    /**
     * Choose, which regioes to update.
     */
    where: regioesWhereUniqueInput
  }

  /**
   * regioes updateMany
   */
  export type regioesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update regioes.
     */
    data: XOR<regioesUpdateManyMutationInput, regioesUncheckedUpdateManyInput>
    /**
     * Filter which regioes to update
     */
    where?: regioesWhereInput
    /**
     * Limit how many regioes to update.
     */
    limit?: number
  }

  /**
   * regioes updateManyAndReturn
   */
  export type regioesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * The data used to update regioes.
     */
    data: XOR<regioesUpdateManyMutationInput, regioesUncheckedUpdateManyInput>
    /**
     * Filter which regioes to update
     */
    where?: regioesWhereInput
    /**
     * Limit how many regioes to update.
     */
    limit?: number
  }

  /**
   * regioes upsert
   */
  export type regioesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * The filter to search for the regioes to update in case it exists.
     */
    where: regioesWhereUniqueInput
    /**
     * In case the regioes found by the `where` argument doesn't exist, create a new regioes with this data.
     */
    create: XOR<regioesCreateInput, regioesUncheckedCreateInput>
    /**
     * In case the regioes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<regioesUpdateInput, regioesUncheckedUpdateInput>
  }

  /**
   * regioes delete
   */
  export type regioesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
    /**
     * Filter which regioes to delete.
     */
    where: regioesWhereUniqueInput
  }

  /**
   * regioes deleteMany
   */
  export type regioesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which regioes to delete
     */
    where?: regioesWhereInput
    /**
     * Limit how many regioes to delete.
     */
    limit?: number
  }

  /**
   * regioes.estados
   */
  export type regioes$estadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estados
     */
    select?: estadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estados
     */
    omit?: estadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadosInclude<ExtArgs> | null
    where?: estadosWhereInput
    orderBy?: estadosOrderByWithRelationInput | estadosOrderByWithRelationInput[]
    cursor?: estadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstadosScalarFieldEnum | EstadosScalarFieldEnum[]
  }

  /**
   * regioes without action
   */
  export type regioesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the regioes
     */
    select?: regioesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the regioes
     */
    omit?: regioesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: regioesInclude<ExtArgs> | null
  }


  /**
   * Model subtipos_imovel
   */

  export type AggregateSubtipos_imovel = {
    _count: Subtipos_imovelCountAggregateOutputType | null
    _avg: Subtipos_imovelAvgAggregateOutputType | null
    _sum: Subtipos_imovelSumAggregateOutputType | null
    _min: Subtipos_imovelMinAggregateOutputType | null
    _max: Subtipos_imovelMaxAggregateOutputType | null
  }

  export type Subtipos_imovelAvgAggregateOutputType = {
    id: number | null
    tipo_id: number | null
  }

  export type Subtipos_imovelSumAggregateOutputType = {
    id: number | null
    tipo_id: number | null
  }

  export type Subtipos_imovelMinAggregateOutputType = {
    id: number | null
    tipo_id: number | null
    nome: string | null
    nome_exibicao: string | null
  }

  export type Subtipos_imovelMaxAggregateOutputType = {
    id: number | null
    tipo_id: number | null
    nome: string | null
    nome_exibicao: string | null
  }

  export type Subtipos_imovelCountAggregateOutputType = {
    id: number
    tipo_id: number
    nome: number
    nome_exibicao: number
    _all: number
  }


  export type Subtipos_imovelAvgAggregateInputType = {
    id?: true
    tipo_id?: true
  }

  export type Subtipos_imovelSumAggregateInputType = {
    id?: true
    tipo_id?: true
  }

  export type Subtipos_imovelMinAggregateInputType = {
    id?: true
    tipo_id?: true
    nome?: true
    nome_exibicao?: true
  }

  export type Subtipos_imovelMaxAggregateInputType = {
    id?: true
    tipo_id?: true
    nome?: true
    nome_exibicao?: true
  }

  export type Subtipos_imovelCountAggregateInputType = {
    id?: true
    tipo_id?: true
    nome?: true
    nome_exibicao?: true
    _all?: true
  }

  export type Subtipos_imovelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subtipos_imovel to aggregate.
     */
    where?: subtipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subtipos_imovels to fetch.
     */
    orderBy?: subtipos_imovelOrderByWithRelationInput | subtipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subtipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subtipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subtipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subtipos_imovels
    **/
    _count?: true | Subtipos_imovelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Subtipos_imovelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Subtipos_imovelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subtipos_imovelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subtipos_imovelMaxAggregateInputType
  }

  export type GetSubtipos_imovelAggregateType<T extends Subtipos_imovelAggregateArgs> = {
        [P in keyof T & keyof AggregateSubtipos_imovel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubtipos_imovel[P]>
      : GetScalarType<T[P], AggregateSubtipos_imovel[P]>
  }




  export type subtipos_imovelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subtipos_imovelWhereInput
    orderBy?: subtipos_imovelOrderByWithAggregationInput | subtipos_imovelOrderByWithAggregationInput[]
    by: Subtipos_imovelScalarFieldEnum[] | Subtipos_imovelScalarFieldEnum
    having?: subtipos_imovelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subtipos_imovelCountAggregateInputType | true
    _avg?: Subtipos_imovelAvgAggregateInputType
    _sum?: Subtipos_imovelSumAggregateInputType
    _min?: Subtipos_imovelMinAggregateInputType
    _max?: Subtipos_imovelMaxAggregateInputType
  }

  export type Subtipos_imovelGroupByOutputType = {
    id: number
    tipo_id: number
    nome: string
    nome_exibicao: string
    _count: Subtipos_imovelCountAggregateOutputType | null
    _avg: Subtipos_imovelAvgAggregateOutputType | null
    _sum: Subtipos_imovelSumAggregateOutputType | null
    _min: Subtipos_imovelMinAggregateOutputType | null
    _max: Subtipos_imovelMaxAggregateOutputType | null
  }

  type GetSubtipos_imovelGroupByPayload<T extends subtipos_imovelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Subtipos_imovelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subtipos_imovelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subtipos_imovelGroupByOutputType[P]>
            : GetScalarType<T[P], Subtipos_imovelGroupByOutputType[P]>
        }
      >
    >


  export type subtipos_imovelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo_id?: boolean
    nome?: boolean
    nome_exibicao?: boolean
    imoveis?: boolean | subtipos_imovel$imoveisArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
    _count?: boolean | Subtipos_imovelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subtipos_imovel"]>

  export type subtipos_imovelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo_id?: boolean
    nome?: boolean
    nome_exibicao?: boolean
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subtipos_imovel"]>

  export type subtipos_imovelSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo_id?: boolean
    nome?: boolean
    nome_exibicao?: boolean
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subtipos_imovel"]>

  export type subtipos_imovelSelectScalar = {
    id?: boolean
    tipo_id?: boolean
    nome?: boolean
    nome_exibicao?: boolean
  }

  export type subtipos_imovelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipo_id" | "nome" | "nome_exibicao", ExtArgs["result"]["subtipos_imovel"]>
  export type subtipos_imovelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | subtipos_imovel$imoveisArgs<ExtArgs>
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
    _count?: boolean | Subtipos_imovelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type subtipos_imovelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }
  export type subtipos_imovelIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipos_imovel?: boolean | tipos_imovelDefaultArgs<ExtArgs>
  }

  export type $subtipos_imovelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subtipos_imovel"
    objects: {
      imoveis: Prisma.$imoveisPayload<ExtArgs>[]
      tipos_imovel: Prisma.$tipos_imovelPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tipo_id: number
      nome: string
      nome_exibicao: string
    }, ExtArgs["result"]["subtipos_imovel"]>
    composites: {}
  }

  type subtipos_imovelGetPayload<S extends boolean | null | undefined | subtipos_imovelDefaultArgs> = $Result.GetResult<Prisma.$subtipos_imovelPayload, S>

  type subtipos_imovelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subtipos_imovelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Subtipos_imovelCountAggregateInputType | true
    }

  export interface subtipos_imovelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subtipos_imovel'], meta: { name: 'subtipos_imovel' } }
    /**
     * Find zero or one Subtipos_imovel that matches the filter.
     * @param {subtipos_imovelFindUniqueArgs} args - Arguments to find a Subtipos_imovel
     * @example
     * // Get one Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subtipos_imovelFindUniqueArgs>(args: SelectSubset<T, subtipos_imovelFindUniqueArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subtipos_imovel that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subtipos_imovelFindUniqueOrThrowArgs} args - Arguments to find a Subtipos_imovel
     * @example
     * // Get one Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subtipos_imovelFindUniqueOrThrowArgs>(args: SelectSubset<T, subtipos_imovelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subtipos_imovel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelFindFirstArgs} args - Arguments to find a Subtipos_imovel
     * @example
     * // Get one Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subtipos_imovelFindFirstArgs>(args?: SelectSubset<T, subtipos_imovelFindFirstArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subtipos_imovel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelFindFirstOrThrowArgs} args - Arguments to find a Subtipos_imovel
     * @example
     * // Get one Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subtipos_imovelFindFirstOrThrowArgs>(args?: SelectSubset<T, subtipos_imovelFindFirstOrThrowArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subtipos_imovels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subtipos_imovels
     * const subtipos_imovels = await prisma.subtipos_imovel.findMany()
     * 
     * // Get first 10 Subtipos_imovels
     * const subtipos_imovels = await prisma.subtipos_imovel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subtipos_imovelWithIdOnly = await prisma.subtipos_imovel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subtipos_imovelFindManyArgs>(args?: SelectSubset<T, subtipos_imovelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subtipos_imovel.
     * @param {subtipos_imovelCreateArgs} args - Arguments to create a Subtipos_imovel.
     * @example
     * // Create one Subtipos_imovel
     * const Subtipos_imovel = await prisma.subtipos_imovel.create({
     *   data: {
     *     // ... data to create a Subtipos_imovel
     *   }
     * })
     * 
     */
    create<T extends subtipos_imovelCreateArgs>(args: SelectSubset<T, subtipos_imovelCreateArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subtipos_imovels.
     * @param {subtipos_imovelCreateManyArgs} args - Arguments to create many Subtipos_imovels.
     * @example
     * // Create many Subtipos_imovels
     * const subtipos_imovel = await prisma.subtipos_imovel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subtipos_imovelCreateManyArgs>(args?: SelectSubset<T, subtipos_imovelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subtipos_imovels and returns the data saved in the database.
     * @param {subtipos_imovelCreateManyAndReturnArgs} args - Arguments to create many Subtipos_imovels.
     * @example
     * // Create many Subtipos_imovels
     * const subtipos_imovel = await prisma.subtipos_imovel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subtipos_imovels and only return the `id`
     * const subtipos_imovelWithIdOnly = await prisma.subtipos_imovel.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subtipos_imovelCreateManyAndReturnArgs>(args?: SelectSubset<T, subtipos_imovelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subtipos_imovel.
     * @param {subtipos_imovelDeleteArgs} args - Arguments to delete one Subtipos_imovel.
     * @example
     * // Delete one Subtipos_imovel
     * const Subtipos_imovel = await prisma.subtipos_imovel.delete({
     *   where: {
     *     // ... filter to delete one Subtipos_imovel
     *   }
     * })
     * 
     */
    delete<T extends subtipos_imovelDeleteArgs>(args: SelectSubset<T, subtipos_imovelDeleteArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subtipos_imovel.
     * @param {subtipos_imovelUpdateArgs} args - Arguments to update one Subtipos_imovel.
     * @example
     * // Update one Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subtipos_imovelUpdateArgs>(args: SelectSubset<T, subtipos_imovelUpdateArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subtipos_imovels.
     * @param {subtipos_imovelDeleteManyArgs} args - Arguments to filter Subtipos_imovels to delete.
     * @example
     * // Delete a few Subtipos_imovels
     * const { count } = await prisma.subtipos_imovel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subtipos_imovelDeleteManyArgs>(args?: SelectSubset<T, subtipos_imovelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subtipos_imovels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subtipos_imovels
     * const subtipos_imovel = await prisma.subtipos_imovel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subtipos_imovelUpdateManyArgs>(args: SelectSubset<T, subtipos_imovelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subtipos_imovels and returns the data updated in the database.
     * @param {subtipos_imovelUpdateManyAndReturnArgs} args - Arguments to update many Subtipos_imovels.
     * @example
     * // Update many Subtipos_imovels
     * const subtipos_imovel = await prisma.subtipos_imovel.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subtipos_imovels and only return the `id`
     * const subtipos_imovelWithIdOnly = await prisma.subtipos_imovel.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subtipos_imovelUpdateManyAndReturnArgs>(args: SelectSubset<T, subtipos_imovelUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subtipos_imovel.
     * @param {subtipos_imovelUpsertArgs} args - Arguments to update or create a Subtipos_imovel.
     * @example
     * // Update or create a Subtipos_imovel
     * const subtipos_imovel = await prisma.subtipos_imovel.upsert({
     *   create: {
     *     // ... data to create a Subtipos_imovel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subtipos_imovel we want to update
     *   }
     * })
     */
    upsert<T extends subtipos_imovelUpsertArgs>(args: SelectSubset<T, subtipos_imovelUpsertArgs<ExtArgs>>): Prisma__subtipos_imovelClient<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subtipos_imovels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelCountArgs} args - Arguments to filter Subtipos_imovels to count.
     * @example
     * // Count the number of Subtipos_imovels
     * const count = await prisma.subtipos_imovel.count({
     *   where: {
     *     // ... the filter for the Subtipos_imovels we want to count
     *   }
     * })
    **/
    count<T extends subtipos_imovelCountArgs>(
      args?: Subset<T, subtipos_imovelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subtipos_imovelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subtipos_imovel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subtipos_imovelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subtipos_imovelAggregateArgs>(args: Subset<T, Subtipos_imovelAggregateArgs>): Prisma.PrismaPromise<GetSubtipos_imovelAggregateType<T>>

    /**
     * Group by Subtipos_imovel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subtipos_imovelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subtipos_imovelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subtipos_imovelGroupByArgs['orderBy'] }
        : { orderBy?: subtipos_imovelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subtipos_imovelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubtipos_imovelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subtipos_imovel model
   */
  readonly fields: subtipos_imovelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subtipos_imovel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subtipos_imovelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imoveis<T extends subtipos_imovel$imoveisArgs<ExtArgs> = {}>(args?: Subset<T, subtipos_imovel$imoveisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tipos_imovel<T extends tipos_imovelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipos_imovelDefaultArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subtipos_imovel model
   */
  interface subtipos_imovelFieldRefs {
    readonly id: FieldRef<"subtipos_imovel", 'Int'>
    readonly tipo_id: FieldRef<"subtipos_imovel", 'Int'>
    readonly nome: FieldRef<"subtipos_imovel", 'String'>
    readonly nome_exibicao: FieldRef<"subtipos_imovel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * subtipos_imovel findUnique
   */
  export type subtipos_imovelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which subtipos_imovel to fetch.
     */
    where: subtipos_imovelWhereUniqueInput
  }

  /**
   * subtipos_imovel findUniqueOrThrow
   */
  export type subtipos_imovelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which subtipos_imovel to fetch.
     */
    where: subtipos_imovelWhereUniqueInput
  }

  /**
   * subtipos_imovel findFirst
   */
  export type subtipos_imovelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which subtipos_imovel to fetch.
     */
    where?: subtipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subtipos_imovels to fetch.
     */
    orderBy?: subtipos_imovelOrderByWithRelationInput | subtipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subtipos_imovels.
     */
    cursor?: subtipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subtipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subtipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subtipos_imovels.
     */
    distinct?: Subtipos_imovelScalarFieldEnum | Subtipos_imovelScalarFieldEnum[]
  }

  /**
   * subtipos_imovel findFirstOrThrow
   */
  export type subtipos_imovelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which subtipos_imovel to fetch.
     */
    where?: subtipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subtipos_imovels to fetch.
     */
    orderBy?: subtipos_imovelOrderByWithRelationInput | subtipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subtipos_imovels.
     */
    cursor?: subtipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subtipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subtipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subtipos_imovels.
     */
    distinct?: Subtipos_imovelScalarFieldEnum | Subtipos_imovelScalarFieldEnum[]
  }

  /**
   * subtipos_imovel findMany
   */
  export type subtipos_imovelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which subtipos_imovels to fetch.
     */
    where?: subtipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subtipos_imovels to fetch.
     */
    orderBy?: subtipos_imovelOrderByWithRelationInput | subtipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subtipos_imovels.
     */
    cursor?: subtipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subtipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subtipos_imovels.
     */
    skip?: number
    distinct?: Subtipos_imovelScalarFieldEnum | Subtipos_imovelScalarFieldEnum[]
  }

  /**
   * subtipos_imovel create
   */
  export type subtipos_imovelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * The data needed to create a subtipos_imovel.
     */
    data: XOR<subtipos_imovelCreateInput, subtipos_imovelUncheckedCreateInput>
  }

  /**
   * subtipos_imovel createMany
   */
  export type subtipos_imovelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subtipos_imovels.
     */
    data: subtipos_imovelCreateManyInput | subtipos_imovelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subtipos_imovel createManyAndReturn
   */
  export type subtipos_imovelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * The data used to create many subtipos_imovels.
     */
    data: subtipos_imovelCreateManyInput | subtipos_imovelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * subtipos_imovel update
   */
  export type subtipos_imovelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * The data needed to update a subtipos_imovel.
     */
    data: XOR<subtipos_imovelUpdateInput, subtipos_imovelUncheckedUpdateInput>
    /**
     * Choose, which subtipos_imovel to update.
     */
    where: subtipos_imovelWhereUniqueInput
  }

  /**
   * subtipos_imovel updateMany
   */
  export type subtipos_imovelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subtipos_imovels.
     */
    data: XOR<subtipos_imovelUpdateManyMutationInput, subtipos_imovelUncheckedUpdateManyInput>
    /**
     * Filter which subtipos_imovels to update
     */
    where?: subtipos_imovelWhereInput
    /**
     * Limit how many subtipos_imovels to update.
     */
    limit?: number
  }

  /**
   * subtipos_imovel updateManyAndReturn
   */
  export type subtipos_imovelUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * The data used to update subtipos_imovels.
     */
    data: XOR<subtipos_imovelUpdateManyMutationInput, subtipos_imovelUncheckedUpdateManyInput>
    /**
     * Filter which subtipos_imovels to update
     */
    where?: subtipos_imovelWhereInput
    /**
     * Limit how many subtipos_imovels to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * subtipos_imovel upsert
   */
  export type subtipos_imovelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * The filter to search for the subtipos_imovel to update in case it exists.
     */
    where: subtipos_imovelWhereUniqueInput
    /**
     * In case the subtipos_imovel found by the `where` argument doesn't exist, create a new subtipos_imovel with this data.
     */
    create: XOR<subtipos_imovelCreateInput, subtipos_imovelUncheckedCreateInput>
    /**
     * In case the subtipos_imovel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subtipos_imovelUpdateInput, subtipos_imovelUncheckedUpdateInput>
  }

  /**
   * subtipos_imovel delete
   */
  export type subtipos_imovelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    /**
     * Filter which subtipos_imovel to delete.
     */
    where: subtipos_imovelWhereUniqueInput
  }

  /**
   * subtipos_imovel deleteMany
   */
  export type subtipos_imovelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subtipos_imovels to delete
     */
    where?: subtipos_imovelWhereInput
    /**
     * Limit how many subtipos_imovels to delete.
     */
    limit?: number
  }

  /**
   * subtipos_imovel.imoveis
   */
  export type subtipos_imovel$imoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    where?: imoveisWhereInput
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    cursor?: imoveisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * subtipos_imovel without action
   */
  export type subtipos_imovelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
  }


  /**
   * Model tipos_imovel
   */

  export type AggregateTipos_imovel = {
    _count: Tipos_imovelCountAggregateOutputType | null
    _avg: Tipos_imovelAvgAggregateOutputType | null
    _sum: Tipos_imovelSumAggregateOutputType | null
    _min: Tipos_imovelMinAggregateOutputType | null
    _max: Tipos_imovelMaxAggregateOutputType | null
  }

  export type Tipos_imovelAvgAggregateOutputType = {
    id: number | null
  }

  export type Tipos_imovelSumAggregateOutputType = {
    id: number | null
  }

  export type Tipos_imovelMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tipos_imovelMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tipos_imovelCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tipos_imovelAvgAggregateInputType = {
    id?: true
  }

  export type Tipos_imovelSumAggregateInputType = {
    id?: true
  }

  export type Tipos_imovelMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tipos_imovelMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tipos_imovelCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tipos_imovelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_imovel to aggregate.
     */
    where?: tipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_imovels to fetch.
     */
    orderBy?: tipos_imovelOrderByWithRelationInput | tipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipos_imovels
    **/
    _count?: true | Tipos_imovelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipos_imovelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipos_imovelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipos_imovelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipos_imovelMaxAggregateInputType
  }

  export type GetTipos_imovelAggregateType<T extends Tipos_imovelAggregateArgs> = {
        [P in keyof T & keyof AggregateTipos_imovel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipos_imovel[P]>
      : GetScalarType<T[P], AggregateTipos_imovel[P]>
  }




  export type tipos_imovelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipos_imovelWhereInput
    orderBy?: tipos_imovelOrderByWithAggregationInput | tipos_imovelOrderByWithAggregationInput[]
    by: Tipos_imovelScalarFieldEnum[] | Tipos_imovelScalarFieldEnum
    having?: tipos_imovelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipos_imovelCountAggregateInputType | true
    _avg?: Tipos_imovelAvgAggregateInputType
    _sum?: Tipos_imovelSumAggregateInputType
    _min?: Tipos_imovelMinAggregateInputType
    _max?: Tipos_imovelMaxAggregateInputType
  }

  export type Tipos_imovelGroupByOutputType = {
    id: number
    nome: string
    _count: Tipos_imovelCountAggregateOutputType | null
    _avg: Tipos_imovelAvgAggregateOutputType | null
    _sum: Tipos_imovelSumAggregateOutputType | null
    _min: Tipos_imovelMinAggregateOutputType | null
    _max: Tipos_imovelMaxAggregateOutputType | null
  }

  type GetTipos_imovelGroupByPayload<T extends tipos_imovelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipos_imovelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipos_imovelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipos_imovelGroupByOutputType[P]>
            : GetScalarType<T[P], Tipos_imovelGroupByOutputType[P]>
        }
      >
    >


  export type tipos_imovelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    imoveis?: boolean | tipos_imovel$imoveisArgs<ExtArgs>
    subtipos_imovel?: boolean | tipos_imovel$subtipos_imovelArgs<ExtArgs>
    _count?: boolean | Tipos_imovelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipos_imovel"]>

  export type tipos_imovelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["tipos_imovel"]>

  export type tipos_imovelSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["tipos_imovel"]>

  export type tipos_imovelSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type tipos_imovelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome", ExtArgs["result"]["tipos_imovel"]>
  export type tipos_imovelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imoveis?: boolean | tipos_imovel$imoveisArgs<ExtArgs>
    subtipos_imovel?: boolean | tipos_imovel$subtipos_imovelArgs<ExtArgs>
    _count?: boolean | Tipos_imovelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipos_imovelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipos_imovelIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipos_imovelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipos_imovel"
    objects: {
      imoveis: Prisma.$imoveisPayload<ExtArgs>[]
      subtipos_imovel: Prisma.$subtipos_imovelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["tipos_imovel"]>
    composites: {}
  }

  type tipos_imovelGetPayload<S extends boolean | null | undefined | tipos_imovelDefaultArgs> = $Result.GetResult<Prisma.$tipos_imovelPayload, S>

  type tipos_imovelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipos_imovelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipos_imovelCountAggregateInputType | true
    }

  export interface tipos_imovelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipos_imovel'], meta: { name: 'tipos_imovel' } }
    /**
     * Find zero or one Tipos_imovel that matches the filter.
     * @param {tipos_imovelFindUniqueArgs} args - Arguments to find a Tipos_imovel
     * @example
     * // Get one Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipos_imovelFindUniqueArgs>(args: SelectSubset<T, tipos_imovelFindUniqueArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipos_imovel that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipos_imovelFindUniqueOrThrowArgs} args - Arguments to find a Tipos_imovel
     * @example
     * // Get one Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipos_imovelFindUniqueOrThrowArgs>(args: SelectSubset<T, tipos_imovelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipos_imovel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelFindFirstArgs} args - Arguments to find a Tipos_imovel
     * @example
     * // Get one Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipos_imovelFindFirstArgs>(args?: SelectSubset<T, tipos_imovelFindFirstArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipos_imovel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelFindFirstOrThrowArgs} args - Arguments to find a Tipos_imovel
     * @example
     * // Get one Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipos_imovelFindFirstOrThrowArgs>(args?: SelectSubset<T, tipos_imovelFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipos_imovels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipos_imovels
     * const tipos_imovels = await prisma.tipos_imovel.findMany()
     * 
     * // Get first 10 Tipos_imovels
     * const tipos_imovels = await prisma.tipos_imovel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipos_imovelWithIdOnly = await prisma.tipos_imovel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipos_imovelFindManyArgs>(args?: SelectSubset<T, tipos_imovelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipos_imovel.
     * @param {tipos_imovelCreateArgs} args - Arguments to create a Tipos_imovel.
     * @example
     * // Create one Tipos_imovel
     * const Tipos_imovel = await prisma.tipos_imovel.create({
     *   data: {
     *     // ... data to create a Tipos_imovel
     *   }
     * })
     * 
     */
    create<T extends tipos_imovelCreateArgs>(args: SelectSubset<T, tipos_imovelCreateArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipos_imovels.
     * @param {tipos_imovelCreateManyArgs} args - Arguments to create many Tipos_imovels.
     * @example
     * // Create many Tipos_imovels
     * const tipos_imovel = await prisma.tipos_imovel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipos_imovelCreateManyArgs>(args?: SelectSubset<T, tipos_imovelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipos_imovels and returns the data saved in the database.
     * @param {tipos_imovelCreateManyAndReturnArgs} args - Arguments to create many Tipos_imovels.
     * @example
     * // Create many Tipos_imovels
     * const tipos_imovel = await prisma.tipos_imovel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipos_imovels and only return the `id`
     * const tipos_imovelWithIdOnly = await prisma.tipos_imovel.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipos_imovelCreateManyAndReturnArgs>(args?: SelectSubset<T, tipos_imovelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipos_imovel.
     * @param {tipos_imovelDeleteArgs} args - Arguments to delete one Tipos_imovel.
     * @example
     * // Delete one Tipos_imovel
     * const Tipos_imovel = await prisma.tipos_imovel.delete({
     *   where: {
     *     // ... filter to delete one Tipos_imovel
     *   }
     * })
     * 
     */
    delete<T extends tipos_imovelDeleteArgs>(args: SelectSubset<T, tipos_imovelDeleteArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipos_imovel.
     * @param {tipos_imovelUpdateArgs} args - Arguments to update one Tipos_imovel.
     * @example
     * // Update one Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipos_imovelUpdateArgs>(args: SelectSubset<T, tipos_imovelUpdateArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipos_imovels.
     * @param {tipos_imovelDeleteManyArgs} args - Arguments to filter Tipos_imovels to delete.
     * @example
     * // Delete a few Tipos_imovels
     * const { count } = await prisma.tipos_imovel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipos_imovelDeleteManyArgs>(args?: SelectSubset<T, tipos_imovelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipos_imovels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipos_imovels
     * const tipos_imovel = await prisma.tipos_imovel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipos_imovelUpdateManyArgs>(args: SelectSubset<T, tipos_imovelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipos_imovels and returns the data updated in the database.
     * @param {tipos_imovelUpdateManyAndReturnArgs} args - Arguments to update many Tipos_imovels.
     * @example
     * // Update many Tipos_imovels
     * const tipos_imovel = await prisma.tipos_imovel.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipos_imovels and only return the `id`
     * const tipos_imovelWithIdOnly = await prisma.tipos_imovel.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipos_imovelUpdateManyAndReturnArgs>(args: SelectSubset<T, tipos_imovelUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipos_imovel.
     * @param {tipos_imovelUpsertArgs} args - Arguments to update or create a Tipos_imovel.
     * @example
     * // Update or create a Tipos_imovel
     * const tipos_imovel = await prisma.tipos_imovel.upsert({
     *   create: {
     *     // ... data to create a Tipos_imovel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipos_imovel we want to update
     *   }
     * })
     */
    upsert<T extends tipos_imovelUpsertArgs>(args: SelectSubset<T, tipos_imovelUpsertArgs<ExtArgs>>): Prisma__tipos_imovelClient<$Result.GetResult<Prisma.$tipos_imovelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipos_imovels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelCountArgs} args - Arguments to filter Tipos_imovels to count.
     * @example
     * // Count the number of Tipos_imovels
     * const count = await prisma.tipos_imovel.count({
     *   where: {
     *     // ... the filter for the Tipos_imovels we want to count
     *   }
     * })
    **/
    count<T extends tipos_imovelCountArgs>(
      args?: Subset<T, tipos_imovelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipos_imovelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipos_imovel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipos_imovelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipos_imovelAggregateArgs>(args: Subset<T, Tipos_imovelAggregateArgs>): Prisma.PrismaPromise<GetTipos_imovelAggregateType<T>>

    /**
     * Group by Tipos_imovel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_imovelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipos_imovelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipos_imovelGroupByArgs['orderBy'] }
        : { orderBy?: tipos_imovelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipos_imovelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipos_imovelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipos_imovel model
   */
  readonly fields: tipos_imovelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipos_imovel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipos_imovelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imoveis<T extends tipos_imovel$imoveisArgs<ExtArgs> = {}>(args?: Subset<T, tipos_imovel$imoveisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subtipos_imovel<T extends tipos_imovel$subtipos_imovelArgs<ExtArgs> = {}>(args?: Subset<T, tipos_imovel$subtipos_imovelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subtipos_imovelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipos_imovel model
   */
  interface tipos_imovelFieldRefs {
    readonly id: FieldRef<"tipos_imovel", 'Int'>
    readonly nome: FieldRef<"tipos_imovel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipos_imovel findUnique
   */
  export type tipos_imovelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which tipos_imovel to fetch.
     */
    where: tipos_imovelWhereUniqueInput
  }

  /**
   * tipos_imovel findUniqueOrThrow
   */
  export type tipos_imovelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which tipos_imovel to fetch.
     */
    where: tipos_imovelWhereUniqueInput
  }

  /**
   * tipos_imovel findFirst
   */
  export type tipos_imovelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which tipos_imovel to fetch.
     */
    where?: tipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_imovels to fetch.
     */
    orderBy?: tipos_imovelOrderByWithRelationInput | tipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_imovels.
     */
    cursor?: tipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_imovels.
     */
    distinct?: Tipos_imovelScalarFieldEnum | Tipos_imovelScalarFieldEnum[]
  }

  /**
   * tipos_imovel findFirstOrThrow
   */
  export type tipos_imovelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which tipos_imovel to fetch.
     */
    where?: tipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_imovels to fetch.
     */
    orderBy?: tipos_imovelOrderByWithRelationInput | tipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_imovels.
     */
    cursor?: tipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_imovels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_imovels.
     */
    distinct?: Tipos_imovelScalarFieldEnum | Tipos_imovelScalarFieldEnum[]
  }

  /**
   * tipos_imovel findMany
   */
  export type tipos_imovelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter, which tipos_imovels to fetch.
     */
    where?: tipos_imovelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_imovels to fetch.
     */
    orderBy?: tipos_imovelOrderByWithRelationInput | tipos_imovelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipos_imovels.
     */
    cursor?: tipos_imovelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_imovels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_imovels.
     */
    skip?: number
    distinct?: Tipos_imovelScalarFieldEnum | Tipos_imovelScalarFieldEnum[]
  }

  /**
   * tipos_imovel create
   */
  export type tipos_imovelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * The data needed to create a tipos_imovel.
     */
    data: XOR<tipos_imovelCreateInput, tipos_imovelUncheckedCreateInput>
  }

  /**
   * tipos_imovel createMany
   */
  export type tipos_imovelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipos_imovels.
     */
    data: tipos_imovelCreateManyInput | tipos_imovelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipos_imovel createManyAndReturn
   */
  export type tipos_imovelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * The data used to create many tipos_imovels.
     */
    data: tipos_imovelCreateManyInput | tipos_imovelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipos_imovel update
   */
  export type tipos_imovelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * The data needed to update a tipos_imovel.
     */
    data: XOR<tipos_imovelUpdateInput, tipos_imovelUncheckedUpdateInput>
    /**
     * Choose, which tipos_imovel to update.
     */
    where: tipos_imovelWhereUniqueInput
  }

  /**
   * tipos_imovel updateMany
   */
  export type tipos_imovelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipos_imovels.
     */
    data: XOR<tipos_imovelUpdateManyMutationInput, tipos_imovelUncheckedUpdateManyInput>
    /**
     * Filter which tipos_imovels to update
     */
    where?: tipos_imovelWhereInput
    /**
     * Limit how many tipos_imovels to update.
     */
    limit?: number
  }

  /**
   * tipos_imovel updateManyAndReturn
   */
  export type tipos_imovelUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * The data used to update tipos_imovels.
     */
    data: XOR<tipos_imovelUpdateManyMutationInput, tipos_imovelUncheckedUpdateManyInput>
    /**
     * Filter which tipos_imovels to update
     */
    where?: tipos_imovelWhereInput
    /**
     * Limit how many tipos_imovels to update.
     */
    limit?: number
  }

  /**
   * tipos_imovel upsert
   */
  export type tipos_imovelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * The filter to search for the tipos_imovel to update in case it exists.
     */
    where: tipos_imovelWhereUniqueInput
    /**
     * In case the tipos_imovel found by the `where` argument doesn't exist, create a new tipos_imovel with this data.
     */
    create: XOR<tipos_imovelCreateInput, tipos_imovelUncheckedCreateInput>
    /**
     * In case the tipos_imovel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipos_imovelUpdateInput, tipos_imovelUncheckedUpdateInput>
  }

  /**
   * tipos_imovel delete
   */
  export type tipos_imovelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
    /**
     * Filter which tipos_imovel to delete.
     */
    where: tipos_imovelWhereUniqueInput
  }

  /**
   * tipos_imovel deleteMany
   */
  export type tipos_imovelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_imovels to delete
     */
    where?: tipos_imovelWhereInput
    /**
     * Limit how many tipos_imovels to delete.
     */
    limit?: number
  }

  /**
   * tipos_imovel.imoveis
   */
  export type tipos_imovel$imoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    where?: imoveisWhereInput
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    cursor?: imoveisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * tipos_imovel.subtipos_imovel
   */
  export type tipos_imovel$subtipos_imovelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subtipos_imovel
     */
    select?: subtipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subtipos_imovel
     */
    omit?: subtipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subtipos_imovelInclude<ExtArgs> | null
    where?: subtipos_imovelWhereInput
    orderBy?: subtipos_imovelOrderByWithRelationInput | subtipos_imovelOrderByWithRelationInput[]
    cursor?: subtipos_imovelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subtipos_imovelScalarFieldEnum | Subtipos_imovelScalarFieldEnum[]
  }

  /**
   * tipos_imovel without action
   */
  export type tipos_imovelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_imovel
     */
    select?: tipos_imovelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipos_imovel
     */
    omit?: tipos_imovelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_imovelInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    telefone: string | null
    cpf: string | null
    tipo: string | null
    data_cadastro: Date | null
    data_nascimento: Date | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    telefone: string | null
    cpf: string | null
    tipo: string | null
    data_cadastro: Date | null
    data_nascimento: Date | null
  }

  export type UsuariosCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha_hash: number
    telefone: number
    cpf: number
    tipo: number
    data_cadastro: number
    data_nascimento: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id?: true
  }

  export type UsuariosSumAggregateInputType = {
    id?: true
  }

  export type UsuariosMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    telefone?: true
    cpf?: true
    tipo?: true
    data_cadastro?: true
    data_nascimento?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    telefone?: true
    cpf?: true
    tipo?: true
    data_cadastro?: true
    data_nascimento?: true
  }

  export type UsuariosCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    telefone?: true
    cpf?: true
    tipo?: true
    data_cadastro?: true
    data_nascimento?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro: Date | null
    data_nascimento: Date | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    telefone?: boolean
    cpf?: boolean
    tipo?: boolean
    data_cadastro?: boolean
    data_nascimento?: boolean
    corretores?: boolean | usuarios$corretoresArgs<ExtArgs>
    favoritos?: boolean | usuarios$favoritosArgs<ExtArgs>
    imoveis?: boolean | usuarios$imoveisArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    telefone?: boolean
    cpf?: boolean
    tipo?: boolean
    data_cadastro?: boolean
    data_nascimento?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    telefone?: boolean
    cpf?: boolean
    tipo?: boolean
    data_cadastro?: boolean
    data_nascimento?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    telefone?: boolean
    cpf?: boolean
    tipo?: boolean
    data_cadastro?: boolean
    data_nascimento?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "senha_hash" | "telefone" | "cpf" | "tipo" | "data_cadastro" | "data_nascimento", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    corretores?: boolean | usuarios$corretoresArgs<ExtArgs>
    favoritos?: boolean | usuarios$favoritosArgs<ExtArgs>
    imoveis?: boolean | usuarios$imoveisArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usuariosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      corretores: Prisma.$corretoresPayload<ExtArgs> | null
      favoritos: Prisma.$favoritosPayload<ExtArgs>[]
      imoveis: Prisma.$imoveisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha_hash: string
      telefone: string
      cpf: string
      tipo: string
      data_cadastro: Date | null
      data_nascimento: Date | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuariosUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuariosUpdateManyAndReturnArgs>(args: SelectSubset<T, usuariosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    corretores<T extends usuarios$corretoresArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$corretoresArgs<ExtArgs>>): Prisma__corretoresClient<$Result.GetResult<Prisma.$corretoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    favoritos<T extends usuarios$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    imoveis<T extends usuarios$imoveisArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$imoveisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imoveisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id: FieldRef<"usuarios", 'Int'>
    readonly nome: FieldRef<"usuarios", 'String'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly senha_hash: FieldRef<"usuarios", 'String'>
    readonly telefone: FieldRef<"usuarios", 'String'>
    readonly cpf: FieldRef<"usuarios", 'String'>
    readonly tipo: FieldRef<"usuarios", 'String'>
    readonly data_cadastro: FieldRef<"usuarios", 'DateTime'>
    readonly data_nascimento: FieldRef<"usuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios createManyAndReturn
   */
  export type usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios updateManyAndReturn
   */
  export type usuariosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.corretores
   */
  export type usuarios$corretoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the corretores
     */
    select?: corretoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the corretores
     */
    omit?: corretoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: corretoresInclude<ExtArgs> | null
    where?: corretoresWhereInput
  }

  /**
   * usuarios.favoritos
   */
  export type usuarios$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favoritos
     */
    select?: favoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favoritos
     */
    omit?: favoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritosInclude<ExtArgs> | null
    where?: favoritosWhereInput
    orderBy?: favoritosOrderByWithRelationInput | favoritosOrderByWithRelationInput[]
    cursor?: favoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * usuarios.imoveis
   */
  export type usuarios$imoveisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imoveis
     */
    select?: imoveisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the imoveis
     */
    omit?: imoveisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imoveisInclude<ExtArgs> | null
    where?: imoveisWhereInput
    orderBy?: imoveisOrderByWithRelationInput | imoveisOrderByWithRelationInput[]
    cursor?: imoveisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImoveisScalarFieldEnum | ImoveisScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CaracteristicasScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type CaracteristicasScalarFieldEnum = (typeof CaracteristicasScalarFieldEnum)[keyof typeof CaracteristicasScalarFieldEnum]


  export const CorretoresScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    creci: 'creci',
    creci_uf: 'creci_uf',
    data_registro: 'data_registro',
    bio: 'bio',
    ativo: 'ativo',
    id_imobiliaria: 'id_imobiliaria'
  };

  export type CorretoresScalarFieldEnum = (typeof CorretoresScalarFieldEnum)[keyof typeof CorretoresScalarFieldEnum]


  export const EstadosScalarFieldEnum: {
    id: 'id',
    sigla: 'sigla',
    nome: 'nome',
    regiao_id: 'regiao_id'
  };

  export type EstadosScalarFieldEnum = (typeof EstadosScalarFieldEnum)[keyof typeof EstadosScalarFieldEnum]


  export const FavoritosScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    imovel_id: 'imovel_id',
    data_cadastro: 'data_cadastro'
  };

  export type FavoritosScalarFieldEnum = (typeof FavoritosScalarFieldEnum)[keyof typeof FavoritosScalarFieldEnum]


  export const ImobiliariasScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cnpj: 'cnpj',
    telefone: 'telefone',
    email: 'email',
    endereco: 'endereco',
    data_cadastro: 'data_cadastro'
  };

  export type ImobiliariasScalarFieldEnum = (typeof ImobiliariasScalarFieldEnum)[keyof typeof ImobiliariasScalarFieldEnum]


  export const ImoveisScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descricao: 'descricao',
    subtipo_id: 'subtipo_id',
    tipoimovel_id: 'tipoimovel_id',
    preco: 'preco',
    area: 'area',
    quartos: 'quartos',
    banheiros: 'banheiros',
    vagas_garagem: 'vagas_garagem',
    endereco: 'endereco',
    numero: 'numero',
    complemento: 'complemento',
    bairro: 'bairro',
    cidade: 'cidade',
    estado: 'estado',
    cep: 'cep',
    latitude: 'latitude',
    longitude: 'longitude',
    data_cadastro: 'data_cadastro',
    data_atualizacao: 'data_atualizacao',
    disponivel: 'disponivel',
    destaque: 'destaque',
    imagens: 'imagens',
    id_proprietario: 'id_proprietario',
    id_corretor: 'id_corretor',
    area_util_hectares: 'area_util_hectares',
    area_total_hectares: 'area_total_hectares',
    salas: 'salas',
    andar: 'andar',
    area_privativa: 'area_privativa',
    area_comum: 'area_comum',
    suites: 'suites',
    mobiliado: 'mobiliado',
    aceita_animais: 'aceita_animais',
    views: 'views',
    estado_id: 'estado_id',
    valor_iptu: 'valor_iptu',
    valor_condominio: 'valor_condominio'
  };

  export type ImoveisScalarFieldEnum = (typeof ImoveisScalarFieldEnum)[keyof typeof ImoveisScalarFieldEnum]


  export const Imovel_caracteristicasScalarFieldEnum: {
    id: 'id',
    imovel_id: 'imovel_id',
    caracteristica_id: 'caracteristica_id'
  };

  export type Imovel_caracteristicasScalarFieldEnum = (typeof Imovel_caracteristicasScalarFieldEnum)[keyof typeof Imovel_caracteristicasScalarFieldEnum]


  export const RegioesScalarFieldEnum: {
    id: 'id',
    sigla: 'sigla',
    nome: 'nome'
  };

  export type RegioesScalarFieldEnum = (typeof RegioesScalarFieldEnum)[keyof typeof RegioesScalarFieldEnum]


  export const Subtipos_imovelScalarFieldEnum: {
    id: 'id',
    tipo_id: 'tipo_id',
    nome: 'nome',
    nome_exibicao: 'nome_exibicao'
  };

  export type Subtipos_imovelScalarFieldEnum = (typeof Subtipos_imovelScalarFieldEnum)[keyof typeof Subtipos_imovelScalarFieldEnum]


  export const Tipos_imovelScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tipos_imovelScalarFieldEnum = (typeof Tipos_imovelScalarFieldEnum)[keyof typeof Tipos_imovelScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha_hash: 'senha_hash',
    telefone: 'telefone',
    cpf: 'cpf',
    tipo: 'tipo',
    data_cadastro: 'data_cadastro',
    data_nascimento: 'data_nascimento'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type caracteristicasWhereInput = {
    AND?: caracteristicasWhereInput | caracteristicasWhereInput[]
    OR?: caracteristicasWhereInput[]
    NOT?: caracteristicasWhereInput | caracteristicasWhereInput[]
    id?: IntFilter<"caracteristicas"> | number
    nome?: StringFilter<"caracteristicas"> | string
    imovel_caracteristicas?: Imovel_caracteristicasListRelationFilter
  }

  export type caracteristicasOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    imovel_caracteristicas?: imovel_caracteristicasOrderByRelationAggregateInput
  }

  export type caracteristicasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: caracteristicasWhereInput | caracteristicasWhereInput[]
    OR?: caracteristicasWhereInput[]
    NOT?: caracteristicasWhereInput | caracteristicasWhereInput[]
    imovel_caracteristicas?: Imovel_caracteristicasListRelationFilter
  }, "id" | "nome">

  export type caracteristicasOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: caracteristicasCountOrderByAggregateInput
    _avg?: caracteristicasAvgOrderByAggregateInput
    _max?: caracteristicasMaxOrderByAggregateInput
    _min?: caracteristicasMinOrderByAggregateInput
    _sum?: caracteristicasSumOrderByAggregateInput
  }

  export type caracteristicasScalarWhereWithAggregatesInput = {
    AND?: caracteristicasScalarWhereWithAggregatesInput | caracteristicasScalarWhereWithAggregatesInput[]
    OR?: caracteristicasScalarWhereWithAggregatesInput[]
    NOT?: caracteristicasScalarWhereWithAggregatesInput | caracteristicasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"caracteristicas"> | number
    nome?: StringWithAggregatesFilter<"caracteristicas"> | string
  }

  export type corretoresWhereInput = {
    AND?: corretoresWhereInput | corretoresWhereInput[]
    OR?: corretoresWhereInput[]
    NOT?: corretoresWhereInput | corretoresWhereInput[]
    id?: IntFilter<"corretores"> | number
    usuario_id?: IntFilter<"corretores"> | number
    creci?: StringFilter<"corretores"> | string
    creci_uf?: StringFilter<"corretores"> | string
    data_registro?: DateTimeFilter<"corretores"> | Date | string
    bio?: StringNullableFilter<"corretores"> | string | null
    ativo?: BoolNullableFilter<"corretores"> | boolean | null
    id_imobiliaria?: IntNullableFilter<"corretores"> | number | null
    imobiliarias?: XOR<ImobiliariasNullableScalarRelationFilter, imobiliariasWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    imoveis?: ImoveisListRelationFilter
  }

  export type corretoresOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    creci?: SortOrder
    creci_uf?: SortOrder
    data_registro?: SortOrder
    bio?: SortOrderInput | SortOrder
    ativo?: SortOrderInput | SortOrder
    id_imobiliaria?: SortOrderInput | SortOrder
    imobiliarias?: imobiliariasOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    imoveis?: imoveisOrderByRelationAggregateInput
  }

  export type corretoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuario_id?: number
    creci?: string
    AND?: corretoresWhereInput | corretoresWhereInput[]
    OR?: corretoresWhereInput[]
    NOT?: corretoresWhereInput | corretoresWhereInput[]
    creci_uf?: StringFilter<"corretores"> | string
    data_registro?: DateTimeFilter<"corretores"> | Date | string
    bio?: StringNullableFilter<"corretores"> | string | null
    ativo?: BoolNullableFilter<"corretores"> | boolean | null
    id_imobiliaria?: IntNullableFilter<"corretores"> | number | null
    imobiliarias?: XOR<ImobiliariasNullableScalarRelationFilter, imobiliariasWhereInput> | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    imoveis?: ImoveisListRelationFilter
  }, "id" | "usuario_id" | "creci">

  export type corretoresOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    creci?: SortOrder
    creci_uf?: SortOrder
    data_registro?: SortOrder
    bio?: SortOrderInput | SortOrder
    ativo?: SortOrderInput | SortOrder
    id_imobiliaria?: SortOrderInput | SortOrder
    _count?: corretoresCountOrderByAggregateInput
    _avg?: corretoresAvgOrderByAggregateInput
    _max?: corretoresMaxOrderByAggregateInput
    _min?: corretoresMinOrderByAggregateInput
    _sum?: corretoresSumOrderByAggregateInput
  }

  export type corretoresScalarWhereWithAggregatesInput = {
    AND?: corretoresScalarWhereWithAggregatesInput | corretoresScalarWhereWithAggregatesInput[]
    OR?: corretoresScalarWhereWithAggregatesInput[]
    NOT?: corretoresScalarWhereWithAggregatesInput | corretoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"corretores"> | number
    usuario_id?: IntWithAggregatesFilter<"corretores"> | number
    creci?: StringWithAggregatesFilter<"corretores"> | string
    creci_uf?: StringWithAggregatesFilter<"corretores"> | string
    data_registro?: DateTimeWithAggregatesFilter<"corretores"> | Date | string
    bio?: StringNullableWithAggregatesFilter<"corretores"> | string | null
    ativo?: BoolNullableWithAggregatesFilter<"corretores"> | boolean | null
    id_imobiliaria?: IntNullableWithAggregatesFilter<"corretores"> | number | null
  }

  export type estadosWhereInput = {
    AND?: estadosWhereInput | estadosWhereInput[]
    OR?: estadosWhereInput[]
    NOT?: estadosWhereInput | estadosWhereInput[]
    id?: IntFilter<"estados"> | number
    sigla?: StringFilter<"estados"> | string
    nome?: StringFilter<"estados"> | string
    regiao_id?: IntFilter<"estados"> | number
    regioes?: XOR<RegioesScalarRelationFilter, regioesWhereInput>
  }

  export type estadosOrderByWithRelationInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    regiao_id?: SortOrder
    regioes?: regioesOrderByWithRelationInput
  }

  export type estadosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sigla?: string
    nome?: string
    AND?: estadosWhereInput | estadosWhereInput[]
    OR?: estadosWhereInput[]
    NOT?: estadosWhereInput | estadosWhereInput[]
    regiao_id?: IntFilter<"estados"> | number
    regioes?: XOR<RegioesScalarRelationFilter, regioesWhereInput>
  }, "id" | "sigla" | "nome">

  export type estadosOrderByWithAggregationInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    regiao_id?: SortOrder
    _count?: estadosCountOrderByAggregateInput
    _avg?: estadosAvgOrderByAggregateInput
    _max?: estadosMaxOrderByAggregateInput
    _min?: estadosMinOrderByAggregateInput
    _sum?: estadosSumOrderByAggregateInput
  }

  export type estadosScalarWhereWithAggregatesInput = {
    AND?: estadosScalarWhereWithAggregatesInput | estadosScalarWhereWithAggregatesInput[]
    OR?: estadosScalarWhereWithAggregatesInput[]
    NOT?: estadosScalarWhereWithAggregatesInput | estadosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"estados"> | number
    sigla?: StringWithAggregatesFilter<"estados"> | string
    nome?: StringWithAggregatesFilter<"estados"> | string
    regiao_id?: IntWithAggregatesFilter<"estados"> | number
  }

  export type favoritosWhereInput = {
    AND?: favoritosWhereInput | favoritosWhereInput[]
    OR?: favoritosWhereInput[]
    NOT?: favoritosWhereInput | favoritosWhereInput[]
    id?: IntFilter<"favoritos"> | number
    usuario_id?: IntFilter<"favoritos"> | number
    imovel_id?: IntFilter<"favoritos"> | number
    data_cadastro?: DateTimeNullableFilter<"favoritos"> | Date | string | null
    imoveis?: XOR<ImoveisScalarRelationFilter, imoveisWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type favoritosOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    imoveis?: imoveisOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type favoritosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuario_id_imovel_id?: favoritosUsuario_idImovel_idCompoundUniqueInput
    AND?: favoritosWhereInput | favoritosWhereInput[]
    OR?: favoritosWhereInput[]
    NOT?: favoritosWhereInput | favoritosWhereInput[]
    usuario_id?: IntFilter<"favoritos"> | number
    imovel_id?: IntFilter<"favoritos"> | number
    data_cadastro?: DateTimeNullableFilter<"favoritos"> | Date | string | null
    imoveis?: XOR<ImoveisScalarRelationFilter, imoveisWhereInput>
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "id" | "usuario_id_imovel_id">

  export type favoritosOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    _count?: favoritosCountOrderByAggregateInput
    _avg?: favoritosAvgOrderByAggregateInput
    _max?: favoritosMaxOrderByAggregateInput
    _min?: favoritosMinOrderByAggregateInput
    _sum?: favoritosSumOrderByAggregateInput
  }

  export type favoritosScalarWhereWithAggregatesInput = {
    AND?: favoritosScalarWhereWithAggregatesInput | favoritosScalarWhereWithAggregatesInput[]
    OR?: favoritosScalarWhereWithAggregatesInput[]
    NOT?: favoritosScalarWhereWithAggregatesInput | favoritosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"favoritos"> | number
    usuario_id?: IntWithAggregatesFilter<"favoritos"> | number
    imovel_id?: IntWithAggregatesFilter<"favoritos"> | number
    data_cadastro?: DateTimeNullableWithAggregatesFilter<"favoritos"> | Date | string | null
  }

  export type imobiliariasWhereInput = {
    AND?: imobiliariasWhereInput | imobiliariasWhereInput[]
    OR?: imobiliariasWhereInput[]
    NOT?: imobiliariasWhereInput | imobiliariasWhereInput[]
    id?: IntFilter<"imobiliarias"> | number
    nome?: StringFilter<"imobiliarias"> | string
    cnpj?: StringFilter<"imobiliarias"> | string
    telefone?: StringFilter<"imobiliarias"> | string
    email?: StringFilter<"imobiliarias"> | string
    endereco?: StringFilter<"imobiliarias"> | string
    data_cadastro?: DateTimeNullableFilter<"imobiliarias"> | Date | string | null
    corretores?: CorretoresListRelationFilter
  }

  export type imobiliariasOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    corretores?: corretoresOrderByRelationAggregateInput
  }

  export type imobiliariasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cnpj?: string
    email?: string
    AND?: imobiliariasWhereInput | imobiliariasWhereInput[]
    OR?: imobiliariasWhereInput[]
    NOT?: imobiliariasWhereInput | imobiliariasWhereInput[]
    nome?: StringFilter<"imobiliarias"> | string
    telefone?: StringFilter<"imobiliarias"> | string
    endereco?: StringFilter<"imobiliarias"> | string
    data_cadastro?: DateTimeNullableFilter<"imobiliarias"> | Date | string | null
    corretores?: CorretoresListRelationFilter
  }, "id" | "cnpj" | "email">

  export type imobiliariasOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    _count?: imobiliariasCountOrderByAggregateInput
    _avg?: imobiliariasAvgOrderByAggregateInput
    _max?: imobiliariasMaxOrderByAggregateInput
    _min?: imobiliariasMinOrderByAggregateInput
    _sum?: imobiliariasSumOrderByAggregateInput
  }

  export type imobiliariasScalarWhereWithAggregatesInput = {
    AND?: imobiliariasScalarWhereWithAggregatesInput | imobiliariasScalarWhereWithAggregatesInput[]
    OR?: imobiliariasScalarWhereWithAggregatesInput[]
    NOT?: imobiliariasScalarWhereWithAggregatesInput | imobiliariasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"imobiliarias"> | number
    nome?: StringWithAggregatesFilter<"imobiliarias"> | string
    cnpj?: StringWithAggregatesFilter<"imobiliarias"> | string
    telefone?: StringWithAggregatesFilter<"imobiliarias"> | string
    email?: StringWithAggregatesFilter<"imobiliarias"> | string
    endereco?: StringWithAggregatesFilter<"imobiliarias"> | string
    data_cadastro?: DateTimeNullableWithAggregatesFilter<"imobiliarias"> | Date | string | null
  }

  export type imoveisWhereInput = {
    AND?: imoveisWhereInput | imoveisWhereInput[]
    OR?: imoveisWhereInput[]
    NOT?: imoveisWhereInput | imoveisWhereInput[]
    id?: IntFilter<"imoveis"> | number
    titulo?: StringFilter<"imoveis"> | string
    descricao?: StringNullableFilter<"imoveis"> | string | null
    subtipo_id?: IntFilter<"imoveis"> | number
    tipoimovel_id?: IntFilter<"imoveis"> | number
    preco?: DecimalFilter<"imoveis"> | Decimal | DecimalJsLike | number | string
    area?: IntNullableFilter<"imoveis"> | number | null
    quartos?: IntNullableFilter<"imoveis"> | number | null
    banheiros?: IntNullableFilter<"imoveis"> | number | null
    vagas_garagem?: IntNullableFilter<"imoveis"> | number | null
    endereco?: StringFilter<"imoveis"> | string
    numero?: StringNullableFilter<"imoveis"> | string | null
    complemento?: StringNullableFilter<"imoveis"> | string | null
    bairro?: StringFilter<"imoveis"> | string
    cidade?: StringFilter<"imoveis"> | string
    estado?: StringFilter<"imoveis"> | string
    cep?: StringNullableFilter<"imoveis"> | string | null
    latitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    data_atualizacao?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    disponivel?: BoolNullableFilter<"imoveis"> | boolean | null
    destaque?: BoolNullableFilter<"imoveis"> | boolean | null
    imagens?: StringNullableListFilter<"imoveis">
    id_proprietario?: IntNullableFilter<"imoveis"> | number | null
    id_corretor?: IntNullableFilter<"imoveis"> | number | null
    area_util_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    salas?: IntNullableFilter<"imoveis"> | number | null
    andar?: IntNullableFilter<"imoveis"> | number | null
    area_privativa?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_comum?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    suites?: IntNullableFilter<"imoveis"> | number | null
    mobiliado?: BoolNullableFilter<"imoveis"> | boolean | null
    aceita_animais?: BoolNullableFilter<"imoveis"> | boolean | null
    views?: IntNullableFilter<"imoveis"> | number | null
    estado_id?: IntNullableFilter<"imoveis"> | number | null
    valor_iptu?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    favoritos?: FavoritosListRelationFilter
    corretores?: XOR<CorretoresNullableScalarRelationFilter, corretoresWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
    subtipos_imovel?: XOR<Subtipos_imovelScalarRelationFilter, subtipos_imovelWhereInput>
    tipos_imovel?: XOR<Tipos_imovelScalarRelationFilter, tipos_imovelWhereInput>
    imovel_caracteristicas?: Imovel_caracteristicasListRelationFilter
  }

  export type imoveisOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrderInput | SortOrder
    quartos?: SortOrderInput | SortOrder
    banheiros?: SortOrderInput | SortOrder
    vagas_garagem?: SortOrderInput | SortOrder
    endereco?: SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    data_atualizacao?: SortOrderInput | SortOrder
    disponivel?: SortOrderInput | SortOrder
    destaque?: SortOrderInput | SortOrder
    imagens?: SortOrder
    id_proprietario?: SortOrderInput | SortOrder
    id_corretor?: SortOrderInput | SortOrder
    area_util_hectares?: SortOrderInput | SortOrder
    area_total_hectares?: SortOrderInput | SortOrder
    salas?: SortOrderInput | SortOrder
    andar?: SortOrderInput | SortOrder
    area_privativa?: SortOrderInput | SortOrder
    area_comum?: SortOrderInput | SortOrder
    suites?: SortOrderInput | SortOrder
    mobiliado?: SortOrderInput | SortOrder
    aceita_animais?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    estado_id?: SortOrderInput | SortOrder
    valor_iptu?: SortOrderInput | SortOrder
    valor_condominio?: SortOrderInput | SortOrder
    favoritos?: favoritosOrderByRelationAggregateInput
    corretores?: corretoresOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
    subtipos_imovel?: subtipos_imovelOrderByWithRelationInput
    tipos_imovel?: tipos_imovelOrderByWithRelationInput
    imovel_caracteristicas?: imovel_caracteristicasOrderByRelationAggregateInput
  }

  export type imoveisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: imoveisWhereInput | imoveisWhereInput[]
    OR?: imoveisWhereInput[]
    NOT?: imoveisWhereInput | imoveisWhereInput[]
    titulo?: StringFilter<"imoveis"> | string
    descricao?: StringNullableFilter<"imoveis"> | string | null
    subtipo_id?: IntFilter<"imoveis"> | number
    tipoimovel_id?: IntFilter<"imoveis"> | number
    preco?: DecimalFilter<"imoveis"> | Decimal | DecimalJsLike | number | string
    area?: IntNullableFilter<"imoveis"> | number | null
    quartos?: IntNullableFilter<"imoveis"> | number | null
    banheiros?: IntNullableFilter<"imoveis"> | number | null
    vagas_garagem?: IntNullableFilter<"imoveis"> | number | null
    endereco?: StringFilter<"imoveis"> | string
    numero?: StringNullableFilter<"imoveis"> | string | null
    complemento?: StringNullableFilter<"imoveis"> | string | null
    bairro?: StringFilter<"imoveis"> | string
    cidade?: StringFilter<"imoveis"> | string
    estado?: StringFilter<"imoveis"> | string
    cep?: StringNullableFilter<"imoveis"> | string | null
    latitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    data_atualizacao?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    disponivel?: BoolNullableFilter<"imoveis"> | boolean | null
    destaque?: BoolNullableFilter<"imoveis"> | boolean | null
    imagens?: StringNullableListFilter<"imoveis">
    id_proprietario?: IntNullableFilter<"imoveis"> | number | null
    id_corretor?: IntNullableFilter<"imoveis"> | number | null
    area_util_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    salas?: IntNullableFilter<"imoveis"> | number | null
    andar?: IntNullableFilter<"imoveis"> | number | null
    area_privativa?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_comum?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    suites?: IntNullableFilter<"imoveis"> | number | null
    mobiliado?: BoolNullableFilter<"imoveis"> | boolean | null
    aceita_animais?: BoolNullableFilter<"imoveis"> | boolean | null
    views?: IntNullableFilter<"imoveis"> | number | null
    estado_id?: IntNullableFilter<"imoveis"> | number | null
    valor_iptu?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    favoritos?: FavoritosListRelationFilter
    corretores?: XOR<CorretoresNullableScalarRelationFilter, corretoresWhereInput> | null
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
    subtipos_imovel?: XOR<Subtipos_imovelScalarRelationFilter, subtipos_imovelWhereInput>
    tipos_imovel?: XOR<Tipos_imovelScalarRelationFilter, tipos_imovelWhereInput>
    imovel_caracteristicas?: Imovel_caracteristicasListRelationFilter
  }, "id">

  export type imoveisOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrderInput | SortOrder
    quartos?: SortOrderInput | SortOrder
    banheiros?: SortOrderInput | SortOrder
    vagas_garagem?: SortOrderInput | SortOrder
    endereco?: SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    data_atualizacao?: SortOrderInput | SortOrder
    disponivel?: SortOrderInput | SortOrder
    destaque?: SortOrderInput | SortOrder
    imagens?: SortOrder
    id_proprietario?: SortOrderInput | SortOrder
    id_corretor?: SortOrderInput | SortOrder
    area_util_hectares?: SortOrderInput | SortOrder
    area_total_hectares?: SortOrderInput | SortOrder
    salas?: SortOrderInput | SortOrder
    andar?: SortOrderInput | SortOrder
    area_privativa?: SortOrderInput | SortOrder
    area_comum?: SortOrderInput | SortOrder
    suites?: SortOrderInput | SortOrder
    mobiliado?: SortOrderInput | SortOrder
    aceita_animais?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    estado_id?: SortOrderInput | SortOrder
    valor_iptu?: SortOrderInput | SortOrder
    valor_condominio?: SortOrderInput | SortOrder
    _count?: imoveisCountOrderByAggregateInput
    _avg?: imoveisAvgOrderByAggregateInput
    _max?: imoveisMaxOrderByAggregateInput
    _min?: imoveisMinOrderByAggregateInput
    _sum?: imoveisSumOrderByAggregateInput
  }

  export type imoveisScalarWhereWithAggregatesInput = {
    AND?: imoveisScalarWhereWithAggregatesInput | imoveisScalarWhereWithAggregatesInput[]
    OR?: imoveisScalarWhereWithAggregatesInput[]
    NOT?: imoveisScalarWhereWithAggregatesInput | imoveisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"imoveis"> | number
    titulo?: StringWithAggregatesFilter<"imoveis"> | string
    descricao?: StringNullableWithAggregatesFilter<"imoveis"> | string | null
    subtipo_id?: IntWithAggregatesFilter<"imoveis"> | number
    tipoimovel_id?: IntWithAggregatesFilter<"imoveis"> | number
    preco?: DecimalWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string
    area?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    quartos?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    banheiros?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    vagas_garagem?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    endereco?: StringWithAggregatesFilter<"imoveis"> | string
    numero?: StringNullableWithAggregatesFilter<"imoveis"> | string | null
    complemento?: StringNullableWithAggregatesFilter<"imoveis"> | string | null
    bairro?: StringWithAggregatesFilter<"imoveis"> | string
    cidade?: StringWithAggregatesFilter<"imoveis"> | string
    estado?: StringWithAggregatesFilter<"imoveis"> | string
    cep?: StringNullableWithAggregatesFilter<"imoveis"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: DateTimeNullableWithAggregatesFilter<"imoveis"> | Date | string | null
    data_atualizacao?: DateTimeNullableWithAggregatesFilter<"imoveis"> | Date | string | null
    disponivel?: BoolNullableWithAggregatesFilter<"imoveis"> | boolean | null
    destaque?: BoolNullableWithAggregatesFilter<"imoveis"> | boolean | null
    imagens?: StringNullableListFilter<"imoveis">
    id_proprietario?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    id_corretor?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    area_util_hectares?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    salas?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    andar?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    area_privativa?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_comum?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    suites?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    mobiliado?: BoolNullableWithAggregatesFilter<"imoveis"> | boolean | null
    aceita_animais?: BoolNullableWithAggregatesFilter<"imoveis"> | boolean | null
    views?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    estado_id?: IntNullableWithAggregatesFilter<"imoveis"> | number | null
    valor_iptu?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: DecimalNullableWithAggregatesFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
  }

  export type imovel_caracteristicasWhereInput = {
    AND?: imovel_caracteristicasWhereInput | imovel_caracteristicasWhereInput[]
    OR?: imovel_caracteristicasWhereInput[]
    NOT?: imovel_caracteristicasWhereInput | imovel_caracteristicasWhereInput[]
    id?: IntFilter<"imovel_caracteristicas"> | number
    imovel_id?: IntFilter<"imovel_caracteristicas"> | number
    caracteristica_id?: IntFilter<"imovel_caracteristicas"> | number
    caracteristicas?: XOR<CaracteristicasScalarRelationFilter, caracteristicasWhereInput>
    imoveis?: XOR<ImoveisScalarRelationFilter, imoveisWhereInput>
  }

  export type imovel_caracteristicasOrderByWithRelationInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
    caracteristicas?: caracteristicasOrderByWithRelationInput
    imoveis?: imoveisOrderByWithRelationInput
  }

  export type imovel_caracteristicasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    imovel_id_caracteristica_id?: imovel_caracteristicasImovel_idCaracteristica_idCompoundUniqueInput
    AND?: imovel_caracteristicasWhereInput | imovel_caracteristicasWhereInput[]
    OR?: imovel_caracteristicasWhereInput[]
    NOT?: imovel_caracteristicasWhereInput | imovel_caracteristicasWhereInput[]
    imovel_id?: IntFilter<"imovel_caracteristicas"> | number
    caracteristica_id?: IntFilter<"imovel_caracteristicas"> | number
    caracteristicas?: XOR<CaracteristicasScalarRelationFilter, caracteristicasWhereInput>
    imoveis?: XOR<ImoveisScalarRelationFilter, imoveisWhereInput>
  }, "id" | "imovel_id_caracteristica_id">

  export type imovel_caracteristicasOrderByWithAggregationInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
    _count?: imovel_caracteristicasCountOrderByAggregateInput
    _avg?: imovel_caracteristicasAvgOrderByAggregateInput
    _max?: imovel_caracteristicasMaxOrderByAggregateInput
    _min?: imovel_caracteristicasMinOrderByAggregateInput
    _sum?: imovel_caracteristicasSumOrderByAggregateInput
  }

  export type imovel_caracteristicasScalarWhereWithAggregatesInput = {
    AND?: imovel_caracteristicasScalarWhereWithAggregatesInput | imovel_caracteristicasScalarWhereWithAggregatesInput[]
    OR?: imovel_caracteristicasScalarWhereWithAggregatesInput[]
    NOT?: imovel_caracteristicasScalarWhereWithAggregatesInput | imovel_caracteristicasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"imovel_caracteristicas"> | number
    imovel_id?: IntWithAggregatesFilter<"imovel_caracteristicas"> | number
    caracteristica_id?: IntWithAggregatesFilter<"imovel_caracteristicas"> | number
  }

  export type regioesWhereInput = {
    AND?: regioesWhereInput | regioesWhereInput[]
    OR?: regioesWhereInput[]
    NOT?: regioesWhereInput | regioesWhereInput[]
    id?: IntFilter<"regioes"> | number
    sigla?: StringFilter<"regioes"> | string
    nome?: StringFilter<"regioes"> | string
    estados?: EstadosListRelationFilter
  }

  export type regioesOrderByWithRelationInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    estados?: estadosOrderByRelationAggregateInput
  }

  export type regioesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sigla?: string
    nome?: string
    AND?: regioesWhereInput | regioesWhereInput[]
    OR?: regioesWhereInput[]
    NOT?: regioesWhereInput | regioesWhereInput[]
    estados?: EstadosListRelationFilter
  }, "id" | "sigla" | "nome">

  export type regioesOrderByWithAggregationInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    _count?: regioesCountOrderByAggregateInput
    _avg?: regioesAvgOrderByAggregateInput
    _max?: regioesMaxOrderByAggregateInput
    _min?: regioesMinOrderByAggregateInput
    _sum?: regioesSumOrderByAggregateInput
  }

  export type regioesScalarWhereWithAggregatesInput = {
    AND?: regioesScalarWhereWithAggregatesInput | regioesScalarWhereWithAggregatesInput[]
    OR?: regioesScalarWhereWithAggregatesInput[]
    NOT?: regioesScalarWhereWithAggregatesInput | regioesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"regioes"> | number
    sigla?: StringWithAggregatesFilter<"regioes"> | string
    nome?: StringWithAggregatesFilter<"regioes"> | string
  }

  export type subtipos_imovelWhereInput = {
    AND?: subtipos_imovelWhereInput | subtipos_imovelWhereInput[]
    OR?: subtipos_imovelWhereInput[]
    NOT?: subtipos_imovelWhereInput | subtipos_imovelWhereInput[]
    id?: IntFilter<"subtipos_imovel"> | number
    tipo_id?: IntFilter<"subtipos_imovel"> | number
    nome?: StringFilter<"subtipos_imovel"> | string
    nome_exibicao?: StringFilter<"subtipos_imovel"> | string
    imoveis?: ImoveisListRelationFilter
    tipos_imovel?: XOR<Tipos_imovelScalarRelationFilter, tipos_imovelWhereInput>
  }

  export type subtipos_imovelOrderByWithRelationInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    nome?: SortOrder
    nome_exibicao?: SortOrder
    imoveis?: imoveisOrderByRelationAggregateInput
    tipos_imovel?: tipos_imovelOrderByWithRelationInput
  }

  export type subtipos_imovelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    tipo_id_nome?: subtipos_imovelTipo_idNomeCompoundUniqueInput
    AND?: subtipos_imovelWhereInput | subtipos_imovelWhereInput[]
    OR?: subtipos_imovelWhereInput[]
    NOT?: subtipos_imovelWhereInput | subtipos_imovelWhereInput[]
    tipo_id?: IntFilter<"subtipos_imovel"> | number
    nome_exibicao?: StringFilter<"subtipos_imovel"> | string
    imoveis?: ImoveisListRelationFilter
    tipos_imovel?: XOR<Tipos_imovelScalarRelationFilter, tipos_imovelWhereInput>
  }, "id" | "nome" | "tipo_id_nome">

  export type subtipos_imovelOrderByWithAggregationInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    nome?: SortOrder
    nome_exibicao?: SortOrder
    _count?: subtipos_imovelCountOrderByAggregateInput
    _avg?: subtipos_imovelAvgOrderByAggregateInput
    _max?: subtipos_imovelMaxOrderByAggregateInput
    _min?: subtipos_imovelMinOrderByAggregateInput
    _sum?: subtipos_imovelSumOrderByAggregateInput
  }

  export type subtipos_imovelScalarWhereWithAggregatesInput = {
    AND?: subtipos_imovelScalarWhereWithAggregatesInput | subtipos_imovelScalarWhereWithAggregatesInput[]
    OR?: subtipos_imovelScalarWhereWithAggregatesInput[]
    NOT?: subtipos_imovelScalarWhereWithAggregatesInput | subtipos_imovelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"subtipos_imovel"> | number
    tipo_id?: IntWithAggregatesFilter<"subtipos_imovel"> | number
    nome?: StringWithAggregatesFilter<"subtipos_imovel"> | string
    nome_exibicao?: StringWithAggregatesFilter<"subtipos_imovel"> | string
  }

  export type tipos_imovelWhereInput = {
    AND?: tipos_imovelWhereInput | tipos_imovelWhereInput[]
    OR?: tipos_imovelWhereInput[]
    NOT?: tipos_imovelWhereInput | tipos_imovelWhereInput[]
    id?: IntFilter<"tipos_imovel"> | number
    nome?: StringFilter<"tipos_imovel"> | string
    imoveis?: ImoveisListRelationFilter
    subtipos_imovel?: Subtipos_imovelListRelationFilter
  }

  export type tipos_imovelOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    imoveis?: imoveisOrderByRelationAggregateInput
    subtipos_imovel?: subtipos_imovelOrderByRelationAggregateInput
  }

  export type tipos_imovelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: tipos_imovelWhereInput | tipos_imovelWhereInput[]
    OR?: tipos_imovelWhereInput[]
    NOT?: tipos_imovelWhereInput | tipos_imovelWhereInput[]
    imoveis?: ImoveisListRelationFilter
    subtipos_imovel?: Subtipos_imovelListRelationFilter
  }, "id" | "nome">

  export type tipos_imovelOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: tipos_imovelCountOrderByAggregateInput
    _avg?: tipos_imovelAvgOrderByAggregateInput
    _max?: tipos_imovelMaxOrderByAggregateInput
    _min?: tipos_imovelMinOrderByAggregateInput
    _sum?: tipos_imovelSumOrderByAggregateInput
  }

  export type tipos_imovelScalarWhereWithAggregatesInput = {
    AND?: tipos_imovelScalarWhereWithAggregatesInput | tipos_imovelScalarWhereWithAggregatesInput[]
    OR?: tipos_imovelScalarWhereWithAggregatesInput[]
    NOT?: tipos_imovelScalarWhereWithAggregatesInput | tipos_imovelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipos_imovel"> | number
    nome?: StringWithAggregatesFilter<"tipos_imovel"> | string
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id?: IntFilter<"usuarios"> | number
    nome?: StringFilter<"usuarios"> | string
    email?: StringFilter<"usuarios"> | string
    senha_hash?: StringFilter<"usuarios"> | string
    telefone?: StringFilter<"usuarios"> | string
    cpf?: StringFilter<"usuarios"> | string
    tipo?: StringFilter<"usuarios"> | string
    data_cadastro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    data_nascimento?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    corretores?: XOR<CorretoresNullableScalarRelationFilter, corretoresWhereInput> | null
    favoritos?: FavoritosListRelationFilter
    imoveis?: ImoveisListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    tipo?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    corretores?: corretoresOrderByWithRelationInput
    favoritos?: favoritosOrderByRelationAggregateInput
    imoveis?: imoveisOrderByRelationAggregateInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    cpf?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    nome?: StringFilter<"usuarios"> | string
    senha_hash?: StringFilter<"usuarios"> | string
    telefone?: StringFilter<"usuarios"> | string
    tipo?: StringFilter<"usuarios"> | string
    data_cadastro?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    data_nascimento?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    corretores?: XOR<CorretoresNullableScalarRelationFilter, corretoresWhereInput> | null
    favoritos?: FavoritosListRelationFilter
    imoveis?: ImoveisListRelationFilter
  }, "id" | "email" | "cpf">

  export type usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    tipo?: SortOrder
    data_cadastro?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuarios"> | number
    nome?: StringWithAggregatesFilter<"usuarios"> | string
    email?: StringWithAggregatesFilter<"usuarios"> | string
    senha_hash?: StringWithAggregatesFilter<"usuarios"> | string
    telefone?: StringWithAggregatesFilter<"usuarios"> | string
    cpf?: StringWithAggregatesFilter<"usuarios"> | string
    tipo?: StringWithAggregatesFilter<"usuarios"> | string
    data_cadastro?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  }

  export type caracteristicasCreateInput = {
    nome: string
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutCaracteristicasInput
  }

  export type caracteristicasUncheckedCreateInput = {
    id?: number
    nome: string
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutCaracteristicasInput
  }

  export type caracteristicasUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutCaracteristicasNestedInput
  }

  export type caracteristicasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutCaracteristicasNestedInput
  }

  export type caracteristicasCreateManyInput = {
    id?: number
    nome: string
  }

  export type caracteristicasUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type caracteristicasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type corretoresCreateInput = {
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    imobiliarias?: imobiliariasCreateNestedOneWithoutCorretoresInput
    usuarios: usuariosCreateNestedOneWithoutCorretoresInput
    imoveis?: imoveisCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresUncheckedCreateInput = {
    id?: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    id_imobiliaria?: number | null
    imoveis?: imoveisUncheckedCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresUpdateInput = {
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imobiliarias?: imobiliariasUpdateOneWithoutCorretoresNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCorretoresNestedInput
    imoveis?: imoveisUpdateManyWithoutCorretoresNestedInput
  }

  export type corretoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_imobiliaria?: NullableIntFieldUpdateOperationsInput | number | null
    imoveis?: imoveisUncheckedUpdateManyWithoutCorretoresNestedInput
  }

  export type corretoresCreateManyInput = {
    id?: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    id_imobiliaria?: number | null
  }

  export type corretoresUpdateManyMutationInput = {
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type corretoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_imobiliaria?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estadosCreateInput = {
    id: number
    sigla: string
    nome: string
    regioes: regioesCreateNestedOneWithoutEstadosInput
  }

  export type estadosUncheckedCreateInput = {
    id: number
    sigla: string
    nome: string
    regiao_id: number
  }

  export type estadosUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    regioes?: regioesUpdateOneRequiredWithoutEstadosNestedInput
  }

  export type estadosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    regiao_id?: IntFieldUpdateOperationsInput | number
  }

  export type estadosCreateManyInput = {
    id: number
    sigla: string
    nome: string
    regiao_id: number
  }

  export type estadosUpdateManyMutationInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type estadosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    regiao_id?: IntFieldUpdateOperationsInput | number
  }

  export type favoritosCreateInput = {
    data_cadastro?: Date | string | null
    imoveis: imoveisCreateNestedOneWithoutFavoritosInput
    usuarios: usuariosCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateInput = {
    id?: number
    usuario_id: number
    imovel_id: number
    data_cadastro?: Date | string | null
  }

  export type favoritosUpdateInput = {
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imoveis?: imoveisUpdateOneRequiredWithoutFavoritosNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritosCreateManyInput = {
    id?: number
    usuario_id: number
    imovel_id: number
    data_cadastro?: Date | string | null
  }

  export type favoritosUpdateManyMutationInput = {
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imobiliariasCreateInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro?: Date | string | null
    corretores?: corretoresCreateNestedManyWithoutImobiliariasInput
  }

  export type imobiliariasUncheckedCreateInput = {
    id?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro?: Date | string | null
    corretores?: corretoresUncheckedCreateNestedManyWithoutImobiliariasInput
  }

  export type imobiliariasUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUpdateManyWithoutImobiliariasNestedInput
  }

  export type imobiliariasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUncheckedUpdateManyWithoutImobiliariasNestedInput
  }

  export type imobiliariasCreateManyInput = {
    id?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro?: Date | string | null
  }

  export type imobiliariasUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imobiliariasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imoveisCreateInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisCreateManyInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
  }

  export type imoveisUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type imoveisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type imovel_caracteristicasCreateInput = {
    caracteristicas: caracteristicasCreateNestedOneWithoutImovel_caracteristicasInput
    imoveis: imoveisCreateNestedOneWithoutImovel_caracteristicasInput
  }

  export type imovel_caracteristicasUncheckedCreateInput = {
    id?: number
    imovel_id: number
    caracteristica_id: number
  }

  export type imovel_caracteristicasUpdateInput = {
    caracteristicas?: caracteristicasUpdateOneRequiredWithoutImovel_caracteristicasNestedInput
    imoveis?: imoveisUpdateOneRequiredWithoutImovel_caracteristicasNestedInput
  }

  export type imovel_caracteristicasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    caracteristica_id?: IntFieldUpdateOperationsInput | number
  }

  export type imovel_caracteristicasCreateManyInput = {
    id?: number
    imovel_id: number
    caracteristica_id: number
  }

  export type imovel_caracteristicasUpdateManyMutationInput = {

  }

  export type imovel_caracteristicasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    caracteristica_id?: IntFieldUpdateOperationsInput | number
  }

  export type regioesCreateInput = {
    sigla: string
    nome: string
    estados?: estadosCreateNestedManyWithoutRegioesInput
  }

  export type regioesUncheckedCreateInput = {
    id?: number
    sigla: string
    nome: string
    estados?: estadosUncheckedCreateNestedManyWithoutRegioesInput
  }

  export type regioesUpdateInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    estados?: estadosUpdateManyWithoutRegioesNestedInput
  }

  export type regioesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    estados?: estadosUncheckedUpdateManyWithoutRegioesNestedInput
  }

  export type regioesCreateManyInput = {
    id?: number
    sigla: string
    nome: string
  }

  export type regioesUpdateManyMutationInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type regioesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type subtipos_imovelCreateInput = {
    nome: string
    nome_exibicao: string
    imoveis?: imoveisCreateNestedManyWithoutSubtipos_imovelInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutSubtipos_imovelInput
  }

  export type subtipos_imovelUncheckedCreateInput = {
    id?: number
    tipo_id: number
    nome: string
    nome_exibicao: string
    imoveis?: imoveisUncheckedCreateNestedManyWithoutSubtipos_imovelInput
  }

  export type subtipos_imovelUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUpdateManyWithoutSubtipos_imovelNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutSubtipos_imovelNestedInput
  }

  export type subtipos_imovelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo_id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUncheckedUpdateManyWithoutSubtipos_imovelNestedInput
  }

  export type subtipos_imovelCreateManyInput = {
    id?: number
    tipo_id: number
    nome: string
    nome_exibicao: string
  }

  export type subtipos_imovelUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
  }

  export type subtipos_imovelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo_id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_imovelCreateInput = {
    nome: string
    imoveis?: imoveisCreateNestedManyWithoutTipos_imovelInput
    subtipos_imovel?: subtipos_imovelCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelUncheckedCreateInput = {
    id?: number
    nome: string
    imoveis?: imoveisUncheckedCreateNestedManyWithoutTipos_imovelInput
    subtipos_imovel?: subtipos_imovelUncheckedCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUpdateManyWithoutTipos_imovelNestedInput
    subtipos_imovel?: subtipos_imovelUpdateManyWithoutTipos_imovelNestedInput
  }

  export type tipos_imovelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUncheckedUpdateManyWithoutTipos_imovelNestedInput
    subtipos_imovel?: subtipos_imovelUncheckedUpdateManyWithoutTipos_imovelNestedInput
  }

  export type tipos_imovelCreateManyInput = {
    id?: number
    nome: string
  }

  export type tipos_imovelUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_imovelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type usuariosCreateInput = {
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresCreateNestedOneWithoutUsuariosInput
    favoritos?: favoritosCreateNestedManyWithoutUsuariosInput
    imoveis?: imoveisCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresUncheckedCreateNestedOneWithoutUsuariosInput
    favoritos?: favoritosUncheckedCreateNestedManyWithoutUsuariosInput
    imoveis?: imoveisUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUpdateOneWithoutUsuariosNestedInput
    favoritos?: favoritosUpdateManyWithoutUsuariosNestedInput
    imoveis?: imoveisUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUncheckedUpdateOneWithoutUsuariosNestedInput
    favoritos?: favoritosUncheckedUpdateManyWithoutUsuariosNestedInput
    imoveis?: imoveisUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
  }

  export type usuariosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Imovel_caracteristicasListRelationFilter = {
    every?: imovel_caracteristicasWhereInput
    some?: imovel_caracteristicasWhereInput
    none?: imovel_caracteristicasWhereInput
  }

  export type imovel_caracteristicasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type caracteristicasCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type caracteristicasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type caracteristicasMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type caracteristicasMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type caracteristicasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ImobiliariasNullableScalarRelationFilter = {
    is?: imobiliariasWhereInput | null
    isNot?: imobiliariasWhereInput | null
  }

  export type UsuariosScalarRelationFilter = {
    is?: usuariosWhereInput
    isNot?: usuariosWhereInput
  }

  export type ImoveisListRelationFilter = {
    every?: imoveisWhereInput
    some?: imoveisWhereInput
    none?: imoveisWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type imoveisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type corretoresCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    creci?: SortOrder
    creci_uf?: SortOrder
    data_registro?: SortOrder
    bio?: SortOrder
    ativo?: SortOrder
    id_imobiliaria?: SortOrder
  }

  export type corretoresAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    id_imobiliaria?: SortOrder
  }

  export type corretoresMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    creci?: SortOrder
    creci_uf?: SortOrder
    data_registro?: SortOrder
    bio?: SortOrder
    ativo?: SortOrder
    id_imobiliaria?: SortOrder
  }

  export type corretoresMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    creci?: SortOrder
    creci_uf?: SortOrder
    data_registro?: SortOrder
    bio?: SortOrder
    ativo?: SortOrder
    id_imobiliaria?: SortOrder
  }

  export type corretoresSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    id_imobiliaria?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type RegioesScalarRelationFilter = {
    is?: regioesWhereInput
    isNot?: regioesWhereInput
  }

  export type estadosCountOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    regiao_id?: SortOrder
  }

  export type estadosAvgOrderByAggregateInput = {
    id?: SortOrder
    regiao_id?: SortOrder
  }

  export type estadosMaxOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    regiao_id?: SortOrder
  }

  export type estadosMinOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
    regiao_id?: SortOrder
  }

  export type estadosSumOrderByAggregateInput = {
    id?: SortOrder
    regiao_id?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ImoveisScalarRelationFilter = {
    is?: imoveisWhereInput
    isNot?: imoveisWhereInput
  }

  export type favoritosUsuario_idImovel_idCompoundUniqueInput = {
    usuario_id: number
    imovel_id: number
  }

  export type favoritosCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
    data_cadastro?: SortOrder
  }

  export type favoritosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
  }

  export type favoritosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
    data_cadastro?: SortOrder
  }

  export type favoritosMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
    data_cadastro?: SortOrder
  }

  export type favoritosSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    imovel_id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CorretoresListRelationFilter = {
    every?: corretoresWhereInput
    some?: corretoresWhereInput
    none?: corretoresWhereInput
  }

  export type corretoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type imobiliariasCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    data_cadastro?: SortOrder
  }

  export type imobiliariasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type imobiliariasMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    data_cadastro?: SortOrder
  }

  export type imobiliariasMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    data_cadastro?: SortOrder
  }

  export type imobiliariasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type FavoritosListRelationFilter = {
    every?: favoritosWhereInput
    some?: favoritosWhereInput
    none?: favoritosWhereInput
  }

  export type CorretoresNullableScalarRelationFilter = {
    is?: corretoresWhereInput | null
    isNot?: corretoresWhereInput | null
  }

  export type UsuariosNullableScalarRelationFilter = {
    is?: usuariosWhereInput | null
    isNot?: usuariosWhereInput | null
  }

  export type Subtipos_imovelScalarRelationFilter = {
    is?: subtipos_imovelWhereInput
    isNot?: subtipos_imovelWhereInput
  }

  export type Tipos_imovelScalarRelationFilter = {
    is?: tipos_imovelWhereInput
    isNot?: tipos_imovelWhereInput
  }

  export type favoritosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type imoveisCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrder
    quartos?: SortOrder
    banheiros?: SortOrder
    vagas_garagem?: SortOrder
    endereco?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    data_cadastro?: SortOrder
    data_atualizacao?: SortOrder
    disponivel?: SortOrder
    destaque?: SortOrder
    imagens?: SortOrder
    id_proprietario?: SortOrder
    id_corretor?: SortOrder
    area_util_hectares?: SortOrder
    area_total_hectares?: SortOrder
    salas?: SortOrder
    andar?: SortOrder
    area_privativa?: SortOrder
    area_comum?: SortOrder
    suites?: SortOrder
    mobiliado?: SortOrder
    aceita_animais?: SortOrder
    views?: SortOrder
    estado_id?: SortOrder
    valor_iptu?: SortOrder
    valor_condominio?: SortOrder
  }

  export type imoveisAvgOrderByAggregateInput = {
    id?: SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrder
    quartos?: SortOrder
    banheiros?: SortOrder
    vagas_garagem?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    id_proprietario?: SortOrder
    id_corretor?: SortOrder
    area_util_hectares?: SortOrder
    area_total_hectares?: SortOrder
    salas?: SortOrder
    andar?: SortOrder
    area_privativa?: SortOrder
    area_comum?: SortOrder
    suites?: SortOrder
    views?: SortOrder
    estado_id?: SortOrder
    valor_iptu?: SortOrder
    valor_condominio?: SortOrder
  }

  export type imoveisMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrder
    quartos?: SortOrder
    banheiros?: SortOrder
    vagas_garagem?: SortOrder
    endereco?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    data_cadastro?: SortOrder
    data_atualizacao?: SortOrder
    disponivel?: SortOrder
    destaque?: SortOrder
    id_proprietario?: SortOrder
    id_corretor?: SortOrder
    area_util_hectares?: SortOrder
    area_total_hectares?: SortOrder
    salas?: SortOrder
    andar?: SortOrder
    area_privativa?: SortOrder
    area_comum?: SortOrder
    suites?: SortOrder
    mobiliado?: SortOrder
    aceita_animais?: SortOrder
    views?: SortOrder
    estado_id?: SortOrder
    valor_iptu?: SortOrder
    valor_condominio?: SortOrder
  }

  export type imoveisMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrder
    quartos?: SortOrder
    banheiros?: SortOrder
    vagas_garagem?: SortOrder
    endereco?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    data_cadastro?: SortOrder
    data_atualizacao?: SortOrder
    disponivel?: SortOrder
    destaque?: SortOrder
    id_proprietario?: SortOrder
    id_corretor?: SortOrder
    area_util_hectares?: SortOrder
    area_total_hectares?: SortOrder
    salas?: SortOrder
    andar?: SortOrder
    area_privativa?: SortOrder
    area_comum?: SortOrder
    suites?: SortOrder
    mobiliado?: SortOrder
    aceita_animais?: SortOrder
    views?: SortOrder
    estado_id?: SortOrder
    valor_iptu?: SortOrder
    valor_condominio?: SortOrder
  }

  export type imoveisSumOrderByAggregateInput = {
    id?: SortOrder
    subtipo_id?: SortOrder
    tipoimovel_id?: SortOrder
    preco?: SortOrder
    area?: SortOrder
    quartos?: SortOrder
    banheiros?: SortOrder
    vagas_garagem?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    id_proprietario?: SortOrder
    id_corretor?: SortOrder
    area_util_hectares?: SortOrder
    area_total_hectares?: SortOrder
    salas?: SortOrder
    andar?: SortOrder
    area_privativa?: SortOrder
    area_comum?: SortOrder
    suites?: SortOrder
    views?: SortOrder
    estado_id?: SortOrder
    valor_iptu?: SortOrder
    valor_condominio?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type CaracteristicasScalarRelationFilter = {
    is?: caracteristicasWhereInput
    isNot?: caracteristicasWhereInput
  }

  export type imovel_caracteristicasImovel_idCaracteristica_idCompoundUniqueInput = {
    imovel_id: number
    caracteristica_id: number
  }

  export type imovel_caracteristicasCountOrderByAggregateInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
  }

  export type imovel_caracteristicasAvgOrderByAggregateInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
  }

  export type imovel_caracteristicasMaxOrderByAggregateInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
  }

  export type imovel_caracteristicasMinOrderByAggregateInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
  }

  export type imovel_caracteristicasSumOrderByAggregateInput = {
    id?: SortOrder
    imovel_id?: SortOrder
    caracteristica_id?: SortOrder
  }

  export type EstadosListRelationFilter = {
    every?: estadosWhereInput
    some?: estadosWhereInput
    none?: estadosWhereInput
  }

  export type estadosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type regioesCountOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
  }

  export type regioesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type regioesMaxOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
  }

  export type regioesMinOrderByAggregateInput = {
    id?: SortOrder
    sigla?: SortOrder
    nome?: SortOrder
  }

  export type regioesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type subtipos_imovelTipo_idNomeCompoundUniqueInput = {
    tipo_id: number
    nome: string
  }

  export type subtipos_imovelCountOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    nome?: SortOrder
    nome_exibicao?: SortOrder
  }

  export type subtipos_imovelAvgOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
  }

  export type subtipos_imovelMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    nome?: SortOrder
    nome_exibicao?: SortOrder
  }

  export type subtipos_imovelMinOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    nome?: SortOrder
    nome_exibicao?: SortOrder
  }

  export type subtipos_imovelSumOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
  }

  export type Subtipos_imovelListRelationFilter = {
    every?: subtipos_imovelWhereInput
    some?: subtipos_imovelWhereInput
    none?: subtipos_imovelWhereInput
  }

  export type subtipos_imovelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipos_imovelCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tipos_imovelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipos_imovelMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tipos_imovelMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tipos_imovelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    tipo?: SortOrder
    data_cadastro?: SortOrder
    data_nascimento?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    tipo?: SortOrder
    data_cadastro?: SortOrder
    data_nascimento?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    tipo?: SortOrder
    data_cadastro?: SortOrder
    data_nascimento?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type imovel_caracteristicasCreateNestedManyWithoutCaracteristicasInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput> | imovel_caracteristicasCreateWithoutCaracteristicasInput[] | imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput | imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput[]
    createMany?: imovel_caracteristicasCreateManyCaracteristicasInputEnvelope
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
  }

  export type imovel_caracteristicasUncheckedCreateNestedManyWithoutCaracteristicasInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput> | imovel_caracteristicasCreateWithoutCaracteristicasInput[] | imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput | imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput[]
    createMany?: imovel_caracteristicasCreateManyCaracteristicasInputEnvelope
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type imovel_caracteristicasUpdateManyWithoutCaracteristicasNestedInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput> | imovel_caracteristicasCreateWithoutCaracteristicasInput[] | imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput | imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput[]
    upsert?: imovel_caracteristicasUpsertWithWhereUniqueWithoutCaracteristicasInput | imovel_caracteristicasUpsertWithWhereUniqueWithoutCaracteristicasInput[]
    createMany?: imovel_caracteristicasCreateManyCaracteristicasInputEnvelope
    set?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    disconnect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    delete?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    update?: imovel_caracteristicasUpdateWithWhereUniqueWithoutCaracteristicasInput | imovel_caracteristicasUpdateWithWhereUniqueWithoutCaracteristicasInput[]
    updateMany?: imovel_caracteristicasUpdateManyWithWhereWithoutCaracteristicasInput | imovel_caracteristicasUpdateManyWithWhereWithoutCaracteristicasInput[]
    deleteMany?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type imovel_caracteristicasUncheckedUpdateManyWithoutCaracteristicasNestedInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput> | imovel_caracteristicasCreateWithoutCaracteristicasInput[] | imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput | imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput[]
    upsert?: imovel_caracteristicasUpsertWithWhereUniqueWithoutCaracteristicasInput | imovel_caracteristicasUpsertWithWhereUniqueWithoutCaracteristicasInput[]
    createMany?: imovel_caracteristicasCreateManyCaracteristicasInputEnvelope
    set?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    disconnect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    delete?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    update?: imovel_caracteristicasUpdateWithWhereUniqueWithoutCaracteristicasInput | imovel_caracteristicasUpdateWithWhereUniqueWithoutCaracteristicasInput[]
    updateMany?: imovel_caracteristicasUpdateManyWithWhereWithoutCaracteristicasInput | imovel_caracteristicasUpdateManyWithWhereWithoutCaracteristicasInput[]
    deleteMany?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
  }

  export type imobiliariasCreateNestedOneWithoutCorretoresInput = {
    create?: XOR<imobiliariasCreateWithoutCorretoresInput, imobiliariasUncheckedCreateWithoutCorretoresInput>
    connectOrCreate?: imobiliariasCreateOrConnectWithoutCorretoresInput
    connect?: imobiliariasWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutCorretoresInput = {
    create?: XOR<usuariosCreateWithoutCorretoresInput, usuariosUncheckedCreateWithoutCorretoresInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCorretoresInput
    connect?: usuariosWhereUniqueInput
  }

  export type imoveisCreateNestedManyWithoutCorretoresInput = {
    create?: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput> | imoveisCreateWithoutCorretoresInput[] | imoveisUncheckedCreateWithoutCorretoresInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutCorretoresInput | imoveisCreateOrConnectWithoutCorretoresInput[]
    createMany?: imoveisCreateManyCorretoresInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type imoveisUncheckedCreateNestedManyWithoutCorretoresInput = {
    create?: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput> | imoveisCreateWithoutCorretoresInput[] | imoveisUncheckedCreateWithoutCorretoresInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutCorretoresInput | imoveisCreateOrConnectWithoutCorretoresInput[]
    createMany?: imoveisCreateManyCorretoresInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type imobiliariasUpdateOneWithoutCorretoresNestedInput = {
    create?: XOR<imobiliariasCreateWithoutCorretoresInput, imobiliariasUncheckedCreateWithoutCorretoresInput>
    connectOrCreate?: imobiliariasCreateOrConnectWithoutCorretoresInput
    upsert?: imobiliariasUpsertWithoutCorretoresInput
    disconnect?: imobiliariasWhereInput | boolean
    delete?: imobiliariasWhereInput | boolean
    connect?: imobiliariasWhereUniqueInput
    update?: XOR<XOR<imobiliariasUpdateToOneWithWhereWithoutCorretoresInput, imobiliariasUpdateWithoutCorretoresInput>, imobiliariasUncheckedUpdateWithoutCorretoresInput>
  }

  export type usuariosUpdateOneRequiredWithoutCorretoresNestedInput = {
    create?: XOR<usuariosCreateWithoutCorretoresInput, usuariosUncheckedCreateWithoutCorretoresInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCorretoresInput
    upsert?: usuariosUpsertWithoutCorretoresInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutCorretoresInput, usuariosUpdateWithoutCorretoresInput>, usuariosUncheckedUpdateWithoutCorretoresInput>
  }

  export type imoveisUpdateManyWithoutCorretoresNestedInput = {
    create?: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput> | imoveisCreateWithoutCorretoresInput[] | imoveisUncheckedCreateWithoutCorretoresInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutCorretoresInput | imoveisCreateOrConnectWithoutCorretoresInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutCorretoresInput | imoveisUpsertWithWhereUniqueWithoutCorretoresInput[]
    createMany?: imoveisCreateManyCorretoresInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutCorretoresInput | imoveisUpdateWithWhereUniqueWithoutCorretoresInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutCorretoresInput | imoveisUpdateManyWithWhereWithoutCorretoresInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type imoveisUncheckedUpdateManyWithoutCorretoresNestedInput = {
    create?: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput> | imoveisCreateWithoutCorretoresInput[] | imoveisUncheckedCreateWithoutCorretoresInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutCorretoresInput | imoveisCreateOrConnectWithoutCorretoresInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutCorretoresInput | imoveisUpsertWithWhereUniqueWithoutCorretoresInput[]
    createMany?: imoveisCreateManyCorretoresInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutCorretoresInput | imoveisUpdateWithWhereUniqueWithoutCorretoresInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutCorretoresInput | imoveisUpdateManyWithWhereWithoutCorretoresInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type regioesCreateNestedOneWithoutEstadosInput = {
    create?: XOR<regioesCreateWithoutEstadosInput, regioesUncheckedCreateWithoutEstadosInput>
    connectOrCreate?: regioesCreateOrConnectWithoutEstadosInput
    connect?: regioesWhereUniqueInput
  }

  export type regioesUpdateOneRequiredWithoutEstadosNestedInput = {
    create?: XOR<regioesCreateWithoutEstadosInput, regioesUncheckedCreateWithoutEstadosInput>
    connectOrCreate?: regioesCreateOrConnectWithoutEstadosInput
    upsert?: regioesUpsertWithoutEstadosInput
    connect?: regioesWhereUniqueInput
    update?: XOR<XOR<regioesUpdateToOneWithWhereWithoutEstadosInput, regioesUpdateWithoutEstadosInput>, regioesUncheckedUpdateWithoutEstadosInput>
  }

  export type imoveisCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<imoveisCreateWithoutFavoritosInput, imoveisUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: imoveisCreateOrConnectWithoutFavoritosInput
    connect?: imoveisWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<usuariosCreateWithoutFavoritosInput, usuariosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutFavoritosInput
    connect?: usuariosWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type imoveisUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<imoveisCreateWithoutFavoritosInput, imoveisUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: imoveisCreateOrConnectWithoutFavoritosInput
    upsert?: imoveisUpsertWithoutFavoritosInput
    connect?: imoveisWhereUniqueInput
    update?: XOR<XOR<imoveisUpdateToOneWithWhereWithoutFavoritosInput, imoveisUpdateWithoutFavoritosInput>, imoveisUncheckedUpdateWithoutFavoritosInput>
  }

  export type usuariosUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<usuariosCreateWithoutFavoritosInput, usuariosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutFavoritosInput
    upsert?: usuariosUpsertWithoutFavoritosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutFavoritosInput, usuariosUpdateWithoutFavoritosInput>, usuariosUncheckedUpdateWithoutFavoritosInput>
  }

  export type corretoresCreateNestedManyWithoutImobiliariasInput = {
    create?: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput> | corretoresCreateWithoutImobiliariasInput[] | corretoresUncheckedCreateWithoutImobiliariasInput[]
    connectOrCreate?: corretoresCreateOrConnectWithoutImobiliariasInput | corretoresCreateOrConnectWithoutImobiliariasInput[]
    createMany?: corretoresCreateManyImobiliariasInputEnvelope
    connect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
  }

  export type corretoresUncheckedCreateNestedManyWithoutImobiliariasInput = {
    create?: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput> | corretoresCreateWithoutImobiliariasInput[] | corretoresUncheckedCreateWithoutImobiliariasInput[]
    connectOrCreate?: corretoresCreateOrConnectWithoutImobiliariasInput | corretoresCreateOrConnectWithoutImobiliariasInput[]
    createMany?: corretoresCreateManyImobiliariasInputEnvelope
    connect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
  }

  export type corretoresUpdateManyWithoutImobiliariasNestedInput = {
    create?: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput> | corretoresCreateWithoutImobiliariasInput[] | corretoresUncheckedCreateWithoutImobiliariasInput[]
    connectOrCreate?: corretoresCreateOrConnectWithoutImobiliariasInput | corretoresCreateOrConnectWithoutImobiliariasInput[]
    upsert?: corretoresUpsertWithWhereUniqueWithoutImobiliariasInput | corretoresUpsertWithWhereUniqueWithoutImobiliariasInput[]
    createMany?: corretoresCreateManyImobiliariasInputEnvelope
    set?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    disconnect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    delete?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    connect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    update?: corretoresUpdateWithWhereUniqueWithoutImobiliariasInput | corretoresUpdateWithWhereUniqueWithoutImobiliariasInput[]
    updateMany?: corretoresUpdateManyWithWhereWithoutImobiliariasInput | corretoresUpdateManyWithWhereWithoutImobiliariasInput[]
    deleteMany?: corretoresScalarWhereInput | corretoresScalarWhereInput[]
  }

  export type corretoresUncheckedUpdateManyWithoutImobiliariasNestedInput = {
    create?: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput> | corretoresCreateWithoutImobiliariasInput[] | corretoresUncheckedCreateWithoutImobiliariasInput[]
    connectOrCreate?: corretoresCreateOrConnectWithoutImobiliariasInput | corretoresCreateOrConnectWithoutImobiliariasInput[]
    upsert?: corretoresUpsertWithWhereUniqueWithoutImobiliariasInput | corretoresUpsertWithWhereUniqueWithoutImobiliariasInput[]
    createMany?: corretoresCreateManyImobiliariasInputEnvelope
    set?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    disconnect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    delete?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    connect?: corretoresWhereUniqueInput | corretoresWhereUniqueInput[]
    update?: corretoresUpdateWithWhereUniqueWithoutImobiliariasInput | corretoresUpdateWithWhereUniqueWithoutImobiliariasInput[]
    updateMany?: corretoresUpdateManyWithWhereWithoutImobiliariasInput | corretoresUpdateManyWithWhereWithoutImobiliariasInput[]
    deleteMany?: corretoresScalarWhereInput | corretoresScalarWhereInput[]
  }

  export type imoveisCreateimagensInput = {
    set: string[]
  }

  export type favoritosCreateNestedManyWithoutImoveisInput = {
    create?: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput> | favoritosCreateWithoutImoveisInput[] | favoritosUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutImoveisInput | favoritosCreateOrConnectWithoutImoveisInput[]
    createMany?: favoritosCreateManyImoveisInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type corretoresCreateNestedOneWithoutImoveisInput = {
    create?: XOR<corretoresCreateWithoutImoveisInput, corretoresUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutImoveisInput
    connect?: corretoresWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutImoveisInput = {
    create?: XOR<usuariosCreateWithoutImoveisInput, usuariosUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutImoveisInput
    connect?: usuariosWhereUniqueInput
  }

  export type subtipos_imovelCreateNestedOneWithoutImoveisInput = {
    create?: XOR<subtipos_imovelCreateWithoutImoveisInput, subtipos_imovelUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutImoveisInput
    connect?: subtipos_imovelWhereUniqueInput
  }

  export type tipos_imovelCreateNestedOneWithoutImoveisInput = {
    create?: XOR<tipos_imovelCreateWithoutImoveisInput, tipos_imovelUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: tipos_imovelCreateOrConnectWithoutImoveisInput
    connect?: tipos_imovelWhereUniqueInput
  }

  export type imovel_caracteristicasCreateNestedManyWithoutImoveisInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput> | imovel_caracteristicasCreateWithoutImoveisInput[] | imovel_caracteristicasUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutImoveisInput | imovel_caracteristicasCreateOrConnectWithoutImoveisInput[]
    createMany?: imovel_caracteristicasCreateManyImoveisInputEnvelope
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
  }

  export type favoritosUncheckedCreateNestedManyWithoutImoveisInput = {
    create?: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput> | favoritosCreateWithoutImoveisInput[] | favoritosUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutImoveisInput | favoritosCreateOrConnectWithoutImoveisInput[]
    createMany?: favoritosCreateManyImoveisInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput> | imovel_caracteristicasCreateWithoutImoveisInput[] | imovel_caracteristicasUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutImoveisInput | imovel_caracteristicasCreateOrConnectWithoutImoveisInput[]
    createMany?: imovel_caracteristicasCreateManyImoveisInputEnvelope
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type imoveisUpdateimagensInput = {
    set?: string[]
    push?: string | string[]
  }

  export type favoritosUpdateManyWithoutImoveisNestedInput = {
    create?: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput> | favoritosCreateWithoutImoveisInput[] | favoritosUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutImoveisInput | favoritosCreateOrConnectWithoutImoveisInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutImoveisInput | favoritosUpsertWithWhereUniqueWithoutImoveisInput[]
    createMany?: favoritosCreateManyImoveisInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutImoveisInput | favoritosUpdateWithWhereUniqueWithoutImoveisInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutImoveisInput | favoritosUpdateManyWithWhereWithoutImoveisInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type corretoresUpdateOneWithoutImoveisNestedInput = {
    create?: XOR<corretoresCreateWithoutImoveisInput, corretoresUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutImoveisInput
    upsert?: corretoresUpsertWithoutImoveisInput
    disconnect?: corretoresWhereInput | boolean
    delete?: corretoresWhereInput | boolean
    connect?: corretoresWhereUniqueInput
    update?: XOR<XOR<corretoresUpdateToOneWithWhereWithoutImoveisInput, corretoresUpdateWithoutImoveisInput>, corretoresUncheckedUpdateWithoutImoveisInput>
  }

  export type usuariosUpdateOneWithoutImoveisNestedInput = {
    create?: XOR<usuariosCreateWithoutImoveisInput, usuariosUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutImoveisInput
    upsert?: usuariosUpsertWithoutImoveisInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutImoveisInput, usuariosUpdateWithoutImoveisInput>, usuariosUncheckedUpdateWithoutImoveisInput>
  }

  export type subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput = {
    create?: XOR<subtipos_imovelCreateWithoutImoveisInput, subtipos_imovelUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutImoveisInput
    upsert?: subtipos_imovelUpsertWithoutImoveisInput
    connect?: subtipos_imovelWhereUniqueInput
    update?: XOR<XOR<subtipos_imovelUpdateToOneWithWhereWithoutImoveisInput, subtipos_imovelUpdateWithoutImoveisInput>, subtipos_imovelUncheckedUpdateWithoutImoveisInput>
  }

  export type tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput = {
    create?: XOR<tipos_imovelCreateWithoutImoveisInput, tipos_imovelUncheckedCreateWithoutImoveisInput>
    connectOrCreate?: tipos_imovelCreateOrConnectWithoutImoveisInput
    upsert?: tipos_imovelUpsertWithoutImoveisInput
    connect?: tipos_imovelWhereUniqueInput
    update?: XOR<XOR<tipos_imovelUpdateToOneWithWhereWithoutImoveisInput, tipos_imovelUpdateWithoutImoveisInput>, tipos_imovelUncheckedUpdateWithoutImoveisInput>
  }

  export type imovel_caracteristicasUpdateManyWithoutImoveisNestedInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput> | imovel_caracteristicasCreateWithoutImoveisInput[] | imovel_caracteristicasUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutImoveisInput | imovel_caracteristicasCreateOrConnectWithoutImoveisInput[]
    upsert?: imovel_caracteristicasUpsertWithWhereUniqueWithoutImoveisInput | imovel_caracteristicasUpsertWithWhereUniqueWithoutImoveisInput[]
    createMany?: imovel_caracteristicasCreateManyImoveisInputEnvelope
    set?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    disconnect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    delete?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    update?: imovel_caracteristicasUpdateWithWhereUniqueWithoutImoveisInput | imovel_caracteristicasUpdateWithWhereUniqueWithoutImoveisInput[]
    updateMany?: imovel_caracteristicasUpdateManyWithWhereWithoutImoveisInput | imovel_caracteristicasUpdateManyWithWhereWithoutImoveisInput[]
    deleteMany?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
  }

  export type favoritosUncheckedUpdateManyWithoutImoveisNestedInput = {
    create?: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput> | favoritosCreateWithoutImoveisInput[] | favoritosUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutImoveisInput | favoritosCreateOrConnectWithoutImoveisInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutImoveisInput | favoritosUpsertWithWhereUniqueWithoutImoveisInput[]
    createMany?: favoritosCreateManyImoveisInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutImoveisInput | favoritosUpdateWithWhereUniqueWithoutImoveisInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutImoveisInput | favoritosUpdateManyWithWhereWithoutImoveisInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput = {
    create?: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput> | imovel_caracteristicasCreateWithoutImoveisInput[] | imovel_caracteristicasUncheckedCreateWithoutImoveisInput[]
    connectOrCreate?: imovel_caracteristicasCreateOrConnectWithoutImoveisInput | imovel_caracteristicasCreateOrConnectWithoutImoveisInput[]
    upsert?: imovel_caracteristicasUpsertWithWhereUniqueWithoutImoveisInput | imovel_caracteristicasUpsertWithWhereUniqueWithoutImoveisInput[]
    createMany?: imovel_caracteristicasCreateManyImoveisInputEnvelope
    set?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    disconnect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    delete?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    connect?: imovel_caracteristicasWhereUniqueInput | imovel_caracteristicasWhereUniqueInput[]
    update?: imovel_caracteristicasUpdateWithWhereUniqueWithoutImoveisInput | imovel_caracteristicasUpdateWithWhereUniqueWithoutImoveisInput[]
    updateMany?: imovel_caracteristicasUpdateManyWithWhereWithoutImoveisInput | imovel_caracteristicasUpdateManyWithWhereWithoutImoveisInput[]
    deleteMany?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
  }

  export type caracteristicasCreateNestedOneWithoutImovel_caracteristicasInput = {
    create?: XOR<caracteristicasCreateWithoutImovel_caracteristicasInput, caracteristicasUncheckedCreateWithoutImovel_caracteristicasInput>
    connectOrCreate?: caracteristicasCreateOrConnectWithoutImovel_caracteristicasInput
    connect?: caracteristicasWhereUniqueInput
  }

  export type imoveisCreateNestedOneWithoutImovel_caracteristicasInput = {
    create?: XOR<imoveisCreateWithoutImovel_caracteristicasInput, imoveisUncheckedCreateWithoutImovel_caracteristicasInput>
    connectOrCreate?: imoveisCreateOrConnectWithoutImovel_caracteristicasInput
    connect?: imoveisWhereUniqueInput
  }

  export type caracteristicasUpdateOneRequiredWithoutImovel_caracteristicasNestedInput = {
    create?: XOR<caracteristicasCreateWithoutImovel_caracteristicasInput, caracteristicasUncheckedCreateWithoutImovel_caracteristicasInput>
    connectOrCreate?: caracteristicasCreateOrConnectWithoutImovel_caracteristicasInput
    upsert?: caracteristicasUpsertWithoutImovel_caracteristicasInput
    connect?: caracteristicasWhereUniqueInput
    update?: XOR<XOR<caracteristicasUpdateToOneWithWhereWithoutImovel_caracteristicasInput, caracteristicasUpdateWithoutImovel_caracteristicasInput>, caracteristicasUncheckedUpdateWithoutImovel_caracteristicasInput>
  }

  export type imoveisUpdateOneRequiredWithoutImovel_caracteristicasNestedInput = {
    create?: XOR<imoveisCreateWithoutImovel_caracteristicasInput, imoveisUncheckedCreateWithoutImovel_caracteristicasInput>
    connectOrCreate?: imoveisCreateOrConnectWithoutImovel_caracteristicasInput
    upsert?: imoveisUpsertWithoutImovel_caracteristicasInput
    connect?: imoveisWhereUniqueInput
    update?: XOR<XOR<imoveisUpdateToOneWithWhereWithoutImovel_caracteristicasInput, imoveisUpdateWithoutImovel_caracteristicasInput>, imoveisUncheckedUpdateWithoutImovel_caracteristicasInput>
  }

  export type estadosCreateNestedManyWithoutRegioesInput = {
    create?: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput> | estadosCreateWithoutRegioesInput[] | estadosUncheckedCreateWithoutRegioesInput[]
    connectOrCreate?: estadosCreateOrConnectWithoutRegioesInput | estadosCreateOrConnectWithoutRegioesInput[]
    createMany?: estadosCreateManyRegioesInputEnvelope
    connect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
  }

  export type estadosUncheckedCreateNestedManyWithoutRegioesInput = {
    create?: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput> | estadosCreateWithoutRegioesInput[] | estadosUncheckedCreateWithoutRegioesInput[]
    connectOrCreate?: estadosCreateOrConnectWithoutRegioesInput | estadosCreateOrConnectWithoutRegioesInput[]
    createMany?: estadosCreateManyRegioesInputEnvelope
    connect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
  }

  export type estadosUpdateManyWithoutRegioesNestedInput = {
    create?: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput> | estadosCreateWithoutRegioesInput[] | estadosUncheckedCreateWithoutRegioesInput[]
    connectOrCreate?: estadosCreateOrConnectWithoutRegioesInput | estadosCreateOrConnectWithoutRegioesInput[]
    upsert?: estadosUpsertWithWhereUniqueWithoutRegioesInput | estadosUpsertWithWhereUniqueWithoutRegioesInput[]
    createMany?: estadosCreateManyRegioesInputEnvelope
    set?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    disconnect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    delete?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    connect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    update?: estadosUpdateWithWhereUniqueWithoutRegioesInput | estadosUpdateWithWhereUniqueWithoutRegioesInput[]
    updateMany?: estadosUpdateManyWithWhereWithoutRegioesInput | estadosUpdateManyWithWhereWithoutRegioesInput[]
    deleteMany?: estadosScalarWhereInput | estadosScalarWhereInput[]
  }

  export type estadosUncheckedUpdateManyWithoutRegioesNestedInput = {
    create?: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput> | estadosCreateWithoutRegioesInput[] | estadosUncheckedCreateWithoutRegioesInput[]
    connectOrCreate?: estadosCreateOrConnectWithoutRegioesInput | estadosCreateOrConnectWithoutRegioesInput[]
    upsert?: estadosUpsertWithWhereUniqueWithoutRegioesInput | estadosUpsertWithWhereUniqueWithoutRegioesInput[]
    createMany?: estadosCreateManyRegioesInputEnvelope
    set?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    disconnect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    delete?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    connect?: estadosWhereUniqueInput | estadosWhereUniqueInput[]
    update?: estadosUpdateWithWhereUniqueWithoutRegioesInput | estadosUpdateWithWhereUniqueWithoutRegioesInput[]
    updateMany?: estadosUpdateManyWithWhereWithoutRegioesInput | estadosUpdateManyWithWhereWithoutRegioesInput[]
    deleteMany?: estadosScalarWhereInput | estadosScalarWhereInput[]
  }

  export type imoveisCreateNestedManyWithoutSubtipos_imovelInput = {
    create?: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput> | imoveisCreateWithoutSubtipos_imovelInput[] | imoveisUncheckedCreateWithoutSubtipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutSubtipos_imovelInput | imoveisCreateOrConnectWithoutSubtipos_imovelInput[]
    createMany?: imoveisCreateManySubtipos_imovelInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type tipos_imovelCreateNestedOneWithoutSubtipos_imovelInput = {
    create?: XOR<tipos_imovelCreateWithoutSubtipos_imovelInput, tipos_imovelUncheckedCreateWithoutSubtipos_imovelInput>
    connectOrCreate?: tipos_imovelCreateOrConnectWithoutSubtipos_imovelInput
    connect?: tipos_imovelWhereUniqueInput
  }

  export type imoveisUncheckedCreateNestedManyWithoutSubtipos_imovelInput = {
    create?: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput> | imoveisCreateWithoutSubtipos_imovelInput[] | imoveisUncheckedCreateWithoutSubtipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutSubtipos_imovelInput | imoveisCreateOrConnectWithoutSubtipos_imovelInput[]
    createMany?: imoveisCreateManySubtipos_imovelInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type imoveisUpdateManyWithoutSubtipos_imovelNestedInput = {
    create?: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput> | imoveisCreateWithoutSubtipos_imovelInput[] | imoveisUncheckedCreateWithoutSubtipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutSubtipos_imovelInput | imoveisCreateOrConnectWithoutSubtipos_imovelInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutSubtipos_imovelInput | imoveisUpsertWithWhereUniqueWithoutSubtipos_imovelInput[]
    createMany?: imoveisCreateManySubtipos_imovelInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutSubtipos_imovelInput | imoveisUpdateWithWhereUniqueWithoutSubtipos_imovelInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutSubtipos_imovelInput | imoveisUpdateManyWithWhereWithoutSubtipos_imovelInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type tipos_imovelUpdateOneRequiredWithoutSubtipos_imovelNestedInput = {
    create?: XOR<tipos_imovelCreateWithoutSubtipos_imovelInput, tipos_imovelUncheckedCreateWithoutSubtipos_imovelInput>
    connectOrCreate?: tipos_imovelCreateOrConnectWithoutSubtipos_imovelInput
    upsert?: tipos_imovelUpsertWithoutSubtipos_imovelInput
    connect?: tipos_imovelWhereUniqueInput
    update?: XOR<XOR<tipos_imovelUpdateToOneWithWhereWithoutSubtipos_imovelInput, tipos_imovelUpdateWithoutSubtipos_imovelInput>, tipos_imovelUncheckedUpdateWithoutSubtipos_imovelInput>
  }

  export type imoveisUncheckedUpdateManyWithoutSubtipos_imovelNestedInput = {
    create?: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput> | imoveisCreateWithoutSubtipos_imovelInput[] | imoveisUncheckedCreateWithoutSubtipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutSubtipos_imovelInput | imoveisCreateOrConnectWithoutSubtipos_imovelInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutSubtipos_imovelInput | imoveisUpsertWithWhereUniqueWithoutSubtipos_imovelInput[]
    createMany?: imoveisCreateManySubtipos_imovelInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutSubtipos_imovelInput | imoveisUpdateWithWhereUniqueWithoutSubtipos_imovelInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutSubtipos_imovelInput | imoveisUpdateManyWithWhereWithoutSubtipos_imovelInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type imoveisCreateNestedManyWithoutTipos_imovelInput = {
    create?: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput> | imoveisCreateWithoutTipos_imovelInput[] | imoveisUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutTipos_imovelInput | imoveisCreateOrConnectWithoutTipos_imovelInput[]
    createMany?: imoveisCreateManyTipos_imovelInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type subtipos_imovelCreateNestedManyWithoutTipos_imovelInput = {
    create?: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput> | subtipos_imovelCreateWithoutTipos_imovelInput[] | subtipos_imovelUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutTipos_imovelInput | subtipos_imovelCreateOrConnectWithoutTipos_imovelInput[]
    createMany?: subtipos_imovelCreateManyTipos_imovelInputEnvelope
    connect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
  }

  export type imoveisUncheckedCreateNestedManyWithoutTipos_imovelInput = {
    create?: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput> | imoveisCreateWithoutTipos_imovelInput[] | imoveisUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutTipos_imovelInput | imoveisCreateOrConnectWithoutTipos_imovelInput[]
    createMany?: imoveisCreateManyTipos_imovelInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type subtipos_imovelUncheckedCreateNestedManyWithoutTipos_imovelInput = {
    create?: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput> | subtipos_imovelCreateWithoutTipos_imovelInput[] | subtipos_imovelUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutTipos_imovelInput | subtipos_imovelCreateOrConnectWithoutTipos_imovelInput[]
    createMany?: subtipos_imovelCreateManyTipos_imovelInputEnvelope
    connect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
  }

  export type imoveisUpdateManyWithoutTipos_imovelNestedInput = {
    create?: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput> | imoveisCreateWithoutTipos_imovelInput[] | imoveisUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutTipos_imovelInput | imoveisCreateOrConnectWithoutTipos_imovelInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutTipos_imovelInput | imoveisUpsertWithWhereUniqueWithoutTipos_imovelInput[]
    createMany?: imoveisCreateManyTipos_imovelInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutTipos_imovelInput | imoveisUpdateWithWhereUniqueWithoutTipos_imovelInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutTipos_imovelInput | imoveisUpdateManyWithWhereWithoutTipos_imovelInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type subtipos_imovelUpdateManyWithoutTipos_imovelNestedInput = {
    create?: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput> | subtipos_imovelCreateWithoutTipos_imovelInput[] | subtipos_imovelUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutTipos_imovelInput | subtipos_imovelCreateOrConnectWithoutTipos_imovelInput[]
    upsert?: subtipos_imovelUpsertWithWhereUniqueWithoutTipos_imovelInput | subtipos_imovelUpsertWithWhereUniqueWithoutTipos_imovelInput[]
    createMany?: subtipos_imovelCreateManyTipos_imovelInputEnvelope
    set?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    disconnect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    delete?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    connect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    update?: subtipos_imovelUpdateWithWhereUniqueWithoutTipos_imovelInput | subtipos_imovelUpdateWithWhereUniqueWithoutTipos_imovelInput[]
    updateMany?: subtipos_imovelUpdateManyWithWhereWithoutTipos_imovelInput | subtipos_imovelUpdateManyWithWhereWithoutTipos_imovelInput[]
    deleteMany?: subtipos_imovelScalarWhereInput | subtipos_imovelScalarWhereInput[]
  }

  export type imoveisUncheckedUpdateManyWithoutTipos_imovelNestedInput = {
    create?: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput> | imoveisCreateWithoutTipos_imovelInput[] | imoveisUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutTipos_imovelInput | imoveisCreateOrConnectWithoutTipos_imovelInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutTipos_imovelInput | imoveisUpsertWithWhereUniqueWithoutTipos_imovelInput[]
    createMany?: imoveisCreateManyTipos_imovelInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutTipos_imovelInput | imoveisUpdateWithWhereUniqueWithoutTipos_imovelInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutTipos_imovelInput | imoveisUpdateManyWithWhereWithoutTipos_imovelInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type subtipos_imovelUncheckedUpdateManyWithoutTipos_imovelNestedInput = {
    create?: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput> | subtipos_imovelCreateWithoutTipos_imovelInput[] | subtipos_imovelUncheckedCreateWithoutTipos_imovelInput[]
    connectOrCreate?: subtipos_imovelCreateOrConnectWithoutTipos_imovelInput | subtipos_imovelCreateOrConnectWithoutTipos_imovelInput[]
    upsert?: subtipos_imovelUpsertWithWhereUniqueWithoutTipos_imovelInput | subtipos_imovelUpsertWithWhereUniqueWithoutTipos_imovelInput[]
    createMany?: subtipos_imovelCreateManyTipos_imovelInputEnvelope
    set?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    disconnect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    delete?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    connect?: subtipos_imovelWhereUniqueInput | subtipos_imovelWhereUniqueInput[]
    update?: subtipos_imovelUpdateWithWhereUniqueWithoutTipos_imovelInput | subtipos_imovelUpdateWithWhereUniqueWithoutTipos_imovelInput[]
    updateMany?: subtipos_imovelUpdateManyWithWhereWithoutTipos_imovelInput | subtipos_imovelUpdateManyWithWhereWithoutTipos_imovelInput[]
    deleteMany?: subtipos_imovelScalarWhereInput | subtipos_imovelScalarWhereInput[]
  }

  export type corretoresCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutUsuariosInput
    connect?: corretoresWhereUniqueInput
  }

  export type favoritosCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput> | favoritosCreateWithoutUsuariosInput[] | favoritosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutUsuariosInput | favoritosCreateOrConnectWithoutUsuariosInput[]
    createMany?: favoritosCreateManyUsuariosInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type imoveisCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput> | imoveisCreateWithoutUsuariosInput[] | imoveisUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutUsuariosInput | imoveisCreateOrConnectWithoutUsuariosInput[]
    createMany?: imoveisCreateManyUsuariosInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type corretoresUncheckedCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutUsuariosInput
    connect?: corretoresWhereUniqueInput
  }

  export type favoritosUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput> | favoritosCreateWithoutUsuariosInput[] | favoritosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutUsuariosInput | favoritosCreateOrConnectWithoutUsuariosInput[]
    createMany?: favoritosCreateManyUsuariosInputEnvelope
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
  }

  export type imoveisUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput> | imoveisCreateWithoutUsuariosInput[] | imoveisUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutUsuariosInput | imoveisCreateOrConnectWithoutUsuariosInput[]
    createMany?: imoveisCreateManyUsuariosInputEnvelope
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
  }

  export type corretoresUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutUsuariosInput
    upsert?: corretoresUpsertWithoutUsuariosInput
    disconnect?: corretoresWhereInput | boolean
    delete?: corretoresWhereInput | boolean
    connect?: corretoresWhereUniqueInput
    update?: XOR<XOR<corretoresUpdateToOneWithWhereWithoutUsuariosInput, corretoresUpdateWithoutUsuariosInput>, corretoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type favoritosUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput> | favoritosCreateWithoutUsuariosInput[] | favoritosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutUsuariosInput | favoritosCreateOrConnectWithoutUsuariosInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutUsuariosInput | favoritosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: favoritosCreateManyUsuariosInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutUsuariosInput | favoritosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutUsuariosInput | favoritosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type imoveisUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput> | imoveisCreateWithoutUsuariosInput[] | imoveisUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutUsuariosInput | imoveisCreateOrConnectWithoutUsuariosInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutUsuariosInput | imoveisUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: imoveisCreateManyUsuariosInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutUsuariosInput | imoveisUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutUsuariosInput | imoveisUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type corretoresUncheckedUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: corretoresCreateOrConnectWithoutUsuariosInput
    upsert?: corretoresUpsertWithoutUsuariosInput
    disconnect?: corretoresWhereInput | boolean
    delete?: corretoresWhereInput | boolean
    connect?: corretoresWhereUniqueInput
    update?: XOR<XOR<corretoresUpdateToOneWithWhereWithoutUsuariosInput, corretoresUpdateWithoutUsuariosInput>, corretoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type favoritosUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput> | favoritosCreateWithoutUsuariosInput[] | favoritosUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: favoritosCreateOrConnectWithoutUsuariosInput | favoritosCreateOrConnectWithoutUsuariosInput[]
    upsert?: favoritosUpsertWithWhereUniqueWithoutUsuariosInput | favoritosUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: favoritosCreateManyUsuariosInputEnvelope
    set?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    disconnect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    delete?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    connect?: favoritosWhereUniqueInput | favoritosWhereUniqueInput[]
    update?: favoritosUpdateWithWhereUniqueWithoutUsuariosInput | favoritosUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: favoritosUpdateManyWithWhereWithoutUsuariosInput | favoritosUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
  }

  export type imoveisUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput> | imoveisCreateWithoutUsuariosInput[] | imoveisUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: imoveisCreateOrConnectWithoutUsuariosInput | imoveisCreateOrConnectWithoutUsuariosInput[]
    upsert?: imoveisUpsertWithWhereUniqueWithoutUsuariosInput | imoveisUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: imoveisCreateManyUsuariosInputEnvelope
    set?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    disconnect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    delete?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    connect?: imoveisWhereUniqueInput | imoveisWhereUniqueInput[]
    update?: imoveisUpdateWithWhereUniqueWithoutUsuariosInput | imoveisUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: imoveisUpdateManyWithWhereWithoutUsuariosInput | imoveisUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type imovel_caracteristicasCreateWithoutCaracteristicasInput = {
    imoveis: imoveisCreateNestedOneWithoutImovel_caracteristicasInput
  }

  export type imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput = {
    id?: number
    imovel_id: number
  }

  export type imovel_caracteristicasCreateOrConnectWithoutCaracteristicasInput = {
    where: imovel_caracteristicasWhereUniqueInput
    create: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput>
  }

  export type imovel_caracteristicasCreateManyCaracteristicasInputEnvelope = {
    data: imovel_caracteristicasCreateManyCaracteristicasInput | imovel_caracteristicasCreateManyCaracteristicasInput[]
    skipDuplicates?: boolean
  }

  export type imovel_caracteristicasUpsertWithWhereUniqueWithoutCaracteristicasInput = {
    where: imovel_caracteristicasWhereUniqueInput
    update: XOR<imovel_caracteristicasUpdateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedUpdateWithoutCaracteristicasInput>
    create: XOR<imovel_caracteristicasCreateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedCreateWithoutCaracteristicasInput>
  }

  export type imovel_caracteristicasUpdateWithWhereUniqueWithoutCaracteristicasInput = {
    where: imovel_caracteristicasWhereUniqueInput
    data: XOR<imovel_caracteristicasUpdateWithoutCaracteristicasInput, imovel_caracteristicasUncheckedUpdateWithoutCaracteristicasInput>
  }

  export type imovel_caracteristicasUpdateManyWithWhereWithoutCaracteristicasInput = {
    where: imovel_caracteristicasScalarWhereInput
    data: XOR<imovel_caracteristicasUpdateManyMutationInput, imovel_caracteristicasUncheckedUpdateManyWithoutCaracteristicasInput>
  }

  export type imovel_caracteristicasScalarWhereInput = {
    AND?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
    OR?: imovel_caracteristicasScalarWhereInput[]
    NOT?: imovel_caracteristicasScalarWhereInput | imovel_caracteristicasScalarWhereInput[]
    id?: IntFilter<"imovel_caracteristicas"> | number
    imovel_id?: IntFilter<"imovel_caracteristicas"> | number
    caracteristica_id?: IntFilter<"imovel_caracteristicas"> | number
  }

  export type imobiliariasCreateWithoutCorretoresInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro?: Date | string | null
  }

  export type imobiliariasUncheckedCreateWithoutCorretoresInput = {
    id?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    endereco: string
    data_cadastro?: Date | string | null
  }

  export type imobiliariasCreateOrConnectWithoutCorretoresInput = {
    where: imobiliariasWhereUniqueInput
    create: XOR<imobiliariasCreateWithoutCorretoresInput, imobiliariasUncheckedCreateWithoutCorretoresInput>
  }

  export type usuariosCreateWithoutCorretoresInput = {
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    favoritos?: favoritosCreateNestedManyWithoutUsuariosInput
    imoveis?: imoveisCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutCorretoresInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutUsuariosInput
    imoveis?: imoveisUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutCorretoresInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutCorretoresInput, usuariosUncheckedCreateWithoutCorretoresInput>
  }

  export type imoveisCreateWithoutCorretoresInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutCorretoresInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutCorretoresInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput>
  }

  export type imoveisCreateManyCorretoresInputEnvelope = {
    data: imoveisCreateManyCorretoresInput | imoveisCreateManyCorretoresInput[]
    skipDuplicates?: boolean
  }

  export type imobiliariasUpsertWithoutCorretoresInput = {
    update: XOR<imobiliariasUpdateWithoutCorretoresInput, imobiliariasUncheckedUpdateWithoutCorretoresInput>
    create: XOR<imobiliariasCreateWithoutCorretoresInput, imobiliariasUncheckedCreateWithoutCorretoresInput>
    where?: imobiliariasWhereInput
  }

  export type imobiliariasUpdateToOneWithWhereWithoutCorretoresInput = {
    where?: imobiliariasWhereInput
    data: XOR<imobiliariasUpdateWithoutCorretoresInput, imobiliariasUncheckedUpdateWithoutCorretoresInput>
  }

  export type imobiliariasUpdateWithoutCorretoresInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imobiliariasUncheckedUpdateWithoutCorretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUpsertWithoutCorretoresInput = {
    update: XOR<usuariosUpdateWithoutCorretoresInput, usuariosUncheckedUpdateWithoutCorretoresInput>
    create: XOR<usuariosCreateWithoutCorretoresInput, usuariosUncheckedCreateWithoutCorretoresInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutCorretoresInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutCorretoresInput, usuariosUncheckedUpdateWithoutCorretoresInput>
  }

  export type usuariosUpdateWithoutCorretoresInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favoritos?: favoritosUpdateManyWithoutUsuariosNestedInput
    imoveis?: imoveisUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutCorretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutUsuariosNestedInput
    imoveis?: imoveisUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type imoveisUpsertWithWhereUniqueWithoutCorretoresInput = {
    where: imoveisWhereUniqueInput
    update: XOR<imoveisUpdateWithoutCorretoresInput, imoveisUncheckedUpdateWithoutCorretoresInput>
    create: XOR<imoveisCreateWithoutCorretoresInput, imoveisUncheckedCreateWithoutCorretoresInput>
  }

  export type imoveisUpdateWithWhereUniqueWithoutCorretoresInput = {
    where: imoveisWhereUniqueInput
    data: XOR<imoveisUpdateWithoutCorretoresInput, imoveisUncheckedUpdateWithoutCorretoresInput>
  }

  export type imoveisUpdateManyWithWhereWithoutCorretoresInput = {
    where: imoveisScalarWhereInput
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyWithoutCorretoresInput>
  }

  export type imoveisScalarWhereInput = {
    AND?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
    OR?: imoveisScalarWhereInput[]
    NOT?: imoveisScalarWhereInput | imoveisScalarWhereInput[]
    id?: IntFilter<"imoveis"> | number
    titulo?: StringFilter<"imoveis"> | string
    descricao?: StringNullableFilter<"imoveis"> | string | null
    subtipo_id?: IntFilter<"imoveis"> | number
    tipoimovel_id?: IntFilter<"imoveis"> | number
    preco?: DecimalFilter<"imoveis"> | Decimal | DecimalJsLike | number | string
    area?: IntNullableFilter<"imoveis"> | number | null
    quartos?: IntNullableFilter<"imoveis"> | number | null
    banheiros?: IntNullableFilter<"imoveis"> | number | null
    vagas_garagem?: IntNullableFilter<"imoveis"> | number | null
    endereco?: StringFilter<"imoveis"> | string
    numero?: StringNullableFilter<"imoveis"> | string | null
    complemento?: StringNullableFilter<"imoveis"> | string | null
    bairro?: StringFilter<"imoveis"> | string
    cidade?: StringFilter<"imoveis"> | string
    estado?: StringFilter<"imoveis"> | string
    cep?: StringNullableFilter<"imoveis"> | string | null
    latitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    data_atualizacao?: DateTimeNullableFilter<"imoveis"> | Date | string | null
    disponivel?: BoolNullableFilter<"imoveis"> | boolean | null
    destaque?: BoolNullableFilter<"imoveis"> | boolean | null
    imagens?: StringNullableListFilter<"imoveis">
    id_proprietario?: IntNullableFilter<"imoveis"> | number | null
    id_corretor?: IntNullableFilter<"imoveis"> | number | null
    area_util_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    salas?: IntNullableFilter<"imoveis"> | number | null
    andar?: IntNullableFilter<"imoveis"> | number | null
    area_privativa?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    area_comum?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    suites?: IntNullableFilter<"imoveis"> | number | null
    mobiliado?: BoolNullableFilter<"imoveis"> | boolean | null
    aceita_animais?: BoolNullableFilter<"imoveis"> | boolean | null
    views?: IntNullableFilter<"imoveis"> | number | null
    estado_id?: IntNullableFilter<"imoveis"> | number | null
    valor_iptu?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: DecimalNullableFilter<"imoveis"> | Decimal | DecimalJsLike | number | string | null
  }

  export type regioesCreateWithoutEstadosInput = {
    sigla: string
    nome: string
  }

  export type regioesUncheckedCreateWithoutEstadosInput = {
    id?: number
    sigla: string
    nome: string
  }

  export type regioesCreateOrConnectWithoutEstadosInput = {
    where: regioesWhereUniqueInput
    create: XOR<regioesCreateWithoutEstadosInput, regioesUncheckedCreateWithoutEstadosInput>
  }

  export type regioesUpsertWithoutEstadosInput = {
    update: XOR<regioesUpdateWithoutEstadosInput, regioesUncheckedUpdateWithoutEstadosInput>
    create: XOR<regioesCreateWithoutEstadosInput, regioesUncheckedCreateWithoutEstadosInput>
    where?: regioesWhereInput
  }

  export type regioesUpdateToOneWithWhereWithoutEstadosInput = {
    where?: regioesWhereInput
    data: XOR<regioesUpdateWithoutEstadosInput, regioesUncheckedUpdateWithoutEstadosInput>
  }

  export type regioesUpdateWithoutEstadosInput = {
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type regioesUncheckedUpdateWithoutEstadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type imoveisCreateWithoutFavoritosInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutFavoritosInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutFavoritosInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutFavoritosInput, imoveisUncheckedCreateWithoutFavoritosInput>
  }

  export type usuariosCreateWithoutFavoritosInput = {
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresCreateNestedOneWithoutUsuariosInput
    imoveis?: imoveisCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutFavoritosInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresUncheckedCreateNestedOneWithoutUsuariosInput
    imoveis?: imoveisUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutFavoritosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutFavoritosInput, usuariosUncheckedCreateWithoutFavoritosInput>
  }

  export type imoveisUpsertWithoutFavoritosInput = {
    update: XOR<imoveisUpdateWithoutFavoritosInput, imoveisUncheckedUpdateWithoutFavoritosInput>
    create: XOR<imoveisCreateWithoutFavoritosInput, imoveisUncheckedCreateWithoutFavoritosInput>
    where?: imoveisWhereInput
  }

  export type imoveisUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: imoveisWhereInput
    data: XOR<imoveisUpdateWithoutFavoritosInput, imoveisUncheckedUpdateWithoutFavoritosInput>
  }

  export type imoveisUpdateWithoutFavoritosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type usuariosUpsertWithoutFavoritosInput = {
    update: XOR<usuariosUpdateWithoutFavoritosInput, usuariosUncheckedUpdateWithoutFavoritosInput>
    create: XOR<usuariosCreateWithoutFavoritosInput, usuariosUncheckedCreateWithoutFavoritosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutFavoritosInput, usuariosUncheckedUpdateWithoutFavoritosInput>
  }

  export type usuariosUpdateWithoutFavoritosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUpdateOneWithoutUsuariosNestedInput
    imoveis?: imoveisUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUncheckedUpdateOneWithoutUsuariosNestedInput
    imoveis?: imoveisUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type corretoresCreateWithoutImobiliariasInput = {
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    usuarios: usuariosCreateNestedOneWithoutCorretoresInput
    imoveis?: imoveisCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresUncheckedCreateWithoutImobiliariasInput = {
    id?: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    imoveis?: imoveisUncheckedCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresCreateOrConnectWithoutImobiliariasInput = {
    where: corretoresWhereUniqueInput
    create: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput>
  }

  export type corretoresCreateManyImobiliariasInputEnvelope = {
    data: corretoresCreateManyImobiliariasInput | corretoresCreateManyImobiliariasInput[]
    skipDuplicates?: boolean
  }

  export type corretoresUpsertWithWhereUniqueWithoutImobiliariasInput = {
    where: corretoresWhereUniqueInput
    update: XOR<corretoresUpdateWithoutImobiliariasInput, corretoresUncheckedUpdateWithoutImobiliariasInput>
    create: XOR<corretoresCreateWithoutImobiliariasInput, corretoresUncheckedCreateWithoutImobiliariasInput>
  }

  export type corretoresUpdateWithWhereUniqueWithoutImobiliariasInput = {
    where: corretoresWhereUniqueInput
    data: XOR<corretoresUpdateWithoutImobiliariasInput, corretoresUncheckedUpdateWithoutImobiliariasInput>
  }

  export type corretoresUpdateManyWithWhereWithoutImobiliariasInput = {
    where: corretoresScalarWhereInput
    data: XOR<corretoresUpdateManyMutationInput, corretoresUncheckedUpdateManyWithoutImobiliariasInput>
  }

  export type corretoresScalarWhereInput = {
    AND?: corretoresScalarWhereInput | corretoresScalarWhereInput[]
    OR?: corretoresScalarWhereInput[]
    NOT?: corretoresScalarWhereInput | corretoresScalarWhereInput[]
    id?: IntFilter<"corretores"> | number
    usuario_id?: IntFilter<"corretores"> | number
    creci?: StringFilter<"corretores"> | string
    creci_uf?: StringFilter<"corretores"> | string
    data_registro?: DateTimeFilter<"corretores"> | Date | string
    bio?: StringNullableFilter<"corretores"> | string | null
    ativo?: BoolNullableFilter<"corretores"> | boolean | null
    id_imobiliaria?: IntNullableFilter<"corretores"> | number | null
  }

  export type favoritosCreateWithoutImoveisInput = {
    data_cadastro?: Date | string | null
    usuarios: usuariosCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateWithoutImoveisInput = {
    id?: number
    usuario_id: number
    data_cadastro?: Date | string | null
  }

  export type favoritosCreateOrConnectWithoutImoveisInput = {
    where: favoritosWhereUniqueInput
    create: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput>
  }

  export type favoritosCreateManyImoveisInputEnvelope = {
    data: favoritosCreateManyImoveisInput | favoritosCreateManyImoveisInput[]
    skipDuplicates?: boolean
  }

  export type corretoresCreateWithoutImoveisInput = {
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    imobiliarias?: imobiliariasCreateNestedOneWithoutCorretoresInput
    usuarios: usuariosCreateNestedOneWithoutCorretoresInput
  }

  export type corretoresUncheckedCreateWithoutImoveisInput = {
    id?: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    id_imobiliaria?: number | null
  }

  export type corretoresCreateOrConnectWithoutImoveisInput = {
    where: corretoresWhereUniqueInput
    create: XOR<corretoresCreateWithoutImoveisInput, corretoresUncheckedCreateWithoutImoveisInput>
  }

  export type usuariosCreateWithoutImoveisInput = {
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresCreateNestedOneWithoutUsuariosInput
    favoritos?: favoritosCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutImoveisInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    telefone: string
    cpf: string
    tipo: string
    data_cadastro?: Date | string | null
    data_nascimento?: Date | string | null
    corretores?: corretoresUncheckedCreateNestedOneWithoutUsuariosInput
    favoritos?: favoritosUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutImoveisInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutImoveisInput, usuariosUncheckedCreateWithoutImoveisInput>
  }

  export type subtipos_imovelCreateWithoutImoveisInput = {
    nome: string
    nome_exibicao: string
    tipos_imovel: tipos_imovelCreateNestedOneWithoutSubtipos_imovelInput
  }

  export type subtipos_imovelUncheckedCreateWithoutImoveisInput = {
    id?: number
    tipo_id: number
    nome: string
    nome_exibicao: string
  }

  export type subtipos_imovelCreateOrConnectWithoutImoveisInput = {
    where: subtipos_imovelWhereUniqueInput
    create: XOR<subtipos_imovelCreateWithoutImoveisInput, subtipos_imovelUncheckedCreateWithoutImoveisInput>
  }

  export type tipos_imovelCreateWithoutImoveisInput = {
    nome: string
    subtipos_imovel?: subtipos_imovelCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelUncheckedCreateWithoutImoveisInput = {
    id?: number
    nome: string
    subtipos_imovel?: subtipos_imovelUncheckedCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelCreateOrConnectWithoutImoveisInput = {
    where: tipos_imovelWhereUniqueInput
    create: XOR<tipos_imovelCreateWithoutImoveisInput, tipos_imovelUncheckedCreateWithoutImoveisInput>
  }

  export type imovel_caracteristicasCreateWithoutImoveisInput = {
    caracteristicas: caracteristicasCreateNestedOneWithoutImovel_caracteristicasInput
  }

  export type imovel_caracteristicasUncheckedCreateWithoutImoveisInput = {
    id?: number
    caracteristica_id: number
  }

  export type imovel_caracteristicasCreateOrConnectWithoutImoveisInput = {
    where: imovel_caracteristicasWhereUniqueInput
    create: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput>
  }

  export type imovel_caracteristicasCreateManyImoveisInputEnvelope = {
    data: imovel_caracteristicasCreateManyImoveisInput | imovel_caracteristicasCreateManyImoveisInput[]
    skipDuplicates?: boolean
  }

  export type favoritosUpsertWithWhereUniqueWithoutImoveisInput = {
    where: favoritosWhereUniqueInput
    update: XOR<favoritosUpdateWithoutImoveisInput, favoritosUncheckedUpdateWithoutImoveisInput>
    create: XOR<favoritosCreateWithoutImoveisInput, favoritosUncheckedCreateWithoutImoveisInput>
  }

  export type favoritosUpdateWithWhereUniqueWithoutImoveisInput = {
    where: favoritosWhereUniqueInput
    data: XOR<favoritosUpdateWithoutImoveisInput, favoritosUncheckedUpdateWithoutImoveisInput>
  }

  export type favoritosUpdateManyWithWhereWithoutImoveisInput = {
    where: favoritosScalarWhereInput
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyWithoutImoveisInput>
  }

  export type favoritosScalarWhereInput = {
    AND?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
    OR?: favoritosScalarWhereInput[]
    NOT?: favoritosScalarWhereInput | favoritosScalarWhereInput[]
    id?: IntFilter<"favoritos"> | number
    usuario_id?: IntFilter<"favoritos"> | number
    imovel_id?: IntFilter<"favoritos"> | number
    data_cadastro?: DateTimeNullableFilter<"favoritos"> | Date | string | null
  }

  export type corretoresUpsertWithoutImoveisInput = {
    update: XOR<corretoresUpdateWithoutImoveisInput, corretoresUncheckedUpdateWithoutImoveisInput>
    create: XOR<corretoresCreateWithoutImoveisInput, corretoresUncheckedCreateWithoutImoveisInput>
    where?: corretoresWhereInput
  }

  export type corretoresUpdateToOneWithWhereWithoutImoveisInput = {
    where?: corretoresWhereInput
    data: XOR<corretoresUpdateWithoutImoveisInput, corretoresUncheckedUpdateWithoutImoveisInput>
  }

  export type corretoresUpdateWithoutImoveisInput = {
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imobiliarias?: imobiliariasUpdateOneWithoutCorretoresNestedInput
    usuarios?: usuariosUpdateOneRequiredWithoutCorretoresNestedInput
  }

  export type corretoresUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_imobiliaria?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuariosUpsertWithoutImoveisInput = {
    update: XOR<usuariosUpdateWithoutImoveisInput, usuariosUncheckedUpdateWithoutImoveisInput>
    create: XOR<usuariosCreateWithoutImoveisInput, usuariosUncheckedCreateWithoutImoveisInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutImoveisInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutImoveisInput, usuariosUncheckedUpdateWithoutImoveisInput>
  }

  export type usuariosUpdateWithoutImoveisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUpdateOneWithoutUsuariosNestedInput
    favoritos?: favoritosUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    corretores?: corretoresUncheckedUpdateOneWithoutUsuariosNestedInput
    favoritos?: favoritosUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type subtipos_imovelUpsertWithoutImoveisInput = {
    update: XOR<subtipos_imovelUpdateWithoutImoveisInput, subtipos_imovelUncheckedUpdateWithoutImoveisInput>
    create: XOR<subtipos_imovelCreateWithoutImoveisInput, subtipos_imovelUncheckedCreateWithoutImoveisInput>
    where?: subtipos_imovelWhereInput
  }

  export type subtipos_imovelUpdateToOneWithWhereWithoutImoveisInput = {
    where?: subtipos_imovelWhereInput
    data: XOR<subtipos_imovelUpdateWithoutImoveisInput, subtipos_imovelUncheckedUpdateWithoutImoveisInput>
  }

  export type subtipos_imovelUpdateWithoutImoveisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutSubtipos_imovelNestedInput
  }

  export type subtipos_imovelUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo_id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_imovelUpsertWithoutImoveisInput = {
    update: XOR<tipos_imovelUpdateWithoutImoveisInput, tipos_imovelUncheckedUpdateWithoutImoveisInput>
    create: XOR<tipos_imovelCreateWithoutImoveisInput, tipos_imovelUncheckedCreateWithoutImoveisInput>
    where?: tipos_imovelWhereInput
  }

  export type tipos_imovelUpdateToOneWithWhereWithoutImoveisInput = {
    where?: tipos_imovelWhereInput
    data: XOR<tipos_imovelUpdateWithoutImoveisInput, tipos_imovelUncheckedUpdateWithoutImoveisInput>
  }

  export type tipos_imovelUpdateWithoutImoveisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    subtipos_imovel?: subtipos_imovelUpdateManyWithoutTipos_imovelNestedInput
  }

  export type tipos_imovelUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    subtipos_imovel?: subtipos_imovelUncheckedUpdateManyWithoutTipos_imovelNestedInput
  }

  export type imovel_caracteristicasUpsertWithWhereUniqueWithoutImoveisInput = {
    where: imovel_caracteristicasWhereUniqueInput
    update: XOR<imovel_caracteristicasUpdateWithoutImoveisInput, imovel_caracteristicasUncheckedUpdateWithoutImoveisInput>
    create: XOR<imovel_caracteristicasCreateWithoutImoveisInput, imovel_caracteristicasUncheckedCreateWithoutImoveisInput>
  }

  export type imovel_caracteristicasUpdateWithWhereUniqueWithoutImoveisInput = {
    where: imovel_caracteristicasWhereUniqueInput
    data: XOR<imovel_caracteristicasUpdateWithoutImoveisInput, imovel_caracteristicasUncheckedUpdateWithoutImoveisInput>
  }

  export type imovel_caracteristicasUpdateManyWithWhereWithoutImoveisInput = {
    where: imovel_caracteristicasScalarWhereInput
    data: XOR<imovel_caracteristicasUpdateManyMutationInput, imovel_caracteristicasUncheckedUpdateManyWithoutImoveisInput>
  }

  export type caracteristicasCreateWithoutImovel_caracteristicasInput = {
    nome: string
  }

  export type caracteristicasUncheckedCreateWithoutImovel_caracteristicasInput = {
    id?: number
    nome: string
  }

  export type caracteristicasCreateOrConnectWithoutImovel_caracteristicasInput = {
    where: caracteristicasWhereUniqueInput
    create: XOR<caracteristicasCreateWithoutImovel_caracteristicasInput, caracteristicasUncheckedCreateWithoutImovel_caracteristicasInput>
  }

  export type imoveisCreateWithoutImovel_caracteristicasInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutImovel_caracteristicasInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutImovel_caracteristicasInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutImovel_caracteristicasInput, imoveisUncheckedCreateWithoutImovel_caracteristicasInput>
  }

  export type caracteristicasUpsertWithoutImovel_caracteristicasInput = {
    update: XOR<caracteristicasUpdateWithoutImovel_caracteristicasInput, caracteristicasUncheckedUpdateWithoutImovel_caracteristicasInput>
    create: XOR<caracteristicasCreateWithoutImovel_caracteristicasInput, caracteristicasUncheckedCreateWithoutImovel_caracteristicasInput>
    where?: caracteristicasWhereInput
  }

  export type caracteristicasUpdateToOneWithWhereWithoutImovel_caracteristicasInput = {
    where?: caracteristicasWhereInput
    data: XOR<caracteristicasUpdateWithoutImovel_caracteristicasInput, caracteristicasUncheckedUpdateWithoutImovel_caracteristicasInput>
  }

  export type caracteristicasUpdateWithoutImovel_caracteristicasInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type caracteristicasUncheckedUpdateWithoutImovel_caracteristicasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type imoveisUpsertWithoutImovel_caracteristicasInput = {
    update: XOR<imoveisUpdateWithoutImovel_caracteristicasInput, imoveisUncheckedUpdateWithoutImovel_caracteristicasInput>
    create: XOR<imoveisCreateWithoutImovel_caracteristicasInput, imoveisUncheckedCreateWithoutImovel_caracteristicasInput>
    where?: imoveisWhereInput
  }

  export type imoveisUpdateToOneWithWhereWithoutImovel_caracteristicasInput = {
    where?: imoveisWhereInput
    data: XOR<imoveisUpdateWithoutImovel_caracteristicasInput, imoveisUncheckedUpdateWithoutImovel_caracteristicasInput>
  }

  export type imoveisUpdateWithoutImovel_caracteristicasInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutImovel_caracteristicasInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type estadosCreateWithoutRegioesInput = {
    id: number
    sigla: string
    nome: string
  }

  export type estadosUncheckedCreateWithoutRegioesInput = {
    id: number
    sigla: string
    nome: string
  }

  export type estadosCreateOrConnectWithoutRegioesInput = {
    where: estadosWhereUniqueInput
    create: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput>
  }

  export type estadosCreateManyRegioesInputEnvelope = {
    data: estadosCreateManyRegioesInput | estadosCreateManyRegioesInput[]
    skipDuplicates?: boolean
  }

  export type estadosUpsertWithWhereUniqueWithoutRegioesInput = {
    where: estadosWhereUniqueInput
    update: XOR<estadosUpdateWithoutRegioesInput, estadosUncheckedUpdateWithoutRegioesInput>
    create: XOR<estadosCreateWithoutRegioesInput, estadosUncheckedCreateWithoutRegioesInput>
  }

  export type estadosUpdateWithWhereUniqueWithoutRegioesInput = {
    where: estadosWhereUniqueInput
    data: XOR<estadosUpdateWithoutRegioesInput, estadosUncheckedUpdateWithoutRegioesInput>
  }

  export type estadosUpdateManyWithWhereWithoutRegioesInput = {
    where: estadosScalarWhereInput
    data: XOR<estadosUpdateManyMutationInput, estadosUncheckedUpdateManyWithoutRegioesInput>
  }

  export type estadosScalarWhereInput = {
    AND?: estadosScalarWhereInput | estadosScalarWhereInput[]
    OR?: estadosScalarWhereInput[]
    NOT?: estadosScalarWhereInput | estadosScalarWhereInput[]
    id?: IntFilter<"estados"> | number
    sigla?: StringFilter<"estados"> | string
    nome?: StringFilter<"estados"> | string
    regiao_id?: IntFilter<"estados"> | number
  }

  export type imoveisCreateWithoutSubtipos_imovelInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutSubtipos_imovelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutSubtipos_imovelInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput>
  }

  export type imoveisCreateManySubtipos_imovelInputEnvelope = {
    data: imoveisCreateManySubtipos_imovelInput | imoveisCreateManySubtipos_imovelInput[]
    skipDuplicates?: boolean
  }

  export type tipos_imovelCreateWithoutSubtipos_imovelInput = {
    nome: string
    imoveis?: imoveisCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelUncheckedCreateWithoutSubtipos_imovelInput = {
    id?: number
    nome: string
    imoveis?: imoveisUncheckedCreateNestedManyWithoutTipos_imovelInput
  }

  export type tipos_imovelCreateOrConnectWithoutSubtipos_imovelInput = {
    where: tipos_imovelWhereUniqueInput
    create: XOR<tipos_imovelCreateWithoutSubtipos_imovelInput, tipos_imovelUncheckedCreateWithoutSubtipos_imovelInput>
  }

  export type imoveisUpsertWithWhereUniqueWithoutSubtipos_imovelInput = {
    where: imoveisWhereUniqueInput
    update: XOR<imoveisUpdateWithoutSubtipos_imovelInput, imoveisUncheckedUpdateWithoutSubtipos_imovelInput>
    create: XOR<imoveisCreateWithoutSubtipos_imovelInput, imoveisUncheckedCreateWithoutSubtipos_imovelInput>
  }

  export type imoveisUpdateWithWhereUniqueWithoutSubtipos_imovelInput = {
    where: imoveisWhereUniqueInput
    data: XOR<imoveisUpdateWithoutSubtipos_imovelInput, imoveisUncheckedUpdateWithoutSubtipos_imovelInput>
  }

  export type imoveisUpdateManyWithWhereWithoutSubtipos_imovelInput = {
    where: imoveisScalarWhereInput
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyWithoutSubtipos_imovelInput>
  }

  export type tipos_imovelUpsertWithoutSubtipos_imovelInput = {
    update: XOR<tipos_imovelUpdateWithoutSubtipos_imovelInput, tipos_imovelUncheckedUpdateWithoutSubtipos_imovelInput>
    create: XOR<tipos_imovelCreateWithoutSubtipos_imovelInput, tipos_imovelUncheckedCreateWithoutSubtipos_imovelInput>
    where?: tipos_imovelWhereInput
  }

  export type tipos_imovelUpdateToOneWithWhereWithoutSubtipos_imovelInput = {
    where?: tipos_imovelWhereInput
    data: XOR<tipos_imovelUpdateWithoutSubtipos_imovelInput, tipos_imovelUncheckedUpdateWithoutSubtipos_imovelInput>
  }

  export type tipos_imovelUpdateWithoutSubtipos_imovelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUpdateManyWithoutTipos_imovelNestedInput
  }

  export type tipos_imovelUncheckedUpdateWithoutSubtipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUncheckedUpdateManyWithoutTipos_imovelNestedInput
  }

  export type imoveisCreateWithoutTipos_imovelInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    usuarios?: usuariosCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutTipos_imovelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutTipos_imovelInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput>
  }

  export type imoveisCreateManyTipos_imovelInputEnvelope = {
    data: imoveisCreateManyTipos_imovelInput | imoveisCreateManyTipos_imovelInput[]
    skipDuplicates?: boolean
  }

  export type subtipos_imovelCreateWithoutTipos_imovelInput = {
    nome: string
    nome_exibicao: string
    imoveis?: imoveisCreateNestedManyWithoutSubtipos_imovelInput
  }

  export type subtipos_imovelUncheckedCreateWithoutTipos_imovelInput = {
    id?: number
    nome: string
    nome_exibicao: string
    imoveis?: imoveisUncheckedCreateNestedManyWithoutSubtipos_imovelInput
  }

  export type subtipos_imovelCreateOrConnectWithoutTipos_imovelInput = {
    where: subtipos_imovelWhereUniqueInput
    create: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput>
  }

  export type subtipos_imovelCreateManyTipos_imovelInputEnvelope = {
    data: subtipos_imovelCreateManyTipos_imovelInput | subtipos_imovelCreateManyTipos_imovelInput[]
    skipDuplicates?: boolean
  }

  export type imoveisUpsertWithWhereUniqueWithoutTipos_imovelInput = {
    where: imoveisWhereUniqueInput
    update: XOR<imoveisUpdateWithoutTipos_imovelInput, imoveisUncheckedUpdateWithoutTipos_imovelInput>
    create: XOR<imoveisCreateWithoutTipos_imovelInput, imoveisUncheckedCreateWithoutTipos_imovelInput>
  }

  export type imoveisUpdateWithWhereUniqueWithoutTipos_imovelInput = {
    where: imoveisWhereUniqueInput
    data: XOR<imoveisUpdateWithoutTipos_imovelInput, imoveisUncheckedUpdateWithoutTipos_imovelInput>
  }

  export type imoveisUpdateManyWithWhereWithoutTipos_imovelInput = {
    where: imoveisScalarWhereInput
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyWithoutTipos_imovelInput>
  }

  export type subtipos_imovelUpsertWithWhereUniqueWithoutTipos_imovelInput = {
    where: subtipos_imovelWhereUniqueInput
    update: XOR<subtipos_imovelUpdateWithoutTipos_imovelInput, subtipos_imovelUncheckedUpdateWithoutTipos_imovelInput>
    create: XOR<subtipos_imovelCreateWithoutTipos_imovelInput, subtipos_imovelUncheckedCreateWithoutTipos_imovelInput>
  }

  export type subtipos_imovelUpdateWithWhereUniqueWithoutTipos_imovelInput = {
    where: subtipos_imovelWhereUniqueInput
    data: XOR<subtipos_imovelUpdateWithoutTipos_imovelInput, subtipos_imovelUncheckedUpdateWithoutTipos_imovelInput>
  }

  export type subtipos_imovelUpdateManyWithWhereWithoutTipos_imovelInput = {
    where: subtipos_imovelScalarWhereInput
    data: XOR<subtipos_imovelUpdateManyMutationInput, subtipos_imovelUncheckedUpdateManyWithoutTipos_imovelInput>
  }

  export type subtipos_imovelScalarWhereInput = {
    AND?: subtipos_imovelScalarWhereInput | subtipos_imovelScalarWhereInput[]
    OR?: subtipos_imovelScalarWhereInput[]
    NOT?: subtipos_imovelScalarWhereInput | subtipos_imovelScalarWhereInput[]
    id?: IntFilter<"subtipos_imovel"> | number
    tipo_id?: IntFilter<"subtipos_imovel"> | number
    nome?: StringFilter<"subtipos_imovel"> | string
    nome_exibicao?: StringFilter<"subtipos_imovel"> | string
  }

  export type corretoresCreateWithoutUsuariosInput = {
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    imobiliarias?: imobiliariasCreateNestedOneWithoutCorretoresInput
    imoveis?: imoveisCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresUncheckedCreateWithoutUsuariosInput = {
    id?: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
    id_imobiliaria?: number | null
    imoveis?: imoveisUncheckedCreateNestedManyWithoutCorretoresInput
  }

  export type corretoresCreateOrConnectWithoutUsuariosInput = {
    where: corretoresWhereUniqueInput
    create: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
  }

  export type favoritosCreateWithoutUsuariosInput = {
    data_cadastro?: Date | string | null
    imoveis: imoveisCreateNestedOneWithoutFavoritosInput
  }

  export type favoritosUncheckedCreateWithoutUsuariosInput = {
    id?: number
    imovel_id: number
    data_cadastro?: Date | string | null
  }

  export type favoritosCreateOrConnectWithoutUsuariosInput = {
    where: favoritosWhereUniqueInput
    create: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput>
  }

  export type favoritosCreateManyUsuariosInputEnvelope = {
    data: favoritosCreateManyUsuariosInput | favoritosCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type imoveisCreateWithoutUsuariosInput = {
    titulo: string
    descricao?: string | null
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosCreateNestedManyWithoutImoveisInput
    corretores?: corretoresCreateNestedOneWithoutImoveisInput
    subtipos_imovel: subtipos_imovelCreateNestedOneWithoutImoveisInput
    tipos_imovel: tipos_imovelCreateNestedOneWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasCreateNestedManyWithoutImoveisInput
  }

  export type imoveisUncheckedCreateWithoutUsuariosInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedCreateNestedManyWithoutImoveisInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedCreateNestedManyWithoutImoveisInput
  }

  export type imoveisCreateOrConnectWithoutUsuariosInput = {
    where: imoveisWhereUniqueInput
    create: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput>
  }

  export type imoveisCreateManyUsuariosInputEnvelope = {
    data: imoveisCreateManyUsuariosInput | imoveisCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type corretoresUpsertWithoutUsuariosInput = {
    update: XOR<corretoresUpdateWithoutUsuariosInput, corretoresUncheckedUpdateWithoutUsuariosInput>
    create: XOR<corretoresCreateWithoutUsuariosInput, corretoresUncheckedCreateWithoutUsuariosInput>
    where?: corretoresWhereInput
  }

  export type corretoresUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: corretoresWhereInput
    data: XOR<corretoresUpdateWithoutUsuariosInput, corretoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type corretoresUpdateWithoutUsuariosInput = {
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imobiliarias?: imobiliariasUpdateOneWithoutCorretoresNestedInput
    imoveis?: imoveisUpdateManyWithoutCorretoresNestedInput
  }

  export type corretoresUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_imobiliaria?: NullableIntFieldUpdateOperationsInput | number | null
    imoveis?: imoveisUncheckedUpdateManyWithoutCorretoresNestedInput
  }

  export type favoritosUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: favoritosWhereUniqueInput
    update: XOR<favoritosUpdateWithoutUsuariosInput, favoritosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<favoritosCreateWithoutUsuariosInput, favoritosUncheckedCreateWithoutUsuariosInput>
  }

  export type favoritosUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: favoritosWhereUniqueInput
    data: XOR<favoritosUpdateWithoutUsuariosInput, favoritosUncheckedUpdateWithoutUsuariosInput>
  }

  export type favoritosUpdateManyWithWhereWithoutUsuariosInput = {
    where: favoritosScalarWhereInput
    data: XOR<favoritosUpdateManyMutationInput, favoritosUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type imoveisUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: imoveisWhereUniqueInput
    update: XOR<imoveisUpdateWithoutUsuariosInput, imoveisUncheckedUpdateWithoutUsuariosInput>
    create: XOR<imoveisCreateWithoutUsuariosInput, imoveisUncheckedCreateWithoutUsuariosInput>
  }

  export type imoveisUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: imoveisWhereUniqueInput
    data: XOR<imoveisUpdateWithoutUsuariosInput, imoveisUncheckedUpdateWithoutUsuariosInput>
  }

  export type imoveisUpdateManyWithWhereWithoutUsuariosInput = {
    where: imoveisScalarWhereInput
    data: XOR<imoveisUpdateManyMutationInput, imoveisUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type imovel_caracteristicasCreateManyCaracteristicasInput = {
    id?: number
    imovel_id: number
  }

  export type imovel_caracteristicasUpdateWithoutCaracteristicasInput = {
    imoveis?: imoveisUpdateOneRequiredWithoutImovel_caracteristicasNestedInput
  }

  export type imovel_caracteristicasUncheckedUpdateWithoutCaracteristicasInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
  }

  export type imovel_caracteristicasUncheckedUpdateManyWithoutCaracteristicasInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
  }

  export type imoveisCreateManyCorretoresInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
  }

  export type imoveisUpdateWithoutCorretoresInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutCorretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateManyWithoutCorretoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type corretoresCreateManyImobiliariasInput = {
    id?: number
    usuario_id: number
    creci: string
    creci_uf: string
    data_registro: Date | string
    bio?: string | null
    ativo?: boolean | null
  }

  export type corretoresUpdateWithoutImobiliariasInput = {
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarios?: usuariosUpdateOneRequiredWithoutCorretoresNestedInput
    imoveis?: imoveisUpdateManyWithoutCorretoresNestedInput
  }

  export type corretoresUncheckedUpdateWithoutImobiliariasInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imoveis?: imoveisUncheckedUpdateManyWithoutCorretoresNestedInput
  }

  export type corretoresUncheckedUpdateManyWithoutImobiliariasInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    creci?: StringFieldUpdateOperationsInput | string
    creci_uf?: StringFieldUpdateOperationsInput | string
    data_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type favoritosCreateManyImoveisInput = {
    id?: number
    usuario_id: number
    data_cadastro?: Date | string | null
  }

  export type imovel_caracteristicasCreateManyImoveisInput = {
    id?: number
    caracteristica_id: number
  }

  export type favoritosUpdateWithoutImoveisInput = {
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritosUncheckedUpdateManyWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imovel_caracteristicasUpdateWithoutImoveisInput = {
    caracteristicas?: caracteristicasUpdateOneRequiredWithoutImovel_caracteristicasNestedInput
  }

  export type imovel_caracteristicasUncheckedUpdateWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracteristica_id?: IntFieldUpdateOperationsInput | number
  }

  export type imovel_caracteristicasUncheckedUpdateManyWithoutImoveisInput = {
    id?: IntFieldUpdateOperationsInput | number
    caracteristica_id?: IntFieldUpdateOperationsInput | number
  }

  export type estadosCreateManyRegioesInput = {
    id: number
    sigla: string
    nome: string
  }

  export type estadosUpdateWithoutRegioesInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type estadosUncheckedUpdateWithoutRegioesInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type estadosUncheckedUpdateManyWithoutRegioesInput = {
    id?: IntFieldUpdateOperationsInput | number
    sigla?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type imoveisCreateManySubtipos_imovelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
  }

  export type imoveisUpdateWithoutSubtipos_imovelInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutSubtipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateManyWithoutSubtipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type imoveisCreateManyTipos_imovelInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_proprietario?: number | null
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
  }

  export type subtipos_imovelCreateManyTipos_imovelInput = {
    id?: number
    nome: string
    nome_exibicao: string
  }

  export type imoveisUpdateWithoutTipos_imovelInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    usuarios?: usuariosUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutTipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateManyWithoutTipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_proprietario?: NullableIntFieldUpdateOperationsInput | number | null
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type subtipos_imovelUpdateWithoutTipos_imovelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUpdateManyWithoutSubtipos_imovelNestedInput
  }

  export type subtipos_imovelUncheckedUpdateWithoutTipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
    imoveis?: imoveisUncheckedUpdateManyWithoutSubtipos_imovelNestedInput
  }

  export type subtipos_imovelUncheckedUpdateManyWithoutTipos_imovelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_exibicao?: StringFieldUpdateOperationsInput | string
  }

  export type favoritosCreateManyUsuariosInput = {
    id?: number
    imovel_id: number
    data_cadastro?: Date | string | null
  }

  export type imoveisCreateManyUsuariosInput = {
    id?: number
    titulo: string
    descricao?: string | null
    subtipo_id: number
    tipoimovel_id: number
    preco: Decimal | DecimalJsLike | number | string
    area?: number | null
    quartos?: number | null
    banheiros?: number | null
    vagas_garagem?: number | null
    endereco: string
    numero?: string | null
    complemento?: string | null
    bairro: string
    cidade: string
    estado: string
    cep?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    data_cadastro?: Date | string | null
    data_atualizacao?: Date | string | null
    disponivel?: boolean | null
    destaque?: boolean | null
    imagens?: imoveisCreateimagensInput | string[]
    id_corretor?: number | null
    area_util_hectares?: Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: Decimal | DecimalJsLike | number | string | null
    salas?: number | null
    andar?: number | null
    area_privativa?: Decimal | DecimalJsLike | number | string | null
    area_comum?: Decimal | DecimalJsLike | number | string | null
    suites?: number | null
    mobiliado?: boolean | null
    aceita_animais?: boolean | null
    views?: number | null
    estado_id?: number | null
    valor_iptu?: Decimal | DecimalJsLike | number | string | null
    valor_condominio?: Decimal | DecimalJsLike | number | string | null
  }

  export type favoritosUpdateWithoutUsuariosInput = {
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imoveis?: imoveisUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type favoritosUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritosUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    imovel_id?: IntFieldUpdateOperationsInput | number
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imoveisUpdateWithoutUsuariosInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUpdateManyWithoutImoveisNestedInput
    corretores?: corretoresUpdateOneWithoutImoveisNestedInput
    subtipos_imovel?: subtipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    tipos_imovel?: tipos_imovelUpdateOneRequiredWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    favoritos?: favoritosUncheckedUpdateManyWithoutImoveisNestedInput
    imovel_caracteristicas?: imovel_caracteristicasUncheckedUpdateManyWithoutImoveisNestedInput
  }

  export type imoveisUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    subtipo_id?: IntFieldUpdateOperationsInput | number
    tipoimovel_id?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    area?: NullableIntFieldUpdateOperationsInput | number | null
    quartos?: NullableIntFieldUpdateOperationsInput | number | null
    banheiros?: NullableIntFieldUpdateOperationsInput | number | null
    vagas_garagem?: NullableIntFieldUpdateOperationsInput | number | null
    endereco?: StringFieldUpdateOperationsInput | string
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    data_cadastro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_atualizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disponivel?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destaque?: NullableBoolFieldUpdateOperationsInput | boolean | null
    imagens?: imoveisUpdateimagensInput | string[]
    id_corretor?: NullableIntFieldUpdateOperationsInput | number | null
    area_util_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_total_hectares?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salas?: NullableIntFieldUpdateOperationsInput | number | null
    andar?: NullableIntFieldUpdateOperationsInput | number | null
    area_privativa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    area_comum?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    suites?: NullableIntFieldUpdateOperationsInput | number | null
    mobiliado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aceita_animais?: NullableBoolFieldUpdateOperationsInput | boolean | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    valor_iptu?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valor_condominio?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}