
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CaracteristicasScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.CorretoresScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  creci: 'creci',
  creci_uf: 'creci_uf',
  data_registro: 'data_registro',
  bio: 'bio',
  ativo: 'ativo',
  id_imobiliaria: 'id_imobiliaria'
};

exports.Prisma.EstadosScalarFieldEnum = {
  id: 'id',
  sigla: 'sigla',
  nome: 'nome',
  regiao_id: 'regiao_id'
};

exports.Prisma.FavoritosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  imovel_id: 'imovel_id',
  data_cadastro: 'data_cadastro'
};

exports.Prisma.ImobiliariasScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cnpj: 'cnpj',
  telefone: 'telefone',
  email: 'email',
  endereco: 'endereco',
  data_cadastro: 'data_cadastro'
};

exports.Prisma.ImoveisScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descricao: 'descricao',
  subtipo_id: 'subtipo_id',
  tipoimovel_id: 'tipoimovel_id',
  preco: 'preco',
  area: 'area',
  quartos: 'quartos',
  banheiros: 'banheiros',
  vagas_garagem: 'vagas_garagem',
  endereco: 'endereco',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  estado: 'estado',
  cep: 'cep',
  latitude: 'latitude',
  longitude: 'longitude',
  data_cadastro: 'data_cadastro',
  data_atualizacao: 'data_atualizacao',
  disponivel: 'disponivel',
  destaque: 'destaque',
  imagens: 'imagens',
  id_proprietario: 'id_proprietario',
  id_corretor: 'id_corretor',
  area_util_hectares: 'area_util_hectares',
  area_total_hectares: 'area_total_hectares',
  salas: 'salas',
  andar: 'andar',
  area_privativa: 'area_privativa',
  area_comum: 'area_comum',
  suites: 'suites',
  mobiliado: 'mobiliado',
  aceita_animais: 'aceita_animais',
  views: 'views',
  estado_id: 'estado_id',
  valor_iptu: 'valor_iptu',
  valor_condominio: 'valor_condominio'
};

exports.Prisma.Imovel_caracteristicasScalarFieldEnum = {
  id: 'id',
  imovel_id: 'imovel_id',
  caracteristica_id: 'caracteristica_id'
};

exports.Prisma.RegioesScalarFieldEnum = {
  id: 'id',
  sigla: 'sigla',
  nome: 'nome'
};

exports.Prisma.Subtipos_imovelScalarFieldEnum = {
  id: 'id',
  tipo_id: 'tipo_id',
  nome: 'nome',
  nome_exibicao: 'nome_exibicao'
};

exports.Prisma.Tipos_imovelScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  telefone: 'telefone',
  cpf: 'cpf',
  tipo: 'tipo',
  data_cadastro: 'data_cadastro',
  data_nascimento: 'data_nascimento'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  caracteristicas: 'caracteristicas',
  corretores: 'corretores',
  estados: 'estados',
  favoritos: 'favoritos',
  imobiliarias: 'imobiliarias',
  imoveis: 'imoveis',
  imovel_caracteristicas: 'imovel_caracteristicas',
  regioes: 'regioes',
  subtipos_imovel: 'subtipos_imovel',
  tipos_imovel: 'tipos_imovel',
  usuarios: 'usuarios'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
