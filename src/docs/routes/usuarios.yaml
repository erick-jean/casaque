/usuarios:
  get:
    summary: Retorna todos os usuários
    tags: [Usuário]
    responses:
      200:
        description: Lista de usuários retornada com sucesso
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Usuario"

  post:
    summary: Cria um novo usuário
    tags: [Usuário]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UsuarioInput"
    responses:
      201:
        description: Usuário criado com sucesso
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsuarioInput"
        

/usuario/{id}:
  get:
    summary: Retorna um usuário pelo ID
    tags: [Usuário]
    parameters:
      - name: id
        in: path
        description: ID do usuário
        required: true
        schema:
          type: integer
    responses:
      200:
        description: Usuário retornado com sucesso
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
            example:
              id: 1
              nome: "João Silva"
              email: "joao@example.com"
              telefone: "1234567890"
              cpf: "12345678900"
              tipo: "admin"
              data_cadastro: "2022-01-01T00:00:00.000Z"
              data_nascimento: "1990-01-01T00:00:00.000Z"
      404:
        description: Usuário não encontrado
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "Usuário não encontrado"
      500:
        description: Erro interno do servidor
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "Erro interno no servidor"
  
  delete:
    summary: Exclui um usuário pelo ID
    tags: [Usuário]
    parameters:
      - name: id
        in: path
        description: ID do usuário
        required: true
        schema:
          type: integer
    responses:
      200:
        description: Usuário excluído com sucesso
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
            example:
              message: "Usuário excluído com sucesso"
      400:
        description: ID inválido
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "ID inválido"
      404:
        description: Usuário não encontrado
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "Usuário não encontrado"
      500:
        description: Erro interno do servidor
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "Erro interno no servidor"

  patch:
    summary: Atualiza um usuário pelo ID
    tags: [Usuário]
    parameters:
      - name: id
        in: path
        description: ID do usuário
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UsuarioInput"
    responses:
      200:
        description: Usuário atualizado com sucesso
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
            example:
              id: 1
              nome: "João Silva"
              email: "joao@example.com"
              telefone: "1234567890"
              cpf: "12345678900"
              tipo: "admin"

/usuario/{id}/senha:
  patch:
    summary: Atualiza a senha de um usuário pelo ID
    tags: [Usuário]
    parameters:
      - name: id
        in: path
        required: true
        description: ID do usuário
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdatePasswordInput"
    responses:
      200:
        description: Senha atualizada com sucesso
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
            example:
              message: "Senha atualizada com sucesso"
      400:
        description: ID inválido
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "ID inválido"
      404:
        description: Usuário não encontrado
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
            example:
              erro: "Usuário não encontrado"
      500:
        description: Erro interno do servidor
        content:
          application/json:
            schema:
              type: object
              properties:
                erro:
                  type: string
